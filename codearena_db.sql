-- phpMyAdmin SQL Dump
-- version 5.2.0
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1:3306
-- Generation Time: Oct 18, 2025 at 03:07 PM
-- Server version: 8.0.30
-- PHP Version: 8.1.9

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `code-arena`
--

-- --------------------------------------------------------

--
-- Table structure for table `attempts`
--

CREATE TABLE `attempts` (
  `id` int NOT NULL,
  `user_id` int NOT NULL,
  `problem_id` int NOT NULL,
  `language` varchar(50) NOT NULL,
  `code` text NOT NULL,
  `status` varchar(50) NOT NULL,
  `runTime` varchar(45) NOT NULL,
  `memory` varchar(45) NOT NULL,
  `tests_passed` int NOT NULL,
  `total_tests` int NOT NULL,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `attempts`
--

INSERT INTO `attempts` (`id`, `user_id`, `problem_id`, `language`, `code`, `status`, `runTime`, `memory`, `tests_passed`, `total_tests`, `created_at`) VALUES
(1, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '40', '59980', 10, 53, '2025-09-28 19:49:55'),
(2, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '34', '60404', 53, 53, '2025-09-29 15:54:00'),
(3, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '34', '60376', 53, 53, '2025-09-29 15:54:18'),
(4, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '40', '64588', 53, 53, '2025-09-29 15:54:22'),
(5, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '39', '62312', 53, 53, '2025-09-29 15:56:22'),
(6, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '40', '62268', 53, 53, '2025-09-29 16:09:48'),
(7, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '39', '63300', 53, 53, '2025-09-29 16:15:50'),
(8, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '40', '62200', 53, 53, '2025-09-29 16:26:06'),
(9, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a - b)', 'Wrong Answer', '40', '61492', 1, 53, '2025-09-29 16:26:23'),
(10, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a -b)', 'Wrong Answer', '40', '61780', 1, 53, '2025-09-29 16:34:58'),
(11, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a -b)', 'Wrong Answer', '42', '61968', 1, 53, '2025-09-29 16:35:25'),
(12, 1, 1, 'python3', '.then(data => {\r\n    const overlay = document.getElementById(\'loadingOverlay\');\r\n    if (overlay) overlay.remove();\r\n\r\n    const loadRow = document.getElementById(\'loadingRow\');\r\n    if (loadRow) loadRow.remove();\r\n\r\n    submitBtn.disabled = false;\r\n    submitBtn.textContent = \'Yechimni yuborish\';\r\n\r\n    if (data.success) {\r\n        // muvaffaqiyatli bo‘lsa — hech narsa chiqmasin\r\n        setTimeout(() => {\r\n            location.reload();\r\n        }, 1500);\r\n    } else {\r\n        // faqat xatolik bo‘lsa toast chiqaramiz\r\n        if (typeof Swal !== \'undefined\') {\r\n            const Toast = Swal.mixin({\r\n                toast: true,\r\n                position: \'top-end\',\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                timerProgressBar: true\r\n            });\r\n            Toast.fire({\r\n                icon: \'error\',\r\n                title: data.message\r\n            });\r\n        } else {\r\n            // fallback oddiy console yoki alert\r\n            console.error(\"❌ \" + data.message);\r\n        }\r\n    }\r\n})', 'Runtime Error', '42', '61420', 0, 53, '2025-09-29 16:35:45'),
(13, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '40', '62160', 53, 53, '2025-09-29 16:39:22'),
(14, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '38', '62056', 53, 53, '2025-09-29 16:40:51'),
(15, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '40', '61732', 53, 53, '2025-09-29 16:41:41'),
(16, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '39', '61864', 53, 53, '2025-09-29 16:43:31'),
(17, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '42', '62380', 53, 53, '2025-09-29 17:01:34'),
(18, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a - b)', 'Wrong Answer', '40', '63028', 1, 53, '2025-09-29 17:02:30'),
(19, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a - b)', 'Wrong Answer', '40', '63240', 1, 53, '2025-09-29 17:03:24'),
(20, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a - )', 'Runtime Error', '40', '63392', 0, 53, '2025-09-29 17:03:57'),
(21, 1, 1, 'python3', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '42', '63856', 53, 53, '2025-09-29 18:44:49'),
(22, 1, 8, 'python3', '#include<iostream> \r\nusing namespace std; \r\nint main(){\r\n   int a, b;\r\n   cin>>a>>b;\r\ncout<<a+b;\r\nreturn 0;\r\n}\r\n', 'Runtime Error', '40', '56444', 0, 53, '2025-09-29 23:37:43'),
(23, 1, 8, 'cpp', '#include<iostream> \r\nusing namespace std; \r\nint main(){\r\n   int a, b;\r\n   cin>>a>>b;\r\ncout<<a+b;\r\nreturn 0;\r\n}\r\n', 'Accept', '15', '58888', 53, 53, '2025-09-29 23:38:33'),
(24, 1, 8, 'cpp', '#include<iostream> \r\nusing namespace std; \r\nint main(){\r\n   int a, b;\r\n   cin>>a>>b;\r\ncout<<a+b;\r\nreturn 0;\r\n}\r\n', 'Accept', '17', '62028', 53, 53, '2025-09-30 00:33:09'),
(25, 1, 1, 'python', 'a, b = map(int, input().split())\r\nprint(a + b)', 'Accept', '39', '64192', 53, 53, '2025-10-02 06:59:32'),
(27, 1, 10, 'python', 'n = int(input())\r\nif n%2==0 and n>2:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")', 'Accept', '41', '67196', 100, 100, '2025-10-08 04:54:57'),
(28, 1, 10, 'python', 'n = int(input())\r\nif n%2==0 and n>2:\r\n    print(\"YE\")\r\nelse:\r\n    print(\"NO\")', 'Wrong Answer', '41', '67196', 2, 100, '2025-10-08 04:55:23'),
(29, 1, 10, 'python', 'n = int(input())\r\nif n % 2 == 0 and n != 2:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")', 'Accept', '42', '63948', 100, 100, '2025-10-08 05:04:50'),
(30, 1, 10, 'python', 'n = int(input())\r\nif n % 2 == 0:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")', 'Wrong Answer', '41', '66996', 100, 100, '2025-10-08 05:06:12'),
(31, 1, 10, 'python', 'n = int(input())\r\nif n%2==0:\r\n    print(\"YE\")\r\nelse:\r\n    print(\"NO\")', 'Wrong Answer', '42', '66996', 2, 100, '2025-10-08 05:06:36'),
(32, 1, 10, 'python', 'n = int(input())\r\nif n%2==0:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")', 'Wrong Answer', '40', '67660', 100, 100, '2025-10-08 05:14:07'),
(33, 1, 10, 'python', 'n = int(input())\r\nif n%2==0:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")', 'Wrong Answer', '40', '67820', 100, 100, '2025-10-08 05:15:13'),
(34, 1, 10, 'python', 'n = int(input())\r\nif n % 2 == 0:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")', 'Wrong Answer', '39', '68060', 100, 100, '2025-10-08 05:17:23'),
(35, 1, 10, 'python', 'n = int(input())\r\nif n%2==0:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")', 'Wrong Answer', '41', '67756', 100, 100, '2025-10-08 05:20:03'),
(36, 1, 11, 'python', 'print(sum(list(map(int,input().split()))))', 'Accept', '40', '68924', 100, 100, '2025-10-08 06:34:44'),
(37, 1, 12, 'python', 'n = int(input())\r\nx = 0\r\nfor i in range(n):\r\n    s = input()\r\n    if s[1]==\"+\":\r\n        x += 1\r\n    else:\r\n        x -= 1\r\nprint(x)', 'Runtime Error', '41', '65864', 0, 100, '2025-10-08 07:05:24'),
(38, 1, 12, 'python', 'n = int(input())\r\nx = 0\r\nfor i in range(n):\r\n    s = input()\r\n    if s[1]==\"+\":\r\n        x += 1\r\n    else:\r\n        x -= 1\r\nprint(x)', 'Runtime Error', '41', '65864', 0, 100, '2025-10-08 07:05:57'),
(39, 1, 13, 'python', 'n = int(input())\r\nx = 0\r\nfor i in range(n):\r\n    s = input()\r\n    if s[1]==\"+\":\r\n        x += 1\r\n    else:\r\n        x -= 1\r\nprint(x)', 'Accept', '42', '69280', 100, 100, '2025-10-08 07:10:09'),
(40, 1, 13, 'python', 'n = int(input())\r\nx = 0\r\nfor i in range(n):\r\n    s = input()\r\n    if s[1]==\"+\":\r\n        x += 1\r\n    else:\r\n        x -= 1\r\nprint(x-1)', 'Wrong Answer', '41', '69280', 1, 100, '2025-10-08 07:10:23'),
(41, 1, 15, 'python', 'm,n = map(int,input().split())\r\nx = 0\r\nfor i in range(m):\r\n    x += int(input())//11\r\nprint(x)', 'Runtime Error', '40', '65940', 0, 100, '2025-10-08 07:45:02'),
(42, 1, 15, 'python', 'm,n = map(int,input().split())\r\nx = 0\r\nfor i in range(m):\r\n    x += int(input())//n\r\nprint(x)', 'Runtime Error', '43', '66116', 0, 100, '2025-10-08 07:45:27'),
(43, 1, 15, 'python', 'm,n = map(int,input().split())\r\nx = 0\r\nfor i in range(m):\r\n    c = int(input())\r\n    x += c//n\r\nprint(x)', 'Runtime Error', '40', '65484', 0, 100, '2025-10-08 07:46:07'),
(44, 1, 15, 'python', 'm,n = map(int,input().split())\r\nx = 0\r\nfor i in range(m):\r\n    c = int(input())\r\n    x += c//n\r\nprint(x)', 'Runtime Error', '40', '65632', 0, 100, '2025-10-08 07:46:19'),
(45, 1, 15, 'python', 'm,n = map(int,input().split())\r\nx = 0\r\nl = list(map(int, input().split()))\r\nfor i in l:\r\n    x += i//11\r\nprint(x)', 'Wrong Answer', '40', '65980', 1, 100, '2025-10-08 07:48:36'),
(46, 1, 15, 'python', 'm,n = map(int,input().split())\r\nx = 0\r\nl = list(map(int, input().split()))\r\nfor i in l:\r\n    x += i//n\r\nprint(x)', 'Wrong Answer', '42', '66156', 1, 100, '2025-10-08 07:48:49'),
(47, 1, 15, 'python', 'm,n = map(int,input().split())\r\nx = 0\r\nl = list(map(int, input().split()))\r\nfor i in l:\r\n    x += i//(n+1)\r\nprint(x)', 'Wrong Answer', '42', '65660', 2, 100, '2025-10-08 07:49:25'),
(48, 1, 15, 'python', 'm,n = map(int,input().split())\r\nx = 0\r\nl = list(map(int, input().split()))\r\nfor i in l:\r\n    if i>n:\r\n        x += 1\r\nprint(x)', 'Accept', '40', '69200', 100, 100, '2025-10-08 07:50:58'),
(54, 1, 11, 'python', 'a = int(input())\r\nb = int(input())\r\nprint(a+b)', 'Runtime Error', '40', '66216', 0, 100, '2025-10-15 12:30:09'),
(55, 1, 11, 'python', 'a = int(input())\r\nb = int(input())\r\nprint(a+b)', 'Runtime Error', '41', '66364', 0, 100, '2025-10-15 12:30:10'),
(56, 1, 11, 'python', 'a = int(input())\r\nb = int(input())\r\nprint(a+b)', 'Runtime Error', '38', '65748', 0, 100, '2025-10-15 12:30:11'),
(57, 1, 11, 'python', 'a = int(input())\r\nb = int(input())\r\nprint(a+b)', 'Runtime Error', '40', '65904', 0, 100, '2025-10-15 12:30:11'),
(58, 9, 33, 'python', 'a = int(input())\r\nb = int(input())\r\nprint(a+b)', 'Runtime Error', '42', '66260', 0, 28, '2025-10-15 13:11:24'),
(62, 9, 29, 'cpp', '#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    long long d;\r\n    cin >> n >> d;\r\n    \r\n    vector<int> heights(n);\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> heights[i];\r\n    }\r\n\r\n    sort(heights.begin(), heights.end()); // Bo\'ylarni saralash\r\n\r\n    int count = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        for (int j = i + 1; j < n && heights[j] - heights[i] <= d; j++) {\r\n            count++;\r\n        }\r\n    }\r\n\r\n    cout <<2*  count << endl;\r\n    return 0;\r\n}', 'Accept', '21', '66228', 6, 6, '2025-10-15 13:13:58'),
(98, 1, 9, 'python', '', 'Wrong Answer', '41', '65404', 1, 53, '2025-10-17 20:08:00'),
(99, 1, 9, 'python', '', 'Wrong Answer', '40', '65548', 1, 53, '2025-10-17 20:11:10'),
(100, 1, 9, 'python', '', 'Wrong Answer', '43', '65692', 1, 53, '2025-10-17 20:11:19'),
(101, 1, 9, 'python', '', 'Wrong Answer', '41', '65844', 1, 53, '2025-10-17 20:14:18'),
(102, 1, 9, 'python', '', 'Wrong Answer', '41', '65984', 1, 53, '2025-10-17 20:14:22'),
(103, 1, 9, 'python', '', 'Wrong Answer', '41', '66132', 1, 53, '2025-10-17 20:14:28'),
(104, 1, 9, 'python', '', 'Wrong Answer', '36', '66408', 1, 53, '2025-10-17 20:18:52'),
(105, 1, 9, 'python', '', 'Wrong Answer', '42', '66164', 1, 53, '2025-10-17 20:18:56'),
(106, 1, 9, 'python', '', 'Wrong Answer', '42', '66112', 1, 53, '2025-10-17 20:19:00'),
(107, 1, 9, 'python', '', 'Wrong Answer', '41', '66180', 1, 53, '2025-10-17 21:24:24'),
(108, 1, 9, 'python', 'def main():\r\n    # Write your Python 3 code here\r\n    a, b = map(int, input().split())\r\n    return a + b\r\n\r\nif __name__ == \"__main__\":\r\n    print(main())', 'Accept', '38', '65888', 53, 53, '2025-10-17 21:24:38'),
(109, 1, 9, 'python', '', 'Wrong Answer', '42', '66020', 1, 53, '2025-10-17 21:26:17'),
(110, 1, 9, 'python', '', 'Wrong Answer', '41', '66176', 1, 53, '2025-10-17 21:26:44'),
(111, 1, 9, 'python', '', 'Wrong Answer', '40', '66304', 1, 53, '2025-10-17 21:27:26'),
(112, 1, 9, 'python', '', 'Wrong Answer', '43', '66448', 1, 53, '2025-10-17 21:28:35'),
(113, 1, 9, 'python', '', 'Wrong Answer', '41', '65820', 1, 53, '2025-10-17 21:29:21'),
(114, 1, 9, 'python', '', 'Wrong Answer', '41', '65960', 1, 53, '2025-10-17 21:31:52'),
(115, 1, 9, 'python', '', 'Wrong Answer', '41', '66096', 1, 53, '2025-10-17 21:33:02'),
(116, 1, 9, 'python', 'def main():\r\n    # Write your Python 3 code here\r\n    a, b = map(int, input().split())\r\n    return a + b\r\n\r\nif __name__ == \"__main__\":\r\n    print(main())', 'Accept', '37', '66596', 53, 53, '2025-10-17 21:35:42'),
(117, 1, 9, 'python', 'def main():\r\n    # Write your Python 3 code here\r\n    a, b = map(int, input().split())\r\n    return a + b\r\n\r\nif __name__ == \"__main__\":\r\n    print(main())', 'Accept', '38', '66260', 53, 53, '2025-10-17 21:36:21');

-- --------------------------------------------------------

--
-- Table structure for table `attempt_results`
--

CREATE TABLE `attempt_results` (
  `id` int NOT NULL,
  `attempt_id` int NOT NULL,
  `input` text,
  `code_output` text,
  `correct_output` text
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- --------------------------------------------------------

--
-- Table structure for table `problems`
--

CREATE TABLE `problems` (
  `id` int NOT NULL,
  `title` varchar(255) NOT NULL,
  `descript` text NOT NULL,
  `input_format` text,
  `output_format` text,
  `constraints` text,
  `difficulty` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci DEFAULT NULL,
  `category` varchar(100) DEFAULT NULL,
  `izoh` varchar(255) NOT NULL DEFAULT 'Yo''q',
  `time_limit` int DEFAULT '1000',
  `memory_limit` int DEFAULT '16384',
  `author_id` int DEFAULT NULL,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `update_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `problems`
--

INSERT INTO `problems` (`id`, `title`, `descript`, `input_format`, `output_format`, `constraints`, `difficulty`, `category`, `izoh`, `time_limit`, `memory_limit`, `author_id`, `created_at`, `update_at`) VALUES
(9, 'A+B', 'Sizga ikkita natural son beriladi. ularning yig‘indisini hisoblash kerak.', 'Kirish oqimida ikkita butun son, A va B beriladi. Har ikkala son ham 10^9  dan kichik.', 'Berilgan ikkita sonning yig‘indisini ekranga chiqaring.', '-10^9 <= A, B <= 10^9', '1', 'Oson', 'Python dasturlash tilida ushbu masalani yechish uchun e\'tibor bering: ikkita son bitta qatorda kiritiladi. Shu sababli, int(input()) buyrug‘idan foydalanish noto‘g‘ri bo‘lishi mumkin. Buning o‘rniga, quyidagi kodni ishlatishni tavsiya qilamiz.', 1000, 16384, 1, '2025-10-07 04:27:54', '2025-10-07 04:27:54'),
(10, 'Juft sonlar yig\'indisi', 'Ali bilan Vali bir o\'yin o\'ynashmoqda. Ali shunday son aytishi kerakki, son juft bo\'lib,  ixtiyor ikkita juft son yig\'indisidan iborat bo\'lsin. Vali esa Ali to\'g\'ri aytdimi yo\'qmi tekshirishi zarur, Valiga yordam bering.', 'Yagona qatorda bitta natural son', 'Agar to\'g\'ri aytgan bo\'lsa \"YES\" aks holda \"NO\" degan so\'zni chop eting.', '0 < N < 10000', '1', 'oson', '', 1000, 16384, 1, '2025-10-08 04:51:00', '2025-10-08 04:51:00'),
(11, '3 bezori', 'Ali, Vali va Hasanlar juda bezori o\'rtoqlar. Mana darsada ham bezorilik qilgani uchun o\'qituvchisi ularni jazolamoqchi. Ularni jazodan qutilib qolishi uchun o\'qituvchisi ularning har biriga bir balldan iborat bo\'lgan savol beradi. Agar ular 1 balldan yuqori ball to\'play olsa jazodan qutiladi, aks holda jazolanadi. Sizning vazifangiz ularning ballarini hisoblashdan iborat.', 'Bir qatorda 0 va 1 lardan iborat 3 ta son kiritiladi', 'Jami ballari hisoblang', '', '1', 'oson', '', 1000, 16384, 1, '2025-10-08 06:32:40', '2025-10-08 06:32:40'),
(13, 'Inkremend va dekrement', 'Dasturlashni endi o\'rganayotgan Ali bugun inkrement (++) va dekrement (--) operatorlarini o\'tdi. Uztozi unga dastlabgi qiymati 0 bo\'lgan x o\'zgaruvchisi ustida o\'zi beradigan inkrement va dekrement amallarini bajarishini va natijani aytishini so\'radi. Ali esa yakuniy javobni aytishi kerak. Aliga yordam bering', 'Birinchi qatorda n natural son kiritiladi (amallar soni). Keyinggi n ta qatorlarda amallar kiritiladi (x++, x--, ++x, --x)', 'Yakuniy x natijasini chop eting', '', '2', 'oson', '', 1000, 16384, 1, '2025-10-08 07:09:40', '2025-10-08 07:09:40'),
(15, 'Bellashuv', 'Dasturlash bo\'yicha bo\'lgan musobaqada m ta ishtirokchi qatnashdi. Ulardan n dan yuqori ball to\'plaganlari keyingi bosqichga o\'tadi. Keyingi bosqichga qancha ishtirokchi o\'tadi.', 'Birinchi qatorda m v n naturl sonlari kiritiladi. keyingi qatorda m ta son kiritiladi (ishtirokchilar ballari)', 'ishtirokchi o\'tishini chop eting', '2 < m < 50\r\n0 <= n <= 10', '2', 'oson', '', 1000, 16384, 1, '2025-10-08 07:43:06', '2025-10-08 07:43:06'),
(17, 'Do\'kon', 'Siz do‘konga bordingiz va uchta turli sovg‘ani xarid qilmoqchisiz:\r\n\r\nO‘yinchoq mashina – x so\'m\r\nShokolad – y​ so‘m\r\nRangli qalamlar – z so‘m\r\nDo‘kondagi chegirma shunday ishlaydi:\r\n\r\nAgar siz ixtiyoriy ikkita mahsulotning narxini qo\'shsangiz, uchinchisiga teng bo\'lsa, uchinchisini bepul olishingiz mumkin. Agar teng bo\'lmasa pullik olasiz.\r\n\r\nSizga chegirma amal qiladimi aniqlashingiz kerak.', 'Bir qatorda uchta butun son beriladi: a₁, a₂, a₃ (−10⁸ ≤ ai ≤ 10⁸)', 'Agar chegirma amal qilsa, chiqishda \"HA\", aks holda \"YO\'Q\" so‘zini chop eting.', '', '2', 'oson', '', 1000, 16384, 9, '2025-10-15 12:32:42', '2025-10-15 12:32:42'),
(18, 'Massivcha', 'N ta elementdan tashkil topgan massiv va K, L butun son berilgan. Massivning K va L indekslari orasidagi elementlar yig\'indisi chiqaruvchi dastur tuzilsin.', 'N - massiv elementlari soni.\r\nK va L - ikki butun son (K < L).\r\nMassivning elementlari: N ta elementdan tashkil topgan butun sonlar massivi.', 'K va L indekslari orasidagi elementlar yig\'indisi.', '', '2', 'Oson Massivlar', '', 1000, 16384, 9, '2025-10-15 12:37:20', '2025-10-15 12:37:20'),
(19, 'Qiziqarli masala', 'Ingliz alifbosidagi har bir harf uchun \"yopiq klaviatura\" qoidalariga ko\'ra o\'ng tomondagi harfni topishingiz kerak. Ushbu klaviaturada \"p\" harfi o\'ng tomonda \"a\" bilan bog\'langan, \"l\" o\'ng tomonda \"z\" bilan bog\'langan, va \"m\" o\'ng tomonda \"q\" bilan bog\'langan.', 'Kirishda sizga yagona qator bo\'lib, unda kichik lotin harfi (a-z) beriladi.', 'O\'sha harf uchun klaviaturadan o\'ng tomondagi harfni chiqaring.', '', '4', 'String', '', 1000, 16384, 9, '2025-10-15 12:38:57', '2025-10-15 12:38:57'),
(20, 'Harflar Sonini Aniqlash', 'Berilgan s satrda barcha kichik lotin harflarining (a-z) nechta marta uchrashini aniqlang. Natijani alifbo tartibida chiqaring.', 'Bitta qatorda S satr beriladi.\r\n\r\nSatr faqat kichik lotin harflaridan iborat.', '26 ta qatorda har bir lotin harfining uchrash sonini chiqaring. Har bir qatorda harf va son orasida bo\'sh joy bo\'lsin.', '', '3', 'string', '', 1000, 16384, 9, '2025-10-15 12:40:41', '2025-10-15 12:40:41'),
(21, 'Bu qiziq', 'Foydalanuvchi ikkita sonni kiritadi. Sonlar yoki bitta satrda yoki ikki alohida satrda kiritilishi mumkin. Agar sonlar bitta satrda kiritilsa, ularning yig\'indisi chiqarilsin, agar ikki satrda kiritilsa, ularning ko\'paytmasi chiqarilsin.', 'Kirish faylida bitta qatorda ikkita butun son \r\na\r\na va \r\nb\r\nb beriladi.', 'Masalani yechimini chop eting.', '', '4', 'oson', '', 1000, 16384, 9, '2025-10-15 12:41:42', '2025-10-15 12:41:42'),
(22, 'Nyuton', 'Bir ilmiy kashfiyotchi, yangi molekulalar yaratishda, har bir atomning bir-biri bilan bog\'lanishini tahlil qiladi. Bu jarayonni ko\'rib chiqqach, u har bir atomni bir-biriga bog\'lash usulini topdi. Ammo u, har bir atomni bog\'lashda ikki atomni bog\'lashda yangi bir tizimni yaratishga qaror qildi. Atomlarning bog\'lanish jarayoniga qarab, atomlar juft-juft bog\'lanishi kerak.\r\nShartlar:\r\n\r\nAgar molekula tarkibidagi atomlar soni juft bo\'lsa, atomlar ikkita juft bo\'lib bog\'lanishi kerak.\r\nAgar atomlar soni toq bo\'lsa, oxirgi atom boshqa atomlar bilan bog\'lanmaydi va uning oxiriga _ qo\'shilib, tizimda alohida turadi.', 'Birinchi satrda bir molekulaning nomi kiritiladi. Molekula nomi faqat harflardan iborat bo\'lib, harflar soni 1 dan 1000 gacha bo\'lishi mumkin.', 'Masala yechimini chop qiling.', '', '4', 'string', '', 1000, 16384, 9, '2025-10-15 12:43:22', '2025-10-15 12:43:22'),
(23, 'Qulf', 'Qadimgi qulfni ochish uchun qavslar tartibini balansli qilib yozish kerak. Dastur qulfning kodini tekshiradi va balansli bo\'lsa, “YES”, aks holda “NO” chiqaradi !', 'faqat ( va ) belgidan iborat bo\'lishi kerak.', 'YES yoki NO chiqsin', '', '7', 'oson', 'balansli () balanssiz (', 1000, 16384, 9, '2025-10-15 12:45:31', '2025-10-15 12:45:31'),
(24, 'Simmetriya o\'qlari', 'To\'g\'ri chiziq biror shakl uchun simmetriya o\'qi hisoblanadi, agar shakldagi har bir nuqta uchun shu nuqtaga nisbatan simmetrik nuqta ham shu shaklda joylashgan bo\'lsa. Ayniqsa, simmetriya paytida:\r\n\r\nChegaraviy nuqtalar chegaraviy nuqtalarga o‘tadi.\r\n\r\nIchki nuqtalar ichki nuqtalarga o‘tadi.\r\n\r\n \r\n\r\nSizning vazifangiz – 1000 × 1000 katakli panjara ustida bo\'sh bo\'lmagan, eng ko‘pi bilan k ta katakdan iborat shunday to‘plamni tanlash kerakki, u shaklning simmetriya o‘qlari imkon qadar ko‘p bo‘lsin.', 'Birinchi qatorda k butun soni beriladi (1 ≤ k ≤ 1000) – tanlashingiz mumkin bo‘lgan maksimal kataklar soni.', 'Bir dona butun sonni chop eting – shaklning mumkin bo‘lgan maksimal simmetriya o\'qlari soni.', '', '1', 'oson', '', 1000, 16384, 9, '2025-10-15 12:47:23', '2025-10-15 12:47:23'),
(25, 'Burchak', 'Berilgan n ta burchakning ichki burchaklarining yig\'indisini hisoblang.', 'Birinchi qatorda n (3 ≤ n ≤ 100) burchaklar soni.', 'Berilgan n burchakning ichki burchaklar yig\'indisi.', '', '1', 'oson', '', 1000, 16384, 9, '2025-10-15 12:49:00', '2025-10-15 12:49:00'),
(26, 'So\'z o\'yini', 'Sizga 3 ta so\'z beriladi. Ushbu so\'zlardan qaysi biri eng ko\'p harfdan tashkil topganini aniqlash dasturini tuzishingiz talab qilinadi. Agar bir nechta so\'zda bir xil harf soni bo\'lsa, ularni birgalikda ko\'rsating.', 'Birinchi qatorda 3 ta so\'z beriladi (har bir so\'z alohida bo\'sh joy bilan ajratilgan).\r\nHar bir so\'zning uzunligi 1 dan 100 ta harfgacha bo\'lishi mumkin.', 'Eng ko\'p harfdan tashkil topgan so\'z yoki so\'zlar.\r\nAgar bir nechta so\'zda bir xil harf soni bo\'lsa, ularni birgalikda chiqarish kerak.', '', '4', 'string', '', 1000, 16384, 9, '2025-10-15 12:50:06', '2025-10-15 12:50:06'),
(27, 'Ajoyib kodlangan xabar', 'Sizga o‘zgacha kodlangan xabar kelib tushdi. Xabarni o‘qish uchun har bir so‘zni teskari qilib o‘qish kerak. Buni avtomatlashtirish uchun dastur yozing!', 'Birinchi qatorda xabar matni s beriladi.', 'Har bir so‘zni teskari qilib, xabarni chop eting.', '', '2', 'oson', '', 1000, 16384, 9, '2025-10-15 12:52:01', '2025-10-15 12:52:01'),
(28, 'Morze', 'Uchlik sanoq tizimi Berlandda juda mashhur. Uchlik sonni telegraf orqali uzatish uchun Morze alifbosi ishlatiladi. Raqamlar quyidagicha uzatiladi: \r\n\r\n0 – «.», 1 – «-.», 2 – «--». Sizga Morze kodini dekodlash, ya\'ni uning uchlik sanoq tizimidagi ifodasini aniqlash vazifasi beriladi.', 'Birinchi qatorda Borze kodidagi son beriladi. Satr uzunligi 1 dan 200 gacha bo\'lishi mumkin.', 'Dekodlangan uchlik sonni chiqaring', '', '10', 'oson', '', 1000, 16384, 9, '2025-10-15 12:53:28', '2025-10-15 12:53:28'),
(29, 'Armiya', 'Berland armiyasining qoidalariga ko‘ra, razvedka guruhi aniq ikkita askardan iborat bo‘lishi kerak. Ushbu ikki askarning bo‘ylari juda farq qilmasligi uchun ularning bo‘ylari maksimal d santimetr farq qilishi mumkin.\r\n\r\nKapitan Bobning bo‘linmasida n ta askar bor. Ularning bo‘ylari a1, a2, ..., an santimetr. Ba\'zi askarlar bir xil bo‘yga ega bo‘lishi mumkin. Bob bilmoqchi, uning bo‘linmasidagi ikkita askardan iborat razvedka guruhini nechta usulda tuzish mumkin.', '1 ≤ n ≤ 1000, 1 ≤ d ≤ 10⁹\r\n\r\naskarlar soni va bo‘y farqi.', 'Razvedka guruhini tuzishning mumkin bo‘lgan usullari soni.', '', '12', 'oson', 'E’tibor bering, (1, 2) va (2, 1) juftliklari alohida hisoblanadi.', 1000, 16384, 9, '2025-10-15 12:54:32', '2025-10-15 12:54:32'),
(30, 'Cobalt', 'Avtomobil dastlab to‘xtab turgan.  Keyin u harakatlana boshlaydi va 60 km/soat tezlikka erishadi.\r\nUning dastlabki tezligini toping.', 'v - tezlik kiritladi.', 'Uning dastlabki tezligi toping.', '', '1', 'oson', '', 1000, 16384, 9, '2025-10-15 12:55:36', '2025-10-15 12:55:36'),
(31, 'Oddiy shaxter', 'Bobur– oddiy shaxter. U malaka oshirish kurslarini tugatgach, yakuniy imtihon topshirishi shart. Eng qiyin sinov – \"O‘ta Og‘ir Imtihon\" deb nomlangan kompyuter testi.\r\n\r\nTest n ta savoldan iborat bo‘lib, ularga faqat ketma-ket javob berish mumkin: birinchi savoldan oxirgisigacha. Har bir i-savolda aᵢ ta javob varianti mavjud bo‘lib, faqat bittasi to‘g‘ri.\r\n\r\nBobur test javoblarini umuman bilmaydi, shuning uchun u tasodifiy javob tanlashga majbur. Agar u noto‘g‘ri javob bersa, butun test qayta boshlanadi. Biroq, u o‘z harakatlarini eslab qoladi, shuning uchun avval noto‘g‘ri tanlagan javoblarini qayta tanlamaydi.\r\n\r\nSizning vazifangiz – Bobur eng yomon holatda testni yakunlash uchun nechta bosqich bajarishi kerakligini hisoblash.', 'n - (1 ≤ n ≤ 100)\r\na_i- variantlari', 'minimal bosqich soni.', '', '13', 'oson', '', 1000, 16384, 9, '2025-10-15 12:57:44', '2025-10-15 12:57:44'),
(32, 'Auksion', 'Ushbu masalada biz ikkinchi narx auktsioni deb ataladigan kim oshdi savdosini o\'tkazish variantlaridan birini ko\'rib chiqamiz. Har qanday auktsionda bo\'lgani kabi, n ishtirokchi auktsionga qo\'yilgan buyumni o\'z narxlarini taklif qilish orqali sotib olishga intiladi. Ishtirokchilar 1 dan n gacha butun sonlar bilan raqamlangan deb faraz qilaylik. Kim oshdi savdosi yopiq, ya\'ni har bir ishtirokchi kim oshdi savdosi tashkilotchisiga tovar uchun to\'lashga tayyor bo\'lgan narx haqida yashirincha ma\'lum qiladi. Shundan so\'ng eng yuqori narxni taklif qilgan ishtirokchi auktsion g\'olibi hisoblanadi. Biroq, u o\'zi taklif qilgan narxni emas, balki boshqa ishtirokchilar taklif qilganlar orasida eng yuqori narxni to\'laydi.\r\n\r\nKim oshdi savdosi ishtirokchilari tomonidan taklif qilingan narxlar ro\'yxatini hisobga olgan holda, kim oshdi savdosi g\'olibini va u buyum uchun to\'laydigan summani aniqlaydigan dastur yozing.', 'Birinchi qatorda kim oshdi savdosida qatnashgan ishtirokchilar soni n (2<n<10^5) \r\nIkkinchi qatorda n ta butun son ishtirokchilar taklif qigan narxlar', 'Masalani yechimi chop qiling', '', '6', 'oson', '', 1000, 16384, 9, '2025-10-15 13:01:46', '2025-10-15 13:01:46'),
(33, 'Quyoncha', 'Kichkina quyoncha O‘zbekistonni juda yaxshi ko‘radi. U, ayniqsa, Jizzax viloyatidagi Zomin shahrini yaxshi ko‘radi.\r\nAmmo Zominda doimiy yashash salomatligi uchun zararli bo‘lib qolgan, shuning uchun Kichkina quyon boshqa shaharga ko‘chib o‘tishni xohlaydi.\r\n\r\nKichkina quyon sayohatga ko‘p vaqt sarflashni yoqtirmaydi, shuning uchun u borish uchun eng kam vaqt talab qilinadigan shaharni tanlaydi.\r\nAgar bunday shaharlar bir nechta bo‘lsa (ya\'ni, bir nechta shaharga borish vaqti bir xil bo‘lsa), Kichkina quyon hech qayerga ketmaydi va Zominda qoladi.\r\nJizzaxdan tashqari har bir shahar uchun siz ushbu shaharga sayohat qilish uchun zarur bo\'lgan vaqtni bilasiz. Quyoncha qaysi shaharga borishini aniqlang yoki Jizzax qolsa, \"Jizzax\" ni chiqaradi.', 'Birinchi qatorda testlar soni T (1 ≤ T ≤ 100)\r\n\r\nHar bir test quyidagilarni o‘z ichiga oladi:\r\n\r\nBirinchi qatorda shaharlar soni n (1 ≤ n ≤ 100)\r\n\r\nIkkinchi qatorda n ta butun son: shaharlar orasidagi sayohat vaqti (1 ≤ vaqt ≤ 1000)', 'Agar quyon boshqa shaharga boradigan bo‘lsa, shahar raqami\r\nAgar eng kam vaqt bir nechta shaharga tegishli bo‘lsa, \"Jizzax\"', '', '24', 'vector', '', 1000, 16384, 9, '2025-10-15 13:06:22', '2025-10-15 13:06:22');

-- --------------------------------------------------------

--
-- Table structure for table `reyting`
--

CREATE TABLE `reyting` (
  `id` int NOT NULL,
  `user_id` int NOT NULL,
  `problem_id` int NOT NULL,
  `score` decimal(10,0) NOT NULL DEFAULT '0',
  `solved` decimal(10,0) NOT NULL DEFAULT '0',
  `attempted` decimal(10,0) NOT NULL,
  `create_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `update_at` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `reyting`
--

INSERT INTO `reyting` (`id`, `user_id`, `problem_id`, `score`, `solved`, `attempted`, `create_at`, `update_at`) VALUES
(1, 1, 9, '0', '1', '7', '2025-10-18 00:27:26', '2025-10-18 00:27:26');

-- --------------------------------------------------------

--
-- Table structure for table `tests`
--

CREATE TABLE `tests` (
  `id` int NOT NULL,
  `problem_id` int NOT NULL,
  `input` text NOT NULL,
  `output` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

--
-- Dumping data for table `tests`
--

INSERT INTO `tests` (`id`, `problem_id`, `input`, `output`) VALUES
(1, 5, '373 179', '552'),
(2, 5, '456 252', '708'),
(3, 5, '869 873', '1742'),
(4, 5, '122 290', '412'),
(5, 5, '993 874', '1867'),
(6, 5, '481 536', '1017'),
(7, 5, '922 607', '1529'),
(8, 5, '972 549', '1521'),
(9, 5, '242 245', '487'),
(10, 5, '388 156', '544'),
(11, 5, '259 547', '806'),
(12, 5, '827 120', '947'),
(13, 5, '825 622', '1447'),
(14, 5, '455 190', '645'),
(15, 5, '793 31', '824'),
(16, 5, '188 648', '836'),
(17, 5, '668 302', '970'),
(18, 5, '270 600', '870'),
(19, 5, '430 455', '885'),
(20, 5, '846 94', '940'),
(21, 5, '22 14', '36'),
(22, 5, '92 387', '479'),
(23, 5, '294 416', '710'),
(24, 5, '768 382', '1150'),
(25, 5, '686 239', '925'),
(26, 5, '400 559', '959'),
(27, 5, '494 283', '777'),
(28, 5, '677 581', '1258'),
(29, 5, '168 8', '176'),
(30, 5, '240 753', '993'),
(31, 5, '728 565', '1293'),
(32, 5, '0 180', '180'),
(33, 5, '138 569', '707'),
(34, 5, '417 914', '1331'),
(35, 5, '152 614', '766'),
(36, 5, '880 422', '1302'),
(37, 5, '813 613', '1426'),
(38, 5, '990 982', '1972'),
(39, 5, '606 210', '816'),
(40, 5, '399 803', '1202'),
(41, 5, '754 791', '1545'),
(42, 5, '897 976', '1873'),
(43, 5, '597 231', '828'),
(44, 5, '171 336', '507'),
(45, 5, '953 854', '1807'),
(46, 5, '419 566', '985'),
(47, 5, '6 849', '855'),
(48, 5, '848 512', '1360'),
(49, 5, '916 692', '1608'),
(50, 5, '109 70', '179'),
(51, 5, '1 2', '3'),
(52, 5, '4 5', '9'),
(53, 5, '0 0', '0'),
(54, 6, '373 179', '552'),
(55, 6, '456 252', '708'),
(56, 6, '869 873', '1742'),
(57, 6, '122 290', '412'),
(58, 6, '993 874', '1867'),
(59, 6, '481 536', '1017'),
(60, 6, '922 607', '1529'),
(61, 6, '972 549', '1521'),
(62, 6, '242 245', '487'),
(63, 6, '388 156', '544'),
(64, 6, '259 547', '806'),
(65, 6, '827 120', '947'),
(66, 6, '825 622', '1447'),
(67, 6, '455 190', '645'),
(68, 6, '793 31', '824'),
(69, 6, '188 648', '836'),
(70, 6, '668 302', '970'),
(71, 6, '270 600', '870'),
(72, 6, '430 455', '885'),
(73, 6, '846 94', '940'),
(74, 6, '22 14', '36'),
(75, 6, '92 387', '479'),
(76, 6, '294 416', '710'),
(77, 6, '768 382', '1150'),
(78, 6, '686 239', '925'),
(79, 6, '400 559', '959'),
(80, 6, '494 283', '777'),
(81, 6, '677 581', '1258'),
(82, 6, '168 8', '176'),
(83, 6, '240 753', '993'),
(84, 6, '728 565', '1293'),
(85, 6, '0 180', '180'),
(86, 6, '138 569', '707'),
(87, 6, '417 914', '1331'),
(88, 6, '152 614', '766'),
(89, 6, '880 422', '1302'),
(90, 6, '813 613', '1426'),
(91, 6, '990 982', '1972'),
(92, 6, '606 210', '816'),
(93, 6, '399 803', '1202'),
(94, 6, '754 791', '1545'),
(95, 6, '897 976', '1873'),
(96, 6, '597 231', '828'),
(97, 6, '171 336', '507'),
(98, 6, '953 854', '1807'),
(99, 6, '419 566', '985'),
(100, 6, '6 849', '855'),
(101, 6, '848 512', '1360'),
(102, 6, '916 692', '1608'),
(103, 6, '109 70', '179'),
(104, 6, '1 2', '3'),
(105, 6, '4 5', '9'),
(106, 6, '0 0', '0'),
(160, 7, '373 179', '552'),
(161, 7, '456 252', '708'),
(162, 7, '869 873', '1742'),
(163, 7, '122 290', '412'),
(164, 7, '993 874', '1867'),
(165, 7, '481 536', '1017'),
(166, 7, '922 607', '1529'),
(167, 7, '972 549', '1521'),
(168, 7, '242 245', '487'),
(169, 7, '388 156', '544'),
(170, 7, '259 547', '806'),
(171, 7, '827 120', '947'),
(172, 7, '825 622', '1447'),
(173, 7, '455 190', '645'),
(174, 7, '793 31', '824'),
(175, 7, '188 648', '836'),
(176, 7, '668 302', '970'),
(177, 7, '270 600', '870'),
(178, 7, '430 455', '885'),
(179, 7, '846 94', '940'),
(180, 7, '22 14', '36'),
(181, 7, '92 387', '479'),
(182, 7, '294 416', '710'),
(183, 7, '768 382', '1150'),
(184, 7, '686 239', '925'),
(185, 7, '400 559', '959'),
(186, 7, '494 283', '777'),
(187, 7, '677 581', '1258'),
(188, 7, '168 8', '176'),
(189, 7, '240 753', '993'),
(190, 7, '728 565', '1293'),
(191, 7, '0 180', '180'),
(192, 7, '138 569', '707'),
(193, 7, '417 914', '1331'),
(194, 7, '152 614', '766'),
(195, 7, '880 422', '1302'),
(196, 7, '813 613', '1426'),
(197, 7, '990 982', '1972'),
(198, 7, '606 210', '816'),
(199, 7, '399 803', '1202'),
(200, 7, '754 791', '1545'),
(201, 7, '897 976', '1873'),
(202, 7, '597 231', '828'),
(203, 7, '171 336', '507'),
(204, 7, '953 854', '1807'),
(205, 7, '419 566', '985'),
(206, 7, '6 849', '855'),
(207, 7, '848 512', '1360'),
(208, 7, '916 692', '1608'),
(209, 7, '109 70', '179'),
(210, 7, '1 2', '3'),
(211, 7, '4 5', '9'),
(212, 7, '0 0', '0'),
(213, 8, '373 179', '552'),
(214, 8, '456 252', '708'),
(215, 8, '869 873', '1742'),
(216, 8, '122 290', '412'),
(217, 8, '993 874', '1867'),
(218, 8, '481 536', '1017'),
(219, 8, '922 607', '1529'),
(220, 8, '972 549', '1521'),
(221, 8, '242 245', '487'),
(222, 8, '388 156', '544'),
(223, 8, '259 547', '806'),
(224, 8, '827 120', '947'),
(225, 8, '825 622', '1447'),
(226, 8, '455 190', '645'),
(227, 8, '793 31', '824'),
(228, 8, '188 648', '836'),
(229, 8, '668 302', '970'),
(230, 8, '270 600', '870'),
(231, 8, '430 455', '885'),
(232, 8, '846 94', '940'),
(233, 8, '22 14', '36'),
(234, 8, '92 387', '479'),
(235, 8, '294 416', '710'),
(236, 8, '768 382', '1150'),
(237, 8, '686 239', '925'),
(238, 8, '400 559', '959'),
(239, 8, '494 283', '777'),
(240, 8, '677 581', '1258'),
(241, 8, '168 8', '176'),
(242, 8, '240 753', '993'),
(243, 8, '728 565', '1293'),
(244, 8, '0 180', '180'),
(245, 8, '138 569', '707'),
(246, 8, '417 914', '1331'),
(247, 8, '152 614', '766'),
(248, 8, '880 422', '1302'),
(249, 8, '813 613', '1426'),
(250, 8, '990 982', '1972'),
(251, 8, '606 210', '816'),
(252, 8, '399 803', '1202'),
(253, 8, '754 791', '1545'),
(254, 8, '897 976', '1873'),
(255, 8, '597 231', '828'),
(256, 8, '171 336', '507'),
(257, 8, '953 854', '1807'),
(258, 8, '419 566', '985'),
(259, 8, '6 849', '855'),
(260, 8, '848 512', '1360'),
(261, 8, '916 692', '1608'),
(262, 8, '109 70', '179'),
(263, 8, '1 2', '3'),
(264, 8, '4 5', '9'),
(265, 8, '0 0', '0'),
(266, 9, '373 179', '552'),
(267, 9, '456 252', '708'),
(268, 9, '869 873', '1742'),
(269, 9, '122 290', '412'),
(270, 9, '993 874', '1867'),
(271, 9, '481 536', '1017'),
(272, 9, '922 607', '1529'),
(273, 9, '972 549', '1521'),
(274, 9, '242 245', '487'),
(275, 9, '388 156', '544'),
(276, 9, '259 547', '806'),
(277, 9, '827 120', '947'),
(278, 9, '825 622', '1447'),
(279, 9, '455 190', '645'),
(280, 9, '793 31', '824'),
(281, 9, '188 648', '836'),
(282, 9, '668 302', '970'),
(283, 9, '270 600', '870'),
(284, 9, '430 455', '885'),
(285, 9, '846 94', '940'),
(286, 9, '22 14', '36'),
(287, 9, '92 387', '479'),
(288, 9, '294 416', '710'),
(289, 9, '768 382', '1150'),
(290, 9, '686 239', '925'),
(291, 9, '400 559', '959'),
(292, 9, '494 283', '777'),
(293, 9, '677 581', '1258'),
(294, 9, '168 8', '176'),
(295, 9, '240 753', '993'),
(296, 9, '728 565', '1293'),
(297, 9, '0 180', '180'),
(298, 9, '138 569', '707'),
(299, 9, '417 914', '1331'),
(300, 9, '152 614', '766'),
(301, 9, '880 422', '1302'),
(302, 9, '813 613', '1426'),
(303, 9, '990 982', '1972'),
(304, 9, '606 210', '816'),
(305, 9, '399 803', '1202'),
(306, 9, '754 791', '1545'),
(307, 9, '897 976', '1873'),
(308, 9, '597 231', '828'),
(309, 9, '171 336', '507'),
(310, 9, '953 854', '1807'),
(311, 9, '419 566', '985'),
(312, 9, '6 849', '855'),
(313, 9, '848 512', '1360'),
(314, 9, '916 692', '1608'),
(315, 9, '109 70', '179'),
(316, 9, '1 2', '3'),
(317, 9, '4 5', '9'),
(318, 9, '0 0', '0'),
(319, 10, '8093', 'NO'),
(320, 10, '7536', 'YES'),
(321, 10, '7081', 'NO'),
(322, 10, '274', 'YES'),
(323, 10, '5808', 'YES'),
(324, 10, '969', 'NO'),
(325, 10, '9709', 'NO'),
(326, 10, '6976', 'YES'),
(327, 10, '5772', 'YES'),
(328, 10, '1718', 'YES'),
(329, 10, '3171', 'NO'),
(330, 10, '3496', 'YES'),
(331, 10, '6712', 'YES'),
(332, 10, '9013', 'NO'),
(333, 10, '8385', 'NO'),
(334, 10, '8378', 'YES'),
(335, 10, '7351', 'NO'),
(336, 10, '6233', 'NO'),
(337, 10, '2834', 'YES'),
(338, 10, '6697', 'NO'),
(339, 10, '4887', 'NO'),
(340, 10, '1198', 'YES'),
(341, 10, '7067', 'NO'),
(342, 10, '5155', 'NO'),
(343, 10, '7112', 'YES'),
(344, 10, '6711', 'NO'),
(345, 10, '2843', 'NO'),
(346, 10, '2547', 'NO'),
(347, 10, '9063', 'NO'),
(348, 10, '9923', 'NO'),
(349, 10, '3892', 'YES'),
(350, 10, '194', 'YES'),
(351, 10, '9933', 'NO'),
(352, 10, '2759', 'NO'),
(353, 10, '37', 'NO'),
(354, 10, '1110', 'YES'),
(355, 10, '1590', 'YES'),
(356, 10, '8533', 'NO'),
(357, 10, '2684', 'YES'),
(358, 10, '8931', 'NO'),
(359, 10, '2531', 'NO'),
(360, 10, '3422', 'YES'),
(361, 10, '7600', 'YES'),
(362, 10, '6098', 'YES'),
(363, 10, '8388', 'YES'),
(364, 10, '5777', 'NO'),
(365, 10, '9576', 'YES'),
(366, 10, '7638', 'YES'),
(367, 10, '916', 'YES'),
(368, 10, '5039', 'NO'),
(369, 10, '9995', 'NO'),
(370, 10, '8553', 'NO'),
(371, 10, '5925', 'NO'),
(372, 10, '8212', 'YES'),
(373, 10, '9991', 'NO'),
(374, 10, '9665', 'NO'),
(375, 10, '3790', 'YES'),
(376, 10, '5279', 'NO'),
(377, 10, '2472', 'YES'),
(378, 10, '9464', 'YES'),
(379, 10, '3017', 'NO'),
(380, 10, '3608', 'YES'),
(381, 10, '6842', 'YES'),
(382, 10, '6157', 'NO'),
(383, 10, '9690', 'YES'),
(384, 10, '6064', 'YES'),
(385, 10, '3017', 'NO'),
(386, 10, '1189', 'NO'),
(387, 10, '9444', 'YES'),
(388, 10, '2672', 'YES'),
(389, 10, '6212', 'YES'),
(390, 10, '8155', 'NO'),
(391, 10, '9474', 'YES'),
(392, 10, '8680', 'YES'),
(393, 10, '129', 'NO'),
(394, 10, '6129', 'NO'),
(395, 10, '5530', 'YES'),
(396, 10, '183', 'NO'),
(397, 10, '8063', 'NO'),
(398, 10, '2413', 'NO'),
(399, 10, '7170', 'YES'),
(400, 10, '5094', 'YES'),
(401, 10, '3621', 'NO'),
(402, 10, '4250', 'YES'),
(403, 10, '3232', 'YES'),
(404, 10, '3103', 'NO'),
(405, 10, '7158', 'YES'),
(406, 10, '8012', 'YES'),
(407, 10, '225', 'NO'),
(408, 10, '752', 'YES'),
(409, 10, '8286', 'YES'),
(410, 10, '321', 'NO'),
(411, 10, '2794', 'YES'),
(412, 10, '6837', 'NO'),
(413, 10, '5058', 'YES'),
(414, 10, '3113', 'NO'),
(415, 10, '8177', 'NO'),
(416, 10, '6724', 'YES'),
(417, 10, '790', 'YES'),
(418, 10, '2\n', 'NO'),
(419, 11, '1 1 0', '2'),
(420, 11, '1 1 0', '2'),
(421, 11, '0 0 1', '1'),
(422, 11, '0 1 1', '2'),
(423, 11, '0 1 1', '2'),
(424, 11, '1 0 0', '1'),
(425, 11, '1 1 1', '3'),
(426, 11, '0 0 0', '0'),
(427, 11, '0 0 1', '1'),
(428, 11, '0 0 0', '0'),
(429, 11, '1 0 0', '1'),
(430, 11, '0 1 0', '1'),
(431, 11, '1 1 0', '2'),
(432, 11, '1 0 0', '1'),
(433, 11, '0 0 1', '1'),
(434, 11, '1 0 0', '1'),
(435, 11, '0 0 0', '0'),
(436, 11, '0 0 1', '1'),
(437, 11, '1 1 1', '3'),
(438, 11, '0 0 1', '1'),
(439, 11, '1 0 1', '2'),
(440, 11, '1 1 0', '2'),
(441, 11, '0 1 0', '1'),
(442, 11, '0 1 0', '1'),
(443, 11, '0 1 1', '2'),
(444, 11, '0 1 1', '2'),
(445, 11, '1 0 0', '1'),
(446, 11, '1 1 0', '2'),
(447, 11, '0 1 0', '1'),
(448, 11, '0 0 0', '0'),
(449, 11, '0 0 1', '1'),
(450, 11, '1 1 1', '3'),
(451, 11, '1 0 0', '1'),
(452, 11, '0 0 1', '1'),
(453, 11, '1 0 1', '2'),
(454, 11, '0 1 1', '2'),
(455, 11, '1 0 1', '2'),
(456, 11, '1 1 0', '2'),
(457, 11, '0 0 1', '1'),
(458, 11, '1 0 0', '1'),
(459, 11, '1 0 0', '1'),
(460, 11, '1 1 1', '3'),
(461, 11, '1 0 1', '2'),
(462, 11, '0 0 0', '0'),
(463, 11, '0 0 1', '1'),
(464, 11, '0 0 1', '1'),
(465, 11, '0 1 1', '2'),
(466, 11, '0 0 1', '1'),
(467, 11, '0 0 1', '1'),
(468, 11, '1 1 1', '3'),
(469, 11, '1 0 0', '1'),
(470, 11, '0 0 1', '1'),
(471, 11, '0 1 1', '2'),
(472, 11, '1 1 0', '2'),
(473, 11, '0 1 0', '1'),
(474, 11, '0 0 0', '0'),
(475, 11, '0 0 0', '0'),
(476, 11, '0 1 1', '2'),
(477, 11, '0 0 1', '1'),
(478, 11, '0 1 1', '2'),
(479, 11, '0 1 1', '2'),
(480, 11, '0 0 0', '0'),
(481, 11, '1 0 1', '2'),
(482, 11, '0 1 1', '2'),
(483, 11, '0 1 1', '2'),
(484, 11, '0 1 1', '2'),
(485, 11, '0 0 1', '1'),
(486, 11, '0 0 1', '1'),
(487, 11, '1 1 0', '2'),
(488, 11, '1 1 1', '3'),
(489, 11, '1 0 1', '2'),
(490, 11, '1 1 1', '3'),
(491, 11, '1 0 1', '2'),
(492, 11, '0 0 1', '1'),
(493, 11, '0 0 0', '0'),
(494, 11, '1 0 1', '2'),
(495, 11, '1 1 1', '3'),
(496, 11, '0 0 0', '0'),
(497, 11, '1 1 0', '2'),
(498, 11, '1 1 0', '2'),
(499, 11, '0 0 0', '0'),
(500, 11, '0 1 1', '2'),
(501, 11, '1 0 0', '1'),
(502, 11, '0 0 1', '1'),
(503, 11, '1 0 1', '2'),
(504, 11, '1 0 0', '1'),
(505, 11, '1 1 0', '2'),
(506, 11, '0 0 0', '0'),
(507, 11, '1 1 0', '2'),
(508, 11, '0 1 0', '1'),
(509, 11, '1 0 0', '1'),
(510, 11, '1 1 0', '2'),
(511, 11, '1 0 1', '2'),
(512, 11, '1 1 1', '3'),
(513, 11, '0 1 0', '1'),
(514, 11, '1 0 1', '2'),
(515, 11, '0 0 1', '1'),
(516, 11, '1 0 1', '2'),
(517, 11, '1 0 0', '1'),
(518, 11, '1 1 1', '3'),
(619, 13, '51\nx--\nx--\n--x\n++x\nx++\n++x\nx++\n++x\n--x\n--x\nx++\nx++\nx++\nx++\nx--\nx--\nx++\nx++\n++x\n++x\nx++\n++x\nx--\n--x\n++x\n++x\nx++\nx--\nx--\n--x\n--x\nx--\n++x\nx++\n--x\n++x\n++x\nx++\n++x\n++x\nx++\n--x\nx++\nx++\n++x\nx--\nx--\nx--\n++x\nx--\n++x', '11'),
(620, 13, '96\n++x\n--x\n--x\nx--\nx++\n--x\nx--\n--x\n--x\n++x\n++x\n++x\n++x\n++x\nx--\n++x\nx--\n++x\n--x\n++x\nx++\n++x\n++x\n++x\nx++\nx--\nx--\nx--\n++x\nx++\nx++\nx++\n--x\nx--\nx++\nx--\n++x\nx++\nx--\nx--\n--x\n--x\n--x\nx--\n++x\nx++\nx++\n--x\n--x\nx--\nx--\nx--\nx++\nx++\nx++\nx++\n++x\nx++\n++x\nx++\n--x\n++x\nx--\n++x\nx--\n--x\nx--\n++x\nx++\nx--\nx--\n--x\nx++\nx++\nx--\n--x\n--x\nx--\nx--\n++x\nx++\nx--\nx--\nx++\nx--\n++x\nx++\n--x\n++x\nx++\n--x\nx++\nx--\nx--\n--x\n++x', '0'),
(621, 13, '25\n--x\nx--\nx--\n++x\nx--\nx--\n++x\n--x\n--x\n++x\n++x\nx--\n++x\n--x\nx++\n++x\n--x\nx--\nx++\n++x\n++x\nx--\nx++\n--x\n--x', '-3'),
(622, 13, '85\n++x\nx--\nx--\n++x\n--x\nx++\nx--\n++x\n++x\nx--\n--x\nx--\nx--\nx++\n++x\nx++\n--x\nx--\n--x\n++x\n--x\nx++\n--x\nx++\nx++\n--x\nx--\nx++\n--x\n++x\n--x\nx++\n--x\nx++\n--x\nx--\n++x\n++x\n--x\n++x\n--x\n++x\nx--\nx++\n--x\nx++\n--x\n++x\n++x\nx--\n++x\n++x\n--x\nx--\nx++\nx--\n--x\nx--\nx--\nx++\nx--\n++x\nx++\n--x\n++x\nx--\nx--\n--x\nx--\n--x\nx--\nx--\n--x\nx--\n++x\nx--\n++x\nx--\n--x\nx--\nx++\nx++\n--x\nx++\n++x', '-11'),
(623, 13, '24\nx--\n++x\nx++\nx--\nx--\n++x\nx--\n++x\n++x\nx++\nx--\n++x\n--x\n++x\n--x\nx--\n++x\n--x\nx++\nx++\nx--\n--x\nx++\nx++', '2'),
(624, 13, '98\n--x\nx--\n++x\nx--\n--x\nx--\nx++\n++x\nx++\n++x\nx--\n--x\nx--\nx--\nx--\n++x\nx--\nx++\n++x\n++x\n++x\nx++\n++x\nx++\n--x\nx--\n++x\n--x\nx--\n++x\nx--\nx--\nx--\n++x\nx--\n++x\n--x\n--x\n++x\nx--\nx--\nx++\n++x\nx--\n++x\nx++\n--x\nx--\n++x\n--x\nx--\nx--\n--x\nx++\nx++\n++x\n--x\nx++\nx--\n++x\n++x\n++x\n--x\nx--\nx--\nx++\n--x\nx--\nx--\n++x\nx--\n++x\nx++\nx--\n++x\n--x\n--x\n--x\nx++\n--x\nx++\nx++\n--x\nx--\n--x\nx--\n++x\nx--\nx++\nx++\n--x\nx--\n++x\nx++\nx--\n--x\nx--\n--x', '-12'),
(625, 13, '64\n--x\n--x\nx--\n--x\n--x\n++x\n++x\n++x\nx++\nx--\n++x\n++x\n++x\n--x\n++x\n++x\n--x\n--x\n++x\n++x\nx++\nx++\n++x\n++x\nx--\nx--\n--x\nx++\nx++\nx++\nx--\n++x\n++x\nx++\n++x\n--x\nx++\n--x\n++x\n++x\n--x\n++x\nx--\nx--\nx--\n--x\n--x\nx++\nx--\n--x\n--x\nx--\n++x\nx--\nx++\nx--\n--x\nx++\n--x\nx--\n++x\n++x\nx--\n--x', '0'),
(626, 13, '63\nx--\n++x\n++x\n--x\nx++\n++x\nx++\nx--\nx++\n--x\n++x\nx--\n--x\nx++\nx++\nx--\n--x\n--x\nx++\nx--\n--x\n--x\n--x\n++x\n--x\nx++\nx--\nx++\nx--\nx--\n--x\nx--\nx--\nx--\nx--\n++x\n--x\n--x\n--x\nx++\nx++\n--x\nx++\nx++\nx++\n++x\nx--\nx--\n++x\n++x\n++x\n--x\n--x\n--x\nx--\n++x\nx--\nx++\nx++\nx++\nx++\nx++\n++x', '-3'),
(627, 13, '0', '0'),
(628, 13, '26\n++x\n--x\nx++\n++x\n++x\nx++\n--x\n--x\nx--\nx++\n--x\nx++\n++x\n--x\n++x\n--x\n++x\n++x\n--x\nx--\n--x\n--x\nx++\n++x\nx++\n--x', '2'),
(629, 13, '31\nx++\nx++\nx--\n--x\nx--\nx--\n++x\nx--\n++x\n--x\n++x\nx++\n--x\nx--\n++x\n++x\n++x\nx++\n--x\n++x\n--x\n--x\n++x\nx--\nx--\n++x\nx--\nx++\n++x\nx--\n++x', '1'),
(630, 13, '71\nx++\n--x\nx--\nx--\n--x\n--x\nx++\n--x\nx--\nx++\n--x\n--x\nx--\n--x\nx++\nx++\nx--\n--x\n--x\n--x\n--x\n--x\nx++\nx++\n++x\n++x\nx--\n++x\n++x\nx++\nx--\n++x\nx--\nx--\n--x\nx--\nx--\n++x\nx--\n--x\nx++\nx--\nx--\nx++\n--x\nx++\nx++\n--x\nx++\nx--\nx++\n++x\nx--\n++x\n++x\n++x\nx--\nx++\n--x\nx++\n++x\nx++\n++x\n--x\n++x\nx++\nx--\nx++\n--x\nx++\nx++', '-3'),
(631, 13, '41\n--x\nx--\n--x\n--x\nx--\nx--\n--x\nx++\nx--\n++x\n--x\nx--\n--x\n++x\n++x\n--x\nx++\n++x\nx--\nx++\n++x\n--x\n++x\nx--\nx++\n++x\nx++\nx++\nx--\nx--\nx++\n++x\n++x\nx++\nx++\nx++\n--x\nx--\n--x\n++x\nx--', '-1'),
(632, 13, '7\n++x\n--x\nx--\nx--\n--x\n--x\n--x', '-5'),
(633, 13, '92\n--x\n--x\n--x\n++x\nx--\n++x\n--x\nx--\nx++\nx++\n--x\n--x\nx--\nx++\nx--\n--x\nx--\n--x\n++x\nx--\nx++\nx++\nx--\n++x\n--x\nx--\n--x\nx--\nx++\nx++\nx--\n--x\n++x\nx++\n++x\n++x\nx--\n--x\nx--\n--x\n--x\nx--\n--x\nx++\n++x\nx--\nx++\n--x\nx++\n--x\nx--\n++x\n--x\n++x\n++x\n--x\n--x\nx++\n++x\n--x\n++x\n--x\nx++\nx++\n--x\nx++\nx++\nx--\n--x\nx++\nx++\nx--\n--x\n++x\nx++\nx++\nx++\n--x\n--x\n++x\n--x\n--x\nx--\n--x\n--x\nx--\n++x\n++x\nx++\n--x\n--x\nx++', '-12'),
(634, 13, '18\nx++\nx--\n++x\n--x\nx--\nx++\nx--\n++x\nx--\n--x\nx++\n++x\nx--\nx--\nx++\nx--\n++x\nx--', '-2'),
(635, 13, '93\n++x\n--x\nx++\nx--\n++x\nx--\n++x\n--x\n--x\nx--\nx--\n++x\n--x\nx--\nx--\n++x\n++x\n++x\n--x\nx--\n--x\n++x\nx--\nx--\n++x\n++x\nx++\nx++\n--x\nx++\nx--\n++x\n++x\n++x\nx++\n--x\nx++\n++x\nx--\n--x\nx++\nx++\nx++\nx--\nx--\nx--\n--x\n++x\nx++\n--x\nx--\n--x\n--x\n++x\nx++\nx++\nx++\n--x\nx++\n--x\n--x\n++x\nx++\n--x\n++x\nx++\nx++\n--x\nx--\nx--\nx--\nx++\nx++\n--x\nx--\nx++\nx--\n++x\nx++\n--x\n--x\n++x\nx++\nx--\nx--\n--x\nx--\n--x\n--x\n++x\n--x\nx--\n--x', '-7'),
(636, 13, '66\nx++\nx--\n++x\nx++\n++x\nx--\nx--\n++x\nx++\n--x\nx--\nx++\nx--\nx--\nx--\n--x\n++x\n++x\n--x\nx++\nx++\n--x\nx--\n--x\nx++\n--x\nx++\nx--\n--x\n++x\nx++\nx--\n--x\nx++\nx++\nx--\nx++\nx++\n--x\n--x\n++x\nx++\n++x\nx--\nx++\n++x\nx++\nx--\n++x\nx--\nx--\nx--\n++x\n--x\nx++\nx++\n--x\nx--\nx++\nx--\n--x\n--x\nx++\nx--\n--x\n++x', '-2'),
(637, 13, '77\nx++\nx--\n--x\n++x\n++x\nx--\nx--\nx--\n++x\n--x\nx--\nx--\n++x\nx--\n--x\n++x\nx++\nx++\n++x\nx--\nx--\nx++\nx--\nx++\n--x\n--x\nx--\nx--\n++x\nx++\n--x\n++x\nx--\n++x\n--x\n++x\n++x\nx--\nx++\nx--\nx++\n--x\n++x\n++x\nx++\nx--\nx--\nx--\nx++\n++x\n++x\n++x\n++x\nx--\nx--\nx++\nx++\n++x\nx--\nx--\n++x\n--x\nx--\nx--\nx--\n++x\n++x\n++x\nx--\nx--\n--x\n--x\nx++\n++x\n++x\n--x\nx++', '-1'),
(638, 13, '94\nx--\n++x\n--x\nx--\n--x\nx--\n++x\nx++\n++x\n--x\nx++\n++x\n++x\n++x\nx--\nx++\nx++\n++x\n--x\n++x\nx++\n--x\nx--\n++x\n--x\n--x\n++x\nx++\nx++\n--x\n--x\nx++\nx++\n++x\n--x\n++x\n++x\n--x\nx--\n--x\nx++\n++x\nx--\n--x\n++x\nx++\nx--\nx--\nx++\nx--\nx++\n++x\n++x\n++x\n++x\n--x\n++x\n--x\nx++\nx--\n++x\n--x\nx++\n++x\n++x\nx++\n--x\nx--\nx++\nx++\n--x\nx++\n--x\nx--\nx++\nx--\nx--\nx++\nx--\n--x\nx++\n--x\n++x\n--x\n--x\n--x\nx--\nx--\n++x\n--x\n++x\n++x\nx++\n--x', '6'),
(639, 13, '23\nx++\n--x\nx++\n++x\n--x\nx--\n--x\n++x\nx--\n--x\n--x\n++x\n++x\n--x\n++x\nx++\nx--\nx--\nx--\nx++\nx--\nx++\n--x', '-3'),
(640, 13, '62\n++x\nx++\n--x\nx++\n--x\n++x\nx++\n++x\n--x\nx++\nx++\n--x\n++x\nx++\nx--\nx--\n--x\nx--\nx--\nx++\nx--\n++x\n++x\n++x\n--x\n++x\n--x\n++x\nx--\nx++\n++x\n--x\nx--\n--x\n--x\n++x\n++x\nx--\nx++\n++x\n--x\nx--\nx--\nx--\nx--\nx++\n++x\nx++\nx++\nx++\nx--\nx++\n--x\nx++\nx++\n--x\n++x\n++x\n--x\nx--\n++x\nx++', '6'),
(641, 13, '3\nx++\nx++\nx--', '1'),
(642, 13, '100\n--x\nx--\nx--\nx--\n--x\nx++\nx++\nx++\nx--\n--x\n--x\nx--\nx++\nx++\n--x\nx++\nx--\nx++\n++x\nx++\nx--\n++x\nx--\n--x\nx++\n--x\n--x\nx--\nx--\n++x\n++x\nx--\n--x\n--x\nx++\n++x\nx++\n++x\nx++\n--x\nx--\n++x\n--x\nx--\n++x\nx++\n--x\nx--\n++x\n--x\n--x\nx++\nx++\nx++\n++x\nx++\n--x\n++x\nx--\n++x\nx--\nx--\nx--\nx--\nx--\n--x\nx++\nx++\n--x\n--x\n++x\nx--\nx++\n--x\nx--\n--x\n++x\n++x\nx--\nx++\n--x\nx--\nx--\n--x\n--x\nx--\nx++\n++x\nx--\n++x\n++x\n--x\n++x\nx--\nx++\nx++\n--x\n--x\n--x\n++x', '-12'),
(643, 13, '34\nx++\n++x\n++x\n--x\n--x\nx++\nx--\nx--\nx++\n--x\nx--\nx--\nx++\n--x\n++x\nx--\n--x\nx--\nx++\nx++\nx--\nx++\n++x\nx++\n--x\n--x\n++x\nx--\n--x\nx++\n++x\nx--\nx++\n--x', '-2'),
(644, 13, '23\n--x\n--x\nx--\n--x\nx--\nx++\nx--\nx++\nx--\n++x\nx--\nx--\nx++\nx++\n++x\n++x\nx--\nx++\nx++\n--x\nx--\n++x\n++x', '-1'),
(645, 13, '79\n--x\n++x\n--x\n--x\nx--\nx--\nx++\nx++\nx--\n++x\nx--\n++x\n--x\nx--\nx--\n--x\nx++\nx++\n++x\n--x\nx++\nx--\n++x\n--x\nx--\nx++\nx--\nx++\n++x\n--x\nx++\nx++\n++x\nx--\nx--\n--x\n++x\n--x\n--x\nx--\n++x\n--x\nx++\nx--\n++x\n--x\nx++\nx--\n++x\nx++\nx++\nx--\nx--\n++x\n++x\nx--\nx++\n++x\n--x\nx--\nx--\nx--\n++x\nx--\n++x\nx++\n--x\n++x\nx--\n--x\nx--\n++x\nx--\nx++\n--x\nx--\nx--\n++x\n--x', '-9'),
(646, 13, '97\n++x\nx++\n--x\nx--\n++x\nx++\nx++\nx++\nx--\nx--\n--x\nx++\n++x\n++x\n++x\n++x\n--x\n--x\nx++\n++x\n++x\n--x\nx++\nx--\n++x\nx++\nx--\n--x\n++x\n--x\n++x\nx++\nx--\nx--\nx++\nx--\n++x\n++x\nx++\nx++\n++x\n++x\nx++\nx++\nx--\nx--\n++x\n--x\n--x\n--x\nx--\nx++\nx++\n--x\nx++\nx--\n++x\n--x\n++x\nx++\nx--\nx++\nx--\n--x\n++x\nx++\nx--\nx++\n++x\nx--\n++x\n--x\n--x\nx--\nx++\nx--\nx--\n++x\n--x\n++x\n--x\nx--\nx--\n--x\n--x\nx++\nx++\n++x\nx++\nx++\n++x\nx--\n++x\n--x\nx++\n++x\n--x', '11'),
(647, 13, '40\n++x\nx++\n++x\n--x\nx++\nx++\nx++\n++x\nx++\n++x\n--x\nx++\n--x\n--x\nx++\nx--\n++x\nx--\n--x\n++x\n++x\n++x\n++x\n++x\nx++\nx--\nx--\nx--\n++x\n++x\n++x\nx++\n--x\nx--\n++x\nx++\nx++\nx++\n++x\nx--', '14'),
(648, 13, '73\n++x\nx++\nx--\n--x\n--x\nx++\nx++\n++x\n++x\n++x\n++x\n--x\nx++\nx--\nx++\n++x\n++x\nx--\nx--\nx++\n--x\nx--\nx--\nx--\n--x\nx++\nx++\nx++\n--x\nx++\n++x\nx--\nx++\nx++\n--x\nx++\nx++\nx--\n--x\nx++\n--x\nx++\nx--\nx++\n--x\nx++\n++x\n++x\n++x\nx--\nx++\n++x\nx++\n--x\nx--\n++x\nx--\n++x\nx--\nx--\nx++\n++x\n++x\nx--\n++x\n++x\nx--\nx++\n--x\n++x\nx++\nx++\nx++', '15'),
(649, 13, '32\nx--\n--x\nx--\nx--\nx--\n--x\nx--\nx--\nx++\nx++\nx++\nx--\nx--\n--x\n++x\nx--\nx++\nx--\n++x\n++x\nx++\nx++\nx++\n--x\nx++\nx--\nx--\nx++\nx++\nx--\n--x\n--x', '-6'),
(650, 13, '98\n++x\nx--\n++x\n++x\nx--\nx--\n--x\nx++\n++x\n--x\nx--\nx++\n--x\n++x\n--x\nx++\n--x\n++x\nx++\n++x\nx++\nx++\n++x\nx--\n++x\nx++\n--x\nx--\nx++\nx++\n++x\nx--\nx++\nx++\nx--\n--x\nx--\n++x\n++x\nx++\n++x\n++x\n--x\nx++\nx--\nx--\nx--\nx--\nx--\n--x\nx++\nx--\nx++\n++x\n++x\n++x\n--x\nx++\n++x\n--x\n++x\nx--\nx++\nx--\nx++\n++x\nx++\nx--\nx++\n--x\nx--\n--x\n--x\n++x\n--x\n--x\n--x\nx--\n++x\nx++\n--x\nx++\nx++\n--x\n--x\nx++\nx++\n++x\n++x\n++x\nx++\nx++\nx++\n++x\nx--\nx++\nx--\nx--', '12'),
(651, 13, '64\n++x\n++x\nx--\nx--\n--x\n--x\n--x\nx++\nx--\nx--\nx++\n--x\n--x\nx++\nx++\nx--\n++x\n--x\n--x\nx--\n--x\n++x\nx--\n--x\n--x\nx--\nx++\nx--\n--x\nx++\n++x\n++x\n--x\nx--\nx--\nx--\n--x\n--x\nx--\nx--\nx++\nx--\nx--\nx--\nx--\n++x\n--x\nx--\n++x\n--x\n++x\n--x\n++x\n++x\n--x\nx--\nx--\nx++\n--x\n--x\nx--\n++x\n++x\n--x', '-22'),
(652, 13, '23\n--x\n++x\nx++\n--x\nx--\nx--\n--x\nx++\nx--\nx++\n--x\nx++\nx++\nx++\nx--\nx--\n++x\nx++\nx--\nx--\nx++\nx++\n--x', '-1'),
(653, 13, '59\n--x\n++x\nx++\nx++\n++x\nx++\nx++\n++x\nx++\n++x\nx++\n++x\n--x\nx--\nx--\n--x\n++x\n--x\nx++\n--x\nx++\nx--\n--x\nx++\nx--\nx++\nx++\nx++\n--x\n++x\n++x\nx--\n++x\n--x\nx++\n++x\nx++\n++x\nx--\nx--\n++x\n++x\nx--\n++x\nx--\nx++\nx++\nx--\n--x\nx--\n--x\nx--\nx++\nx--\nx++\nx++\n--x\nx++\n++x', '11'),
(654, 13, '36\nx++\nx--\n--x\n--x\n++x\n--x\nx++\nx++\n++x\nx++\nx--\n++x\nx++\nx--\nx--\nx--\nx++\nx++\n--x\nx++\nx++\nx--\nx--\nx++\n--x\n++x\n--x\nx--\nx++\nx--\nx--\n++x\nx++\nx--\nx--\n++x', '0'),
(655, 13, '50\nx++\n--x\n++x\n--x\nx++\n--x\nx--\n++x\n--x\n--x\nx--\nx--\n++x\nx--\n++x\n--x\n--x\nx++\n++x\n++x\nx++\nx++\nx++\nx--\n++x\nx--\n++x\nx--\n++x\n++x\nx--\nx++\n++x\nx++\n--x\nx--\n++x\nx--\n--x\n++x\n++x\nx++\nx++\nx++\n++x\n++x\n--x\n--x\nx--\nx--', '4'),
(656, 13, '60\n++x\nx--\nx++\n++x\n--x\n++x\n--x\n--x\nx--\nx++\n--x\nx--\nx++\n--x\n++x\n++x\nx++\nx--\n--x\n++x\nx++\n--x\n--x\nx++\n--x\n--x\n++x\n++x\nx++\nx++\nx++\nx--\nx--\n++x\n++x\nx++\nx--\n--x\n--x\n++x\n--x\n++x\nx++\n--x\nx++\n--x\n++x\n++x\n++x\n++x\n++x\n--x\n--x\n--x\nx++\n--x\n--x\nx--\n--x\n--x', '0'),
(657, 13, '8\n++x\nx--\n--x\n++x\nx--\nx++\nx++\n--x', '0'),
(658, 13, '38\n++x\nx--\n--x\nx--\n++x\n++x\n--x\nx++\n++x\n++x\n++x\n++x\nx++\n++x\n++x\n++x\nx--\n++x\nx--\n--x\nx--\nx++\nx++\n--x\nx--\nx++\n++x\n++x\nx--\n--x\n++x\n++x\nx++\n++x\n--x\nx--\nx--\n++x', '8'),
(659, 13, '42\nx++\n--x\n--x\n--x\n--x\nx++\nx++\n++x\nx++\nx++\n--x\n++x\nx++\nx--\nx++\n--x\n--x\n++x\nx--\nx++\nx++\nx++\nx++\n--x\n++x\n--x\nx--\nx--\nx++\nx--\n++x\nx--\n--x\n++x\nx--\n++x\n--x\n--x\n--x\nx++\n++x\nx++', '2'),
(660, 13, '64\nx++\nx--\nx++\nx++\nx++\nx++\nx--\nx--\n++x\nx--\n--x\nx--\n++x\n++x\n--x\n--x\nx--\nx--\nx++\n++x\nx++\n++x\n--x\n--x\nx++\nx--\nx++\nx++\nx--\n++x\nx++\n++x\nx++\nx++\nx--\n--x\nx--\nx++\n++x\nx--\nx--\n--x\nx--\nx++\nx--\nx--\n++x\n--x\n--x\nx++\n--x\n++x\nx++\nx--\n++x\n--x\nx--\nx--\n--x\nx++\nx--\n++x\n++x\nx--', '-2'),
(661, 13, '19\n++x\n--x\n--x\nx--\n--x\nx--\nx++\n++x\n++x\n++x\nx++\n++x\n++x\n--x\n++x\n++x\nx++\n--x\nx--', '3'),
(662, 13, '13\n--x\n--x\nx--\nx--\n++x\n++x\n++x\n++x\n++x\nx++\nx++\nx--\nx--', '1'),
(663, 13, '46\nx--\n++x\n--x\nx++\n--x\n++x\nx++\nx--\nx++\n--x\n++x\nx++\nx++\nx--\n++x\n--x\n--x\nx--\n--x\n--x\nx--\n--x\nx--\n++x\n--x\n--x\n--x\n++x\nx++\n++x\nx++\nx--\nx++\n--x\nx--\n--x\n++x\nx--\n--x\n++x\n--x\nx--\nx++\n--x\nx--\n--x', '-10'),
(664, 13, '39\nx--\nx--\nx++\n++x\nx++\n--x\nx++\n--x\n++x\nx--\nx++\n--x\nx--\nx--\nx--\n++x\nx++\n--x\n++x\n++x\nx--\n++x\n++x\n++x\n++x\nx--\nx++\n++x\nx++\nx++\nx++\nx++\nx--\nx--\n--x\n--x\n--x\n--x\n++x', '3'),
(665, 13, '15\nx++\n--x\n--x\n++x\n--x\n++x\n--x\nx++\n++x\nx++\n++x\nx++\n--x\n--x\n--x', '1'),
(666, 13, '91\nx--\nx++\n--x\n++x\n++x\nx--\nx--\n--x\n--x\n--x\n++x\nx--\nx--\nx++\nx++\nx++\n++x\n++x\n++x\nx--\nx++\n++x\nx--\nx++\n++x\nx++\nx--\nx++\n++x\nx--\n++x\n--x\nx--\nx++\nx--\nx++\n--x\n--x\nx--\nx--\n--x\n++x\n--x\n++x\nx++\nx--\n--x\n--x\nx++\n++x\n--x\nx++\nx--\n++x\nx++\n++x\nx--\nx++\nx--\n++x\nx++\n++x\nx--\n++x\n--x\nx++\nx++\n--x\n--x\nx++\nx++\n--x\nx--\n++x\nx--\nx++\nx--\nx++\nx++\n++x\n++x\n--x\n++x\n--x\nx--\n--x\nx--\n--x\n--x\n++x\n++x', '3'),
(667, 13, '49\nx--\nx--\n--x\nx++\n--x\nx--\n--x\nx--\nx++\nx++\nx++\nx++\nx--\n++x\nx++\nx--\n--x\nx--\n--x\nx++\nx++\n++x\nx--\n--x\nx--\nx--\n++x\n--x\nx++\n--x\nx++\nx++\n--x\n--x\n++x\n--x\n++x\nx--\n++x\n++x\n--x\n--x\nx--\nx++\n++x\n++x\nx--\nx--\n++x', '-5'),
(668, 13, '4\nx++\n--x\n--x\n++x', '0'),
(669, 13, '22\nx++\nx--\n++x\nx++\n--x\nx++\n--x\nx++\nx++\n--x\n++x\n++x\nx--\nx++\n++x\n--x\n++x\nx--\nx--\nx--\n++x\n++x', '4'),
(670, 13, '4\nx--\n--x\nx++\n--x', '-2'),
(671, 13, '90\n--x\nx++\n--x\n--x\n--x\n--x\nx--\n--x\nx--\nx--\n++x\nx++\nx--\nx++\nx--\n--x\nx--\n++x\nx++\n--x\nx--\nx--\n--x\n--x\n++x\nx++\n--x\n--x\n--x\n++x\nx++\n--x\n++x\n++x\n--x\n++x\nx++\nx--\n++x\nx--\nx--\nx++\nx++\n--x\nx--\n--x\nx++\nx++\nx--\nx++\n--x\n++x\n++x\n++x\nx++\nx++\nx--\n--x\n--x\nx--\n--x\nx++\nx++\n++x\n--x\nx--\nx--\nx++\nx--\nx--\n--x\n++x\n--x\nx++\n--x\n--x\nx++\nx--\n++x\nx++\n--x\nx++\n++x\n++x\n--x\n++x\nx++\n++x\n++x\nx--', '-8'),
(672, 13, '38\nx++\nx++\nx++\nx++\n--x\n++x\nx++\n++x\nx--\nx--\nx--\nx--\n++x\nx--\nx++\nx++\nx--\nx--\n++x\n--x\n++x\nx++\nx++\n++x\n--x\nx--\n--x\nx++\nx--\n++x\nx++\nx++\nx--\nx++\n++x\nx--\nx++\nx++', '8'),
(673, 13, '76\n--x\nx--\nx--\nx--\nx++\nx--\n++x\n--x\nx--\n--x\nx++\nx--\n++x\n++x\n--x\n--x\nx--\n++x\nx--\nx++\n--x\nx++\nx++\n++x\nx--\n++x\n--x\nx++\nx++\n++x\n--x\n++x\nx--\nx--\nx++\nx++\nx++\n++x\n++x\n--x\nx++\nx++\n++x\nx++\nx++\nx++\nx--\n--x\nx--\n--x\n--x\nx++\nx++\n--x\n++x\nx--\n++x\nx++\n++x\n--x\n++x\nx++\nx--\nx--\nx++\nx++\nx--\n++x\nx--\n++x\n++x\n++x\n--x\nx--\n--x\nx--', '4'),
(674, 13, '78\nx++\n++x\nx--\nx--\nx--\nx++\nx--\n--x\n--x\n--x\nx++\nx--\nx--\nx++\n++x\nx++\nx++\n++x\n++x\nx--\nx++\nx++\n++x\nx++\n++x\n++x\nx--\nx--\n++x\nx--\n--x\n--x\nx--\n++x\n++x\n++x\nx--\n--x\n++x\nx--\nx++\nx--\nx--\n--x\n++x\n++x\n--x\nx--\nx++\n++x\nx--\nx--\nx--\n--x\n++x\n++x\nx--\nx--\n++x\nx++\n--x\nx++\nx--\nx--\n++x\n--x\n--x\n--x\nx--\nx++\nx--\nx++\n--x\n--x\n--x\nx--\n++x\nx--', '-8'),
(675, 13, '50\n++x\nx++\nx--\n--x\n--x\n++x\nx--\n--x\nx++\nx++\n--x\n++x\nx--\n--x\nx--\n++x\n--x\n--x\n++x\n++x\n--x\nx++\n++x\nx--\n++x\nx--\n--x\nx++\n--x\n++x\nx--\nx++\n--x\n--x\n++x\nx++\nx++\nx++\n--x\nx++\n--x\nx--\nx--\nx++\n--x\nx--\nx--\nx--\nx--\n--x', '-8'),
(676, 13, '33\n--x\nx--\nx++\n++x\nx++\n--x\n--x\n--x\n++x\nx--\nx--\nx--\n--x\nx--\n++x\nx--\nx++\n++x\nx--\nx++\nx--\n++x\n--x\n--x\nx++\n++x\n++x\n--x\nx--\n--x\nx--\nx++\nx--', '-7'),
(677, 13, '93\n++x\nx--\n--x\n++x\n--x\n++x\nx--\n++x\n++x\nx--\nx--\n++x\n++x\nx++\n--x\nx++\n--x\nx--\nx--\n--x\n++x\nx--\n--x\n--x\n--x\nx++\n--x\nx--\nx--\nx++\n++x\n--x\nx--\nx++\n++x\n--x\n++x\n--x\n--x\nx++\nx--\n--x\n++x\nx--\nx++\n--x\n++x\n++x\n++x\nx--\nx--\n--x\nx--\n++x\nx--\n--x\nx--\nx--\n--x\nx--\n--x\nx++\nx++\n--x\nx++\n--x\nx--\n--x\n++x\nx++\nx--\n--x\nx++\nx++\nx++\nx++\nx++\n--x\n--x\n--x\n++x\nx++\nx++\n++x\n--x\n++x\nx++\n++x\n++x\n++x\nx++\nx++\n++x', '-3'),
(678, 13, '53\nx++\n++x\nx++\n++x\nx--\n--x\nx--\n++x\nx--\n++x\n--x\nx--\nx--\nx++\n++x\n--x\n--x\nx--\n--x\n++x\n--x\nx++\n++x\n++x\n++x\nx--\n++x\n++x\n--x\nx--\n++x\nx++\nx--\nx--\nx++\n++x\nx++\nx++\nx++\n++x\nx--\n--x\n++x\nx++\n--x\nx--\nx--\nx++\n--x\nx--\n++x\nx++\n++x', '5'),
(679, 13, '27\nx--\nx++\nx--\nx--\n++x\nx--\nx--\nx--\n--x\n--x\nx--\n--x\n++x\n--x\nx++\n--x\nx--\n++x\nx++\n++x\nx++\nx--\n++x\nx++\nx--\nx--\n++x', '-5'),
(680, 13, '62\nx--\n++x\nx++\nx++\n++x\nx++\n--x\n++x\nx++\nx++\n--x\n--x\n++x\nx--\nx--\n++x\n++x\n++x\nx++\nx--\n++x\n++x\n--x\nx--\n--x\n--x\n--x\n--x\nx++\n--x\n++x\nx--\nx++\n++x\nx--\n++x\n--x\nx--\nx--\nx++\nx++\nx--\n--x\nx++\nx++\nx--\n++x\n++x\nx--\n--x\n++x\n--x\n--x\n++x\n++x\n++x\n++x\nx--\n++x\n++x\n++x\n--x', '6'),
(681, 13, '91\nx++\n--x\n--x\n++x\nx--\n++x\n--x\nx++\n++x\nx--\nx--\n++x\n--x\nx++\n++x\n--x\n++x\nx--\nx++\n++x\nx--\nx--\n++x\nx--\n++x\nx++\n++x\nx--\n++x\nx--\nx--\nx--\nx--\n++x\n--x\nx--\n++x\nx--\n++x\nx++\n++x\n++x\n++x\nx--\nx--\n--x\n++x\n--x\nx--\nx--\n++x\n--x\n++x\nx--\n--x\nx++\n--x\n++x\n++x\n--x\n--x\nx--\n--x\n--x\n++x\n--x\nx++\nx--\n--x\nx--\nx--\n--x\n++x\n++x\nx--\n++x\nx++\n--x\nx++\n--x\n--x\n--x\n--x\n--x\n++x\nx--\n++x\n--x\n--x\n--x\n--x', '-15'),
(682, 13, '69\nx++\nx--\n++x\n++x\n--x\n--x\n++x\n--x\n--x\nx++\n--x\nx++\n++x\n++x\n--x\nx++\nx++\n++x\nx++\n--x\n++x\n++x\n--x\n--x\nx--\n--x\n++x\n--x\nx++\nx++\n++x\n--x\nx--\n++x\n++x\n++x\nx++\n++x\n++x\nx++\nx++\nx--\n--x\n--x\n++x\nx++\n--x\n--x\nx++\n--x\nx++\n++x\n--x\nx++\nx--\n++x\n--x\nx--\n++x\n++x\nx++\n++x\nx++\n++x\n++x\nx--\n--x\nx--\nx--', '11'),
(683, 13, '20\n++x\n--x\n++x\nx--\n--x\nx++\n++x\nx--\nx--\nx++\nx--\n--x\n--x\nx++\nx++\n++x\nx++\nx--\n++x\n++x', '2'),
(684, 13, '53\nx--\nx++\nx--\n++x\n--x\n++x\n--x\n++x\n++x\n++x\nx++\nx++\nx++\nx--\nx--\nx--\n--x\nx--\n++x\nx++\nx++\nx--\n++x\n--x\nx--\nx++\n++x\n++x\nx--\n--x\n++x\nx++\nx--\nx++\nx++\nx++\nx++\nx--\nx++\nx--\nx--\n--x\nx--\n++x\n--x\nx++\n--x\nx--\nx++\nx++\nx--\nx--\nx++', '3'),
(685, 13, '11\n++x\nx--\n--x\nx--\nx++\n--x\nx++\n++x\nx--\n--x\nx--', '-3'),
(686, 13, '100\n++x\n--x\nx--\n++x\nx++\nx--\n--x\nx++\nx++\n++x\nx--\nx++\nx++\n++x\nx--\n++x\nx--\nx--\nx--\n--x\nx--\nx++\nx--\nx--\n++x\nx++\n++x\nx--\nx++\n--x\nx++\nx++\nx--\nx--\n++x\n--x\n--x\nx++\nx++\n--x\n--x\nx++\n--x\n--x\nx++\n--x\nx++\n++x\nx++\n++x\n--x\nx++\n++x\nx--\n++x\n++x\nx++\nx++\n--x\nx++\n--x\n--x\nx--\n++x\n++x\nx++\nx++\n++x\n++x\n++x\n++x\n--x\n++x\n--x\n++x\n++x\nx--\n--x\nx++\n++x\nx++\nx++\nx++\n++x\n--x\n++x\n--x\nx--\n--x\n--x\nx++\nx++\n--x\n--x\n++x\nx--\nx++\nx++\n--x\nx++', '14'),
(687, 13, '82\n--x\n++x\n++x\n++x\nx++\nx++\n--x\nx++\nx++\n--x\n++x\n++x\n++x\nx++\nx++\n++x\n++x\nx++\nx++\n--x\n--x\n++x\nx--\n--x\nx--\nx--\nx--\n++x\n--x\nx--\n++x\nx++\n++x\nx--\nx--\nx--\n++x\n++x\nx++\n--x\n--x\nx++\nx--\nx++\nx--\n++x\n--x\nx++\n++x\nx--\n--x\nx--\n--x\n--x\n++x\n++x\n--x\nx++\n++x\nx--\nx--\n++x\nx--\nx--\n++x\nx++\n--x\n++x\n++x\nx++\n--x\n--x\nx++\n--x\n--x\nx--\n--x\nx--\nx++\nx--\nx--\nx--', '0'),
(688, 13, '83\nx++\n++x\nx++\nx++\n++x\nx++\n--x\nx--\n++x\nx--\n--x\n--x\n--x\n++x\n++x\nx--\nx++\n--x\n++x\nx++\n++x\nx++\nx--\n++x\n--x\n--x\n++x\n--x\nx--\n--x\nx++\nx++\n--x\n--x\n++x\nx++\nx++\nx++\n++x\nx--\n++x\nx++\n++x\nx++\n--x\nx++\n--x\n--x\n--x\nx++\nx++\nx++\nx--\nx++\n++x\n++x\nx--\n--x\nx++\n--x\n--x\nx--\nx++\nx--\nx--\nx++\n--x\nx++\nx++\nx--\nx++\n++x\nx++\nx++\nx--\nx++\nx--\nx--\n--x\n++x\n--x\nx--\nx--', '7'),
(689, 13, '43\n++x\n++x\nx--\nx--\nx++\n++x\nx++\nx--\n--x\n++x\n++x\nx++\n--x\nx++\n++x\n--x\nx++\n++x\nx--\n--x\n++x\nx--\n--x\nx--\n--x\n--x\nx--\nx--\n--x\nx--\nx++\n--x\nx--\nx++\n--x\n--x\n++x\n++x\nx--\n++x\n--x\nx--\n--x', '-7'),
(690, 13, '27\nx--\n++x\n--x\nx--\nx++\n++x\n++x\nx++\nx++\nx--\nx++\n--x\n++x\n--x\nx--\n++x\nx++\nx--\n++x\n--x\n--x\nx--\n--x\nx--\n++x\n++x\n++x', '1'),
(691, 13, '72\nx--\nx++\n--x\n--x\n--x\nx++\nx++\n--x\n++x\nx++\n++x\n--x\n++x\nx++\n++x\nx++\nx++\n--x\nx++\nx--\n--x\nx--\n++x\n--x\nx--\n--x\nx++\nx--\nx--\n--x\nx++\nx++\n--x\nx++\n--x\n--x\n++x\nx++\nx++\nx--\nx++\nx--\n--x\n--x\nx++\nx++\n--x\n++x\n--x\n--x\n--x\nx--\n--x\n--x\nx++\nx++\n--x\nx++\n--x\nx++\nx--\nx++\n--x\n--x\nx++\nx++\n++x\n++x\n++x\n++x\n++x\n--x', '0'),
(692, 13, '97\n--x\n++x\n--x\nx++\nx--\n--x\nx++\nx++\nx++\nx++\nx--\nx++\n--x\n++x\nx--\nx++\nx++\n++x\nx++\n++x\nx++\nx--\n--x\nx--\n++x\nx++\nx--\n++x\n++x\n++x\nx--\n--x\n--x\nx++\n++x\n--x\nx--\n--x\nx--\n++x\n++x\n--x\n++x\nx--\nx--\n++x\nx++\nx++\n--x\n++x\n--x\nx--\n--x\nx--\nx++\nx--\nx--\nx++\n++x\nx--\n++x\nx++\nx++\nx++\nx++\n++x\nx--\nx++\n--x\nx++\nx--\n--x\n--x\n++x\nx--\n--x\nx--\nx++\n--x\nx--\nx--\n++x\nx++\nx--\nx++\nx++\nx++\nx++\n++x\nx++\n--x\nx++\n--x\n--x\n++x\nx--\n++x', '7'),
(693, 13, '84\nx++\nx++\n++x\n++x\n++x\n++x\n--x\nx--\n++x\nx++\n++x\nx--\nx++\nx--\n++x\nx--\n--x\nx++\nx--\n++x\nx++\n++x\nx--\n--x\n++x\nx++\nx--\nx++\n++x\nx--\nx++\n--x\n++x\n++x\n--x\n++x\nx--\n--x\nx--\n++x\nx++\nx--\nx++\n++x\n--x\nx++\nx++\nx--\n--x\nx++\nx--\n++x\nx++\n--x\n--x\nx++\n++x\nx--\n++x\nx++\nx--\n--x\nx++\nx--\n--x\nx++\n++x\nx++\n++x\n--x\n++x\n--x\nx++\nx--\nx--\nx--\nx++\n++x\n--x\nx++\n++x\nx--\nx--\n--x', '10'),
(694, 13, '84\nx++\n--x\nx++\nx++\n++x\n++x\nx--\n--x\n--x\nx++\n--x\nx++\nx--\nx++\nx--\n--x\nx--\n++x\nx--\nx++\n--x\n++x\nx++\n++x\n++x\nx++\n++x\nx--\n++x\nx++\nx--\n++x\nx++\n--x\nx++\n++x\nx++\nx++\n--x\nx++\nx--\nx++\n++x\nx++\n--x\n--x\nx++\nx--\n--x\n++x\n--x\n++x\n++x\n--x\nx++\n--x\nx--\n--x\n++x\n++x\n--x\nx--\n--x\nx--\n++x\n--x\n++x\n++x\n--x\nx++\nx--\n++x\nx++\n--x\nx--\nx--\n--x\n++x\n--x\nx++\n++x\nx--\n--x\n++x', '6'),
(695, 13, '3\nx++\n--x\nx--', '-1'),
(696, 13, '50\n++x\nx--\nx--\nx++\n++x\n--x\nx--\nx--\nx++\nx++\nx++\nx++\nx--\nx--\nx--\nx--\n--x\nx++\nx++\nx--\nx++\nx++\nx++\n--x\nx++\n--x\n++x\nx++\nx++\n++x\nx++\n--x\n--x\n--x\n++x\nx++\n--x\n++x\n--x\n--x\nx--\nx++\nx++\n++x\nx++\n++x\nx++\n++x\nx--\n++x', '8'),
(697, 13, '57\nx++\nx--\nx++\n--x\nx--\n++x\nx--\n--x\n--x\n++x\n++x\n--x\n--x\n++x\nx++\n++x\n++x\nx--\nx++\nx++\nx--\n--x\n--x\n++x\nx++\nx++\nx++\n++x\n--x\n--x\nx++\nx++\nx++\nx++\n++x\n++x\n--x\nx--\n--x\nx++\n--x\n--x\n--x\nx--\n++x\n--x\nx--\nx--\n--x\n--x\nx--\nx--\n--x\n++x\n++x\n--x\nx++', '-3'),
(698, 13, '13\n--x\nx++\n--x\nx++\n++x\n++x\nx--\nx++\nx++\n--x\n--x\nx--\nx++', '1'),
(699, 13, '100\nx++\nx++\n++x\nx--\nx++\nx--\nx++\nx--\n++x\nx--\n++x\n--x\n++x\nx--\nx++\nx--\nx++\n--x\n--x\nx--\nx--\n++x\n--x\nx--\nx++\nx++\nx--\nx--\nx++\nx--\nx++\n--x\n++x\nx++\n++x\nx--\n--x\n++x\n--x\n++x\n--x\n--x\nx--\nx--\n--x\nx++\nx++\nx++\n--x\nx++\n++x\nx--\n++x\n++x\n--x\nx--\nx--\nx++\n++x\n++x\n--x\n--x\nx--\n++x\n++x\n--x\nx++\nx--\n--x\nx--\nx--\n--x\nx++\n++x\nx--\n--x\n--x\n++x\n--x\nx--\nx--\nx--\nx++\n--x\n--x\n++x\nx++\n--x\n++x\n++x\nx--\n++x\n++x\n++x\nx--\nx++\n--x\n++x\nx--\n++x', '-6'),
(700, 13, '38\nx--\n--x\nx--\n--x\n++x\n++x\nx++\n--x\n--x\n++x\nx++\nx++\nx++\n++x\n--x\n--x\nx++\nx++\nx++\nx--\n--x\nx--\nx++\n--x\nx++\nx++\n++x\nx--\nx++\n++x\nx--\n--x\nx--\nx--\nx++\nx++\nx--\nx--', '0'),
(701, 13, '15\nx++\n--x\nx--\nx--\n++x\n++x\n++x\n--x\nx++\nx++\n--x\n++x\nx++\nx++\nx++', '5'),
(702, 13, '59\n++x\n++x\n--x\n--x\n--x\n++x\n--x\nx++\nx--\nx--\nx--\n++x\nx++\n--x\n++x\nx++\n++x\n++x\n++x\nx++\n--x\nx--\nx--\n++x\nx--\nx--\nx++\n--x\nx++\nx++\nx++\nx++\nx--\n++x\n++x\nx--\n--x\nx++\nx++\nx--\nx++\n++x\nx++\nx++\n++x\n--x\n++x\nx++\nx--\nx++\n++x\n--x\n--x\nx++\n++x\n--x\n++x\nx++\nx++', '13'),
(703, 13, '77\n--x\n--x\n++x\nx++\n++x\nx--\nx++\n++x\nx--\nx++\nx++\nx++\nx--\n++x\nx++\nx--\nx++\nx++\nx--\n--x\n++x\n++x\n--x\n--x\n--x\n--x\n--x\n--x\nx--\n--x\n--x\nx++\n++x\n--x\nx--\n--x\nx++\nx--\nx--\n++x\nx--\n++x\n++x\nx++\nx++\nx++\n++x\n--x\nx--\n--x\n++x\n--x\nx--\n++x\n++x\nx++\nx--\nx++\nx--\n--x\n++x\n++x\n++x\n++x\n++x\nx--\n--x\nx--\n--x\n--x\n++x\n++x\nx--\n++x\n++x\n++x\nx--', '1'),
(704, 13, '53\nx--\n--x\n--x\nx++\nx--\nx--\n--x\nx++\nx++\nx++\nx--\n++x\n--x\n++x\nx++\nx--\nx++\nx++\n++x\nx--\nx++\n--x\n--x\n++x\nx++\nx--\nx++\nx--\n--x\n--x\nx--\n--x\n++x\nx++\nx++\nx++\nx--\nx--\n--x\n--x\n--x\nx--\nx--\nx--\nx--\n++x\nx--\nx--\nx--\nx--\nx--\n--x\n--x', '-15'),
(705, 13, '94\nx++\n--x\nx--\n++x\nx++\nx--\nx--\nx++\n++x\n++x\nx--\nx++\n++x\nx++\nx++\n++x\nx++\n++x\n++x\n++x\nx--\n--x\n++x\n--x\nx++\nx++\nx++\n--x\nx++\nx++\nx--\nx--\n--x\nx--\nx--\n++x\nx++\n--x\nx--\n++x\n--x\nx--\nx--\n++x\n++x\n++x\n++x\n++x\n++x\n++x\nx--\nx++\nx--\nx--\nx++\n++x\n++x\n++x\nx--\nx--\n++x\n--x\n++x\nx++\n++x\nx--\n++x\nx--\nx++\nx++\nx--\n++x\nx--\nx--\nx--\n++x\nx--\n++x\n--x\nx--\nx++\n--x\nx--\n++x\nx--\nx++\n--x\nx--\n++x\n--x\nx++\n--x\n--x\nx--', '8'),
(706, 13, '91\nx++\n++x\nx++\nx++\n++x\n++x\n--x\nx++\n++x\nx--\n++x\nx--\nx++\n++x\nx--\nx--\nx--\n--x\nx--\n--x\n--x\nx++\nx++\n--x\n--x\nx++\nx--\nx--\n--x\nx++\n++x\n++x\n++x\n++x\nx++\nx++\n--x\n++x\n--x\nx++\nx++\nx--\nx--\nx++\n--x\nx--\nx--\n--x\n++x\n--x\n--x\n--x\n--x\n--x\nx--\nx--\n--x\nx++\nx--\nx--\n--x\n++x\n++x\nx--\nx--\n--x\nx--\n++x\n--x\n--x\nx--\nx--\nx++\nx--\nx++\n--x\nx--\n--x\n++x\nx--\n++x\nx--\n--x\nx--\n++x\n--x\n--x\n--x\n++x\nx++\n++x', '-15'),
(707, 13, '89\nx--\n++x\n++x\n++x\nx--\n--x\nx--\n--x\nx--\n++x\n--x\nx--\nx--\n++x\n++x\nx++\n--x\n++x\n++x\nx--\nx++\n++x\n--x\n++x\n--x\nx++\n--x\n--x\nx++\n++x\nx--\n++x\n++x\n--x\n++x\n--x\nx--\n--x\n--x\nx--\nx++\nx--\n++x\nx--\n--x\nx++\n++x\n++x\n++x\nx--\n++x\n++x\nx--\nx--\nx--\nx++\n--x\nx++\n++x\n++x\nx--\nx--\n++x\n--x\n--x\n--x\n++x\nx--\nx++\nx--\n--x\n--x\nx--\nx--\nx++\nx++\nx++\nx--\nx--\nx--\nx++\n++x\n++x\n++x\nx++\n++x\nx++\n++x\n++x', '1'),
(708, 13, '95\nx--\n++x\n++x\n--x\n++x\nx++\n--x\nx++\nx++\nx++\n--x\n++x\nx++\nx--\n--x\n++x\n--x\n++x\n++x\n--x\nx--\nx++\n--x\nx--\n--x\n++x\nx++\n++x\nx++\nx++\nx++\nx++\nx--\n++x\nx++\n++x\nx++\n++x\nx++\n++x\n--x\nx++\nx++\n--x\n++x\nx--\n--x\n--x\nx--\nx++\nx--\nx--\n++x\nx--\n++x\nx--\n--x\n--x\nx--\nx--\nx--\nx++\n--x\nx++\nx++\nx--\nx--\n--x\nx++\n++x\n++x\nx++\nx++\n--x\n--x\nx++\n--x\n--x\nx--\n++x\n++x\nx--\n++x\nx--\n++x\n--x\n++x\n++x\n++x\n--x\nx--\n--x\n++x\n--x\n--x', '5'),
(709, 13, '8\n--x\n--x\n--x\nx--\nx--\nx--\nx++\nx--', '-6'),
(710, 13, '30\n++x\n--x\nx--\n--x\nx--\nx--\nx++\n++x\n++x\nx++\n++x\n++x\nx--\n++x\nx++\n--x\n--x\nx--\n++x\n++x\n++x\nx--\n--x\n--x\nx--\n++x\nx--\nx--\n++x\n++x', '0'),
(711, 13, '33\n++x\nx++\nx++\nx++\n++x\n++x\n++x\n--x\n++x\n--x\nx--\nx++\n++x\n--x\nx--\nx--\nx--\nx++\n++x\nx--\nx++\n++x\nx--\n++x\nx--\n++x\n++x\n++x\n++x\n++x\nx++\nx--\n++x', '11'),
(712, 13, '60\nx++\n++x\nx--\n++x\n--x\nx++\nx--\n++x\nx--\n++x\nx++\nx--\nx++\n++x\nx++\n--x\n++x\n++x\nx++\nx--\n--x\n++x\nx++\nx++\n--x\nx--\n--x\n--x\n++x\nx--\nx++\nx--\n--x\nx--\nx++\n++x\n++x\n--x\n++x\n--x\nx++\n--x\nx++\n--x\nx++\n--x\nx--\nx--\nx++\nx++\nx++\nx++\nx--\n--x\n++x\nx--\n--x\nx--\nx--\nx++', '2'),
(713, 13, '23\n++x\n++x\n++x\n--x\n--x\n--x\n--x\nx--\nx++\n--x\n++x\nx++\n--x\nx++\nx++\nx--\n++x\nx--\nx++\nx++\n++x\n--x\nx--', '1'),
(714, 13, '53\n--x\n--x\nx--\nx--\nx++\n--x\n++x\n++x\n--x\nx++\n--x\n++x\nx++\nx--\n++x\n--x\n--x\n++x\nx++\nx++\n++x\nx++\nx--\nx--\nx++\n--x\nx++\nx--\nx++\nx--\nx--\nx--\n++x\n++x\nx++\nx--\n--x\n++x\n++x\n++x\nx++\n++x\n++x\n++x\n++x\n++x\nx++\nx++\nx++\n--x\nx--\nx++\n++x', '11'),
(715, 13, '90\n++x\n--x\nx--\n--x\nx--\n++x\n--x\nx--\nx++\nx--\nx--\nx++\nx--\nx++\n++x\nx++\nx--\nx--\nx++\nx--\n++x\n++x\n--x\nx++\nx--\nx--\n--x\n--x\n--x\nx++\nx++\n--x\nx--\nx++\nx--\nx--\nx++\nx--\nx++\n++x\nx++\nx--\n--x\nx++\nx++\n++x\n--x\nx++\nx--\nx++\n--x\nx--\nx--\nx++\nx--\nx--\n++x\n++x\n++x\nx--\n++x\n--x\nx--\n--x\nx++\nx--\nx--\n++x\nx++\n--x\n++x\n++x\n++x\nx++\n--x\nx--\n++x\n++x\nx--\n++x\n++x\nx--\nx--\n++x\nx++\nx--\n++x\nx--\nx++\n--x', '-4'),
(716, 13, '62\nx--\n--x\n--x\n++x\n++x\n++x\n--x\n--x\n--x\nx++\n++x\n++x\nx--\nx--\nx--\nx++\nx--\n++x\n++x\n++x\nx++\nx--\nx++\n++x\nx++\n--x\nx++\nx++\n++x\nx--\nx--\n++x\nx++\nx--\n--x\n++x\nx--\n++x\nx--\n--x\nx++\nx--\nx--\n--x\nx++\nx++\nx--\nx--\n++x\nx--\n--x\n++x\nx++\n--x\n--x\n--x\nx--\nx++\nx++\nx--\n--x\n--x', '-4'),
(717, 13, '12\nx++\nx--\nx--\n++x\n++x\n++x\n--x\n--x\nx++\n--x\n++x\n++x', '2'),
(718, 13, '10\n--x\nx++\nx--\nx--\nx++\nx++\n++x\nx++\nx++\n++x', '4'),
(719, 15, '9 7\n15 10 1 0 2 15 11 12 14 ', '6'),
(720, 15, '21 1\n11 1 4 6 5 5 3 12 6 12 11 1 10 5 15 1 6 14 1 12 2 ', '17'),
(721, 15, '39 7\n7 13 8 5 3 5 13 14 11 4 9 9 3 4 0 10 15 5 15 5 7 4 11 7 5 0 14 3 13 5 5 0 1 3 11 7 14 13 6 ', '16'),
(722, 15, '39 2\n14 10 5 9 9 15 15 9 11 15 13 14 2 15 6 13 9 9 5 3 10 7 6 11 12 13 1 8 10 8 3 11 15 11 14 8 2 8 8 ', '36'),
(723, 15, '47 10\n3 13 11 6 15 0 11 7 3 6 10 5 10 0 4 7 12 7 5 1 5 0 9 12 5 3 11 0 0 10 9 8 11 6 12 1 10 4 15 0 0 2 1 14 5 5 13 ', '12'),
(724, 15, '38 3\n0 11 13 10 5 6 10 7 8 15 11 10 7 2 6 10 6 15 11 15 15 7 15 1 12 5 14 15 8 10 6 3 10 6 10 4 15 8 ', '34'),
(725, 15, '34 10\n14 0 12 15 11 4 4 5 0 6 15 0 5 8 15 10 12 0 3 6 0 13 9 13 7 10 3 14 0 9 2 9 3 5 ', '10'),
(726, 15, '21 4\n5 7 9 6 3 3 13 6 14 2 13 13 15 9 2 1 7 10 11 14 4 ', '15'),
(727, 15, '50 9\n13 9 9 0 2 7 5 10 14 15 6 11 9 0 5 2 14 8 2 3 3 7 5 8 13 4 9 15 15 4 1 3 12 15 15 2 0 13 1 11 9 12 7 7 3 15 14 7 11 0 ', '18'),
(728, 15, '21 5\n6 11 4 6 9 2 9 12 9 11 10 11 7 7 9 8 6 13 0 1 11 ', '17'),
(729, 15, '49 6\n3 2 9 11 2 0 1 1 2 11 3 11 2 9 9 12 0 13 15 2 3 5 8 1 11 9 15 14 2 0 2 4 4 14 15 7 0 2 9 0 4 11 1 3 0 12 11 8 3 ', '22'),
(730, 15, '36 2\n2 7 8 0 1 0 1 7 15 10 5 1 12 14 12 13 12 12 0 2 11 9 9 15 8 9 7 8 12 15 6 11 12 14 12 12 ', '28'),
(731, 15, '11 1\n9 15 10 15 3 15 1 6 14 15 2 ', '10'),
(732, 15, '3 7\n3 0 5 ', '0'),
(733, 15, '32 2\n4 5 0 13 14 5 10 2 5 6 10 9 15 11 8 13 15 12 1 7 15 13 2 13 6 9 13 0 14 8 6 15 ', '27'),
(734, 15, '39 7\n8 6 15 6 14 15 0 7 12 5 3 8 11 12 12 9 2 5 0 1 4 15 7 6 1 7 1 1 2 10 15 15 12 13 5 1 2 13 2 ', '17'),
(735, 15, '22 7\n12 9 4 5 6 0 15 12 9 2 15 8 6 6 12 0 8 2 1 13 12 12 ', '12'),
(736, 15, '34 4\n5 12 8 11 14 13 10 10 11 12 1 8 11 6 3 14 15 0 6 9 11 14 1 9 6 7 2 2 4 10 3 3 8 11 ', '25'),
(737, 15, '49 8\n4 9 3 8 6 7 15 11 11 3 8 11 13 9 12 11 9 9 9 9 11 9 6 12 15 1 1 14 7 6 3 3 10 13 9 7 6 7 5 15 15 11 2 1 12 4 13 12 12 ', '28'),
(738, 15, '22 5\n8 13 4 10 5 15 6 7 14 6 11 11 11 15 5 9 7 2 2 6 4 8 ', '16'),
(739, 15, '33 10\n10 13 4 9 13 8 9 5 10 14 0 9 13 10 4 8 13 11 6 7 8 2 8 9 12 9 6 4 0 2 0 15 13 ', '9'),
(740, 15, '44 1\n13 11 9 14 2 1 4 7 9 3 4 4 8 12 0 3 4 7 11 15 12 5 5 6 0 11 8 12 8 13 0 11 11 9 10 7 9 12 13 9 8 4 9 6 ', '40'),
(741, 15, '40 10\n5 2 9 3 1 14 9 10 1 9 13 0 13 6 0 7 11 4 1 6 12 6 8 1 14 14 7 7 13 0 5 5 3 6 8 2 11 11 14 0 ', '11'),
(742, 15, '41 0\n5 8 0 9 5 9 9 8 15 7 5 4 10 1 6 8 11 9 1 13 10 7 0 3 13 12 10 3 11 5 14 5 13 15 11 2 12 1 14 4 5 ', '39'),
(743, 15, '49 2\n7 14 7 7 8 14 6 14 10 6 6 13 5 9 9 15 5 11 6 0 1 9 13 9 6 0 6 12 0 12 1 8 15 14 3 9 15 2 15 0 11 4 10 6 14 1 15 14 9 ', '41'),
(744, 15, '25 3\n13 14 0 7 5 0 15 15 12 7 15 2 4 3 11 5 14 12 6 9 1 0 0 9 14 ', '18'),
(745, 15, '40 4\n2 13 10 5 12 12 3 1 14 2 10 7 8 11 9 7 13 4 0 5 7 2 3 0 3 1 13 0 3 3 9 7 2 15 15 8 4 14 5 12 ', '24'),
(746, 15, '14 0\n9 15 3 7 3 4 9 7 1 10 2 8 14 12 ', '14'),
(747, 15, '13 5\n15 6 9 4 11 0 3 13 8 12 13 7 8 ', '10'),
(748, 15, '27 5\n13 8 5 15 15 2 13 7 7 14 12 1 0 10 9 1 12 15 1 12 2 8 12 0 0 8 9 ', '18'),
(749, 15, '11 10\n2 15 14 14 3 10 14 8 14 6 14 ', '6'),
(750, 15, '15 7\n6 12 5 8 6 2 4 0 6 13 14 13 0 10 8 ', '7'),
(751, 15, '34 9\n9 14 1 14 5 14 8 9 2 7 5 11 9 8 12 12 14 14 4 6 2 5 2 12 10 11 6 10 9 10 0 14 6 8 ', '14'),
(752, 15, '43 6\n13 15 3 12 13 2 15 8 11 8 6 11 12 12 0 7 13 3 6 2 10 4 11 8 4 11 5 4 4 2 8 11 1 5 12 3 0 1 5 2 6 4 5 ', '20'),
(753, 15, '6 7\n2 2 13 14 6 8 ', '3'),
(754, 15, '29 6\n9 0 3 2 5 7 3 14 11 1 3 11 6 15 8 12 14 1 15 3 12 6 10 10 12 9 8 13 7 ', '18'),
(755, 15, '45 4\n1 0 3 6 1 9 11 7 1 7 8 13 2 9 15 4 12 14 6 4 12 4 0 4 8 8 4 0 3 13 14 1 5 11 2 1 9 6 1 12 4 13 11 0 14 ', '25'),
(756, 15, '17 10\n8 0 0 11 9 3 14 2 15 8 10 5 1 3 6 4 12 ', '4'),
(757, 15, '20 2\n9 0 10 6 5 10 10 7 14 4 15 9 0 7 13 15 6 12 9 8 ', '18'),
(758, 15, '28 8\n13 0 4 12 12 14 14 7 4 2 7 15 15 14 6 3 8 7 4 9 7 2 6 12 14 2 13 2 ', '12'),
(759, 15, '19 10\n2 11 12 2 4 7 3 5 6 8 15 6 3 11 12 3 7 6 4 ', '5'),
(760, 15, '11 5\n4 12 13 3 10 12 10 9 13 8 0 ', '8'),
(761, 15, '9 7\n6 7 9 6 15 15 4 14 11 ', '5'),
(762, 15, '27 1\n5 4 5 14 3 2 10 3 1 12 5 6 6 14 9 0 13 8 14 4 0 12 10 13 5 11 8 ', '24'),
(763, 15, '4 0\n3 11 4 10 ', '4'),
(764, 15, '24 10\n10 10 12 2 15 3 9 13 1 11 0 9 4 11 15 13 15 4 4 6 9 8 14 9 ', '9'),
(765, 15, '45 0\n5 9 14 5 3 3 12 9 14 4 4 2 12 0 1 13 6 4 13 5 1 11 9 1 14 9 1 3 11 5 3 1 4 6 10 8 3 15 10 9 5 7 6 0 1 ', '43'),
(766, 15, '44 4\n15 10 2 3 7 9 7 2 4 6 12 14 11 6 10 12 5 4 6 10 14 5 8 11 6 1 12 2 13 4 6 13 3 5 10 11 12 15 8 10 7 7 0 4 ', '33'),
(767, 15, '17 1\n12 15 14 6 5 12 7 3 9 8 9 15 5 11 1 5 4 ', '16'),
(768, 15, '18 8\n10 10 2 15 0 3 8 10 0 15 2 15 0 8 0 14 0 8 ', '7'),
(769, 15, '15 4\n2 8 13 8 6 14 13 8 14 1 12 5 4 14 6 ', '12'),
(770, 15, '13 1\n7 12 11 15 5 1 11 12 13 14 0 14 7 ', '11'),
(771, 15, '27 6\n14 5 7 6 10 10 5 11 12 15 10 1 13 0 15 6 7 15 2 13 15 12 9 13 7 4 3 ', '18'),
(772, 15, '9 2\n5 13 4 3 12 12 12 6 11 ', '9'),
(773, 15, '9 3\n11 14 9 3 3 12 2 3 2 ', '4'),
(774, 15, '35 3\n3 14 15 12 9 0 13 10 10 6 5 14 15 9 1 9 7 11 10 7 5 7 6 0 13 10 12 6 1 5 3 8 3 12 14 ', '28'),
(775, 15, '6 0\n12 7 2 3 6 8 ', '6'),
(776, 15, '18 1\n15 14 4 14 2 1 9 5 10 15 14 1 14 11 13 11 8 5 ', '16'),
(777, 15, '33 6\n3 7 1 15 7 6 10 10 10 2 8 13 3 2 9 10 0 9 15 9 2 6 12 8 6 1 7 1 1 9 6 12 11 ', '19'),
(778, 15, '42 8\n5 12 10 13 12 10 11 4 10 9 11 6 13 8 9 2 0 9 4 2 15 6 7 12 0 12 8 6 13 3 6 3 12 1 13 7 8 10 9 13 4 0 ', '21'),
(779, 15, '29 5\n11 1 1 0 8 7 2 4 11 7 2 0 2 8 13 10 2 0 2 7 9 6 3 4 11 8 12 11 11 ', '16'),
(780, 15, '31 9\n9 0 12 11 9 11 3 0 9 4 7 13 6 4 9 9 0 6 13 12 14 7 9 13 4 14 15 8 1 10 6 ', '11'),
(781, 15, '47 9\n0 15 10 3 5 11 14 3 12 11 4 3 10 13 0 14 14 15 8 8 0 9 11 3 12 4 3 6 4 5 15 13 5 7 5 0 10 6 3 6 0 5 0 5 12 7 10 ', '18'),
(782, 15, '15 9\n12 13 15 6 12 10 13 11 2 9 1 3 2 2 3 ', '7'),
(783, 15, '12 8\n5 14 7 4 9 1 9 5 13 2 6 1 ', '4'),
(784, 15, '49 2\n5 5 15 3 2 14 4 2 7 1 8 8 9 2 13 4 6 15 9 15 9 15 5 15 6 7 9 6 1 9 10 7 1 13 8 15 14 5 10 15 2 5 8 1 4 6 7 6 8 ', '41'),
(785, 15, '21 3\n12 4 6 4 7 13 5 10 15 14 8 5 6 6 11 15 15 10 4 13 12 ', '21'),
(786, 15, '36 8\n15 5 4 6 7 5 8 4 3 12 1 10 9 5 9 1 10 1 12 2 15 3 10 10 10 1 0 0 5 1 11 1 4 0 1 6 ', '12'),
(787, 15, '41 9\n11 1 0 11 6 13 13 9 8 8 6 14 15 7 12 2 11 14 2 13 13 8 7 3 9 10 0 7 5 2 3 10 5 8 4 13 8 4 2 11 3 ', '15'),
(788, 15, '25 5\n6 15 10 15 3 1 13 1 11 15 3 5 9 9 10 5 8 5 0 7 10 9 5 10 0 ', '15'),
(789, 15, '24 1\n6 4 9 10 4 2 14 0 3 6 5 8 6 3 3 10 10 10 3 1 5 5 10 4 ', '22'),
(790, 15, '49 4\n1 5 1 9 14 10 5 0 10 7 4 8 10 4 2 11 5 14 1 14 13 12 0 3 3 1 4 15 4 12 3 13 15 14 6 7 10 4 9 14 15 0 6 3 11 3 2 0 4 ', '28'),
(791, 15, '21 6\n8 1 14 13 4 2 9 15 10 7 13 11 5 8 12 11 12 5 3 11 8 ', '15'),
(792, 15, '22 7\n12 1 10 11 10 4 10 14 8 8 10 1 5 0 4 15 6 5 10 8 11 0 ', '13'),
(793, 15, '43 2\n10 15 2 14 6 0 11 4 9 8 9 11 1 14 5 7 15 15 9 7 1 8 5 4 4 7 10 1 3 14 12 2 14 13 13 0 13 1 9 5 12 15 3 ', '35'),
(794, 15, '21 5\n15 8 7 11 12 11 11 2 10 5 14 9 0 1 12 1 14 8 2 0 11 ', '14'),
(795, 15, '15 3\n9 13 2 11 15 9 2 10 15 6 11 0 1 5 15 ', '11'),
(796, 15, '18 7\n2 7 3 14 1 8 5 13 13 5 11 3 2 2 10 11 14 6 ', '8'),
(797, 15, '46 3\n10 4 6 4 10 9 5 7 5 15 9 1 9 6 0 3 7 12 4 2 11 12 5 7 7 4 7 9 8 3 6 10 15 2 10 7 9 14 12 2 0 13 0 15 5 14 ', '37'),
(798, 15, '36 8\n1 12 0 4 11 11 14 9 4 15 8 11 14 7 14 13 15 12 15 3 4 1 0 5 12 9 3 7 12 4 4 6 13 9 12 8 ', '19'),
(799, 15, '34 2\n5 4 12 0 13 4 10 0 15 3 10 5 7 4 8 5 12 14 8 7 15 1 11 14 2 11 7 1 11 13 10 15 3 9 ', '29'),
(800, 15, '30 8\n5 2 10 13 14 6 3 3 14 5 3 11 8 11 14 8 6 14 2 14 7 7 15 3 9 1 9 6 0 15 ', '13'),
(801, 15, '47 10\n3 12 3 5 0 5 4 5 11 15 11 11 8 6 4 8 1 3 11 2 12 15 3 11 15 8 10 2 5 3 14 2 1 9 9 15 8 11 13 4 13 12 2 3 6 2 3 ', '16'),
(802, 15, '28 3\n12 3 7 2 3 7 8 13 0 10 13 4 14 12 13 9 12 8 0 5 9 0 7 11 7 7 9 8 ', '22'),
(803, 15, '14 9\n0 4 2 13 6 10 4 10 4 6 14 6 13 13 ', '6'),
(804, 15, '29 10\n5 15 12 8 11 10 13 14 6 5 13 0 0 13 0 4 14 13 3 2 11 5 8 9 8 6 8 4 9 ', '10'),
(805, 15, '13 0\n12 3 15 2 15 15 6 1 0 7 12 13 8 ', '12'),
(806, 15, '20 1\n14 15 15 7 8 15 12 11 3 15 1 2 2 13 11 12 8 4 12 1 ', '18'),
(807, 15, '46 2\n1 11 0 6 4 13 3 12 14 6 12 3 13 12 12 11 14 7 13 8 9 6 6 9 14 3 10 6 2 14 11 6 0 10 14 9 12 9 13 12 9 11 1 2 9 0 ', '39'),
(808, 15, '33 9\n8 7 6 3 2 3 4 9 9 8 7 5 4 13 14 0 2 5 6 0 14 5 7 4 5 1 8 2 2 12 12 9 8 ', '5'),
(809, 15, '25 2\n1 0 3 14 4 12 0 0 0 13 7 8 0 2 8 2 10 14 0 7 12 8 7 2 6 ', '15'),
(810, 15, '26 10\n9 13 5 13 11 7 11 10 10 15 4 1 12 3 13 7 12 5 6 10 12 9 5 0 7 15 ', '10'),
(811, 15, '18 8\n13 9 3 0 6 3 5 7 7 4 9 11 5 13 11 0 8 14 ', '7'),
(812, 15, '35 1\n6 9 10 6 4 9 2 8 2 9 1 12 2 4 12 11 0 2 6 15 4 1 10 15 7 13 6 9 0 10 13 11 12 11 14 ', '31'),
(813, 15, '30 7\n9 6 7 9 2 12 7 6 14 1 6 2 5 3 3 1 11 6 7 3 6 3 15 11 1 13 13 1 13 10 ', '11'),
(814, 15, '11 10\n3 4 0 11 2 15 2 2 14 3 3 ', '3'),
(815, 15, '14 2\n12 2 7 9 3 11 9 8 9 3 4 4 9 8 ', '13'),
(816, 15, '8 7\n10 10 13 12 6 13 15 3 ', '6'),
(817, 15, '46 5\n0 1 6 13 6 0 2 1 12 15 11 5 6 3 14 5 8 1 8 8 1 6 13 14 15 1 14 12 4 3 13 7 14 10 12 13 0 8 12 3 7 11 6 11 14 15 ', '31'),
(818, 15, '42 7\n4 9 8 11 15 9 10 14 3 5 13 1 14 2 14 14 7 8 8 14 12 11 12 2 7 5 14 11 7 7 10 13 0 12 10 14 9 5 3 15 14 11 ', '28'),
(1019, 17, '93 15 -72', 'YO\'Q'),
(1020, 17, '69 -5 58', 'YO\'Q'),
(1021, 17, '-65 -75 80', 'YO\'Q'),
(1022, 17, '44 -46 31', 'YO\'Q'),
(1023, 17, '77 43 44', 'YO\'Q'),
(1024, 17, '-32 -39 -20', 'YO\'Q'),
(1025, 17, '-3 33 10', 'YO\'Q'),
(1026, 17, '-87 55 -16', 'YO\'Q'),
(1027, 17, '21 10 76', 'YO\'Q'),
(1028, 17, '-50 53 -18', 'YO\'Q'),
(1029, 17, '-25 19 -47', 'YO\'Q'),
(1030, 17, '-74 94 -77', 'YO\'Q'),
(1031, 17, '-94 61 24', 'YO\'Q'),
(1032, 17, '89 77 0', 'YO\'Q'),
(1033, 17, '-60 33 27', 'YO\'Q'),
(1034, 17, '4 82 -59', 'YO\'Q'),
(1035, 17, '31 69 37', 'YO\'Q'),
(1036, 17, '-75 -74 85', 'YO\'Q'),
(1037, 17, '-92 -29 -12', 'YO\'Q'),
(1038, 17, '-29 1 18', 'YO\'Q'),
(1039, 17, '25 -10 -20', 'YO\'Q'),
(1040, 17, '-42 75 -39', 'YO\'Q'),
(1041, 17, '74 -7 82', 'YO\'Q'),
(1042, 17, '-57 39 -58', 'YO\'Q'),
(1043, 17, '-36 -84 -34', 'YO\'Q'),
(1044, 17, '-70 28 -98', 'HA'),
(1045, 17, '54 -64 -83', 'YO\'Q'),
(1046, 17, '17 -34 44', 'YO\'Q'),
(1047, 17, '6 -56 -48', 'YO\'Q'),
(1048, 17, '51 -41 -67', 'YO\'Q'),
(1049, 17, '-85 50 52', 'YO\'Q'),
(1050, 17, '0 64 -74', 'YO\'Q'),
(1051, 17, '-21 -1 0', 'YO\'Q'),
(1052, 17, '-40 59 25', 'YO\'Q'),
(1053, 17, '-54 -92 53', 'YO\'Q');
INSERT INTO `tests` (`id`, `problem_id`, `input`, `output`) VALUES
(1054, 17, '-24 64 -2', 'YO\'Q'),
(1055, 17, '10 81 -63', 'YO\'Q'),
(1056, 17, '93 67 -87', 'YO\'Q'),
(1057, 17, '60 -80 -35', 'YO\'Q'),
(1058, 17, '-10 16 76', 'YO\'Q'),
(1059, 17, '53 -69 -88', 'YO\'Q'),
(1060, 17, '63 -50 -16', 'YO\'Q'),
(1061, 17, '3 30 -70', 'YO\'Q'),
(1062, 17, '60 -39 9', 'YO\'Q'),
(1063, 17, '-26 -14 -88', 'YO\'Q'),
(1064, 17, '-34 51 90', 'YO\'Q'),
(1065, 17, '34 -5 64', 'YO\'Q'),
(1066, 17, '-62 -20 -74', 'YO\'Q'),
(1067, 17, '-5 -83 96', 'YO\'Q'),
(1068, 17, '-81 79 -16', 'YO\'Q'),
(1069, 17, '-911 -957 -873', 'YO\'Q'),
(1070, 17, '-810 -836 -831', 'YO\'Q'),
(1071, 17, '-823 -837 -933', 'YO\'Q'),
(1072, 17, '-814 -982 -977', 'YO\'Q'),
(1073, 17, '-810 -976 -859', 'YO\'Q'),
(1074, 17, '-960 -916 -824', 'YO\'Q'),
(1075, 17, '-838 -869 -991', 'YO\'Q'),
(1076, 17, '-867 -895 -997', 'YO\'Q'),
(1077, 17, '-832 -879 -821', 'YO\'Q'),
(1078, 17, '-920 -816 -947', 'YO\'Q'),
(1079, 17, '-902 -905 -864', 'YO\'Q'),
(1080, 17, '-885 -974 -839', 'YO\'Q'),
(1081, 17, '-962 -894 -866', 'YO\'Q'),
(1082, 17, '-914 -983 -982', 'YO\'Q'),
(1083, 17, '-940 -990 -907', 'YO\'Q'),
(1084, 17, '-885 -899 -909', 'YO\'Q'),
(1085, 17, '-834 -952 -912', 'YO\'Q'),
(1086, 17, '-940 -854 -912', 'YO\'Q'),
(1087, 17, '-944 -979 -886', 'YO\'Q'),
(1088, 17, '-858 -826 -952', 'YO\'Q'),
(1089, 17, '-881 -984 -931', 'YO\'Q'),
(1090, 17, '-926 -964 -904', 'YO\'Q'),
(1091, 17, '-858 -882 -837', 'YO\'Q'),
(1092, 17, '-900 -979 -814', 'YO\'Q'),
(1093, 17, '-883 -885 -863', 'YO\'Q'),
(1094, 17, '-940 -896 -923', 'YO\'Q'),
(1095, 17, '-993 -992 -877', 'YO\'Q'),
(1096, 17, '-847 -850 -853', 'YO\'Q'),
(1097, 17, '-848 -946 -946', 'YO\'Q'),
(1098, 17, '-891 -869 -886', 'YO\'Q'),
(1099, 17, '-955 -825 -859', 'YO\'Q'),
(1100, 17, '-802 -906 -883', 'YO\'Q'),
(1101, 17, '-934 -950 -808', 'YO\'Q'),
(1102, 17, '-898 -832 -823', 'YO\'Q'),
(1103, 17, '-886 -890 -832', 'YO\'Q'),
(1104, 17, '-969 -875 -983', 'YO\'Q'),
(1105, 17, '-811 -945 -845', 'YO\'Q'),
(1106, 17, '-996 -916 -818', 'YO\'Q'),
(1107, 17, '-924 -910 -819', 'YO\'Q'),
(1108, 17, '-875 -860 -985', 'YO\'Q'),
(1109, 17, '-856 -947 -801', 'YO\'Q'),
(1110, 17, '-820 -943 -882', 'YO\'Q'),
(1111, 17, '-960 -918 -842', 'YO\'Q'),
(1112, 17, '-973 -833 -968', 'YO\'Q'),
(1113, 17, '-968 -879 -828', 'YO\'Q'),
(1114, 17, '-815 -873 -946', 'YO\'Q'),
(1115, 17, '-828 -818 -910', 'YO\'Q'),
(1116, 17, '-844 -866 -908', 'YO\'Q'),
(1117, 17, '-925 -809 -881', 'YO\'Q'),
(1118, 17, '-981 -912 -887', 'YO\'Q'),
(1119, 17, '-9936 -9900 -9864', 'YO\'Q'),
(1120, 17, '-9838 -9983 -9967', 'YO\'Q'),
(1121, 17, '-9995 -9866 -9996', 'YO\'Q'),
(1122, 17, '-9869 -9874 -9866', 'YO\'Q'),
(1123, 17, '-9816 -9874 -9947', 'YO\'Q'),
(1124, 17, '-9929 -9854 -9896', 'YO\'Q'),
(1125, 17, '-9862 -9874 -9969', 'YO\'Q'),
(1126, 17, '-9826 -9945 -9871', 'YO\'Q'),
(1127, 17, '-9957 -9834 -9838', 'YO\'Q'),
(1128, 17, '-9875 -9980 -9971', 'YO\'Q'),
(1129, 17, '-9891 -9809 -9951', 'YO\'Q'),
(1130, 17, '-9901 -9958 -9847', 'YO\'Q'),
(1131, 17, '-9937 -9914 -9995', 'YO\'Q'),
(1132, 17, '-9815 -9862 -9819', 'YO\'Q'),
(1133, 17, '-9810 -9819 -9976', 'YO\'Q'),
(1134, 17, '-9918 -9987 -9906', 'YO\'Q'),
(1135, 17, '-9981 -9927 -9965', 'YO\'Q'),
(1136, 17, '-9987 -9854 -9858', 'YO\'Q'),
(1137, 17, '-9995 -9930 -9902', 'YO\'Q'),
(1138, 17, '-9880 -9979 -9930', 'YO\'Q'),
(1139, 17, '-9848 -9945 -9977', 'YO\'Q'),
(1140, 17, '-9946 -9978 -9848', 'YO\'Q'),
(1141, 17, '-9952 -9958 -9991', 'YO\'Q'),
(1142, 17, '-9885 -9903 -9901', 'YO\'Q'),
(1143, 17, '-9825 -9972 -9909', 'YO\'Q'),
(1144, 17, '-9854 -9851 -9963', 'YO\'Q'),
(1145, 17, '-9875 -9909 -9847', 'YO\'Q'),
(1146, 17, '-9852 -9919 -9913', 'YO\'Q'),
(1147, 17, '-9835 -9838 -9977', 'YO\'Q'),
(1148, 17, '-9801 -9884 -9840', 'YO\'Q'),
(1149, 17, '-9819 -9909 -9871', 'YO\'Q'),
(1150, 17, '-9961 -9889 -9874', 'YO\'Q'),
(1151, 17, '-9964 -9885 -9976', 'YO\'Q'),
(1152, 17, '-9990 -9869 -9852', 'YO\'Q'),
(1153, 17, '-9893 -9886 -9840', 'YO\'Q'),
(1154, 17, '-9854 -9824 -9807', 'YO\'Q'),
(1155, 17, '-9927 -9824 -9809', 'YO\'Q'),
(1156, 17, '-9900 -9825 -9838', 'YO\'Q'),
(1157, 17, '-9900 -9827 -9806', 'YO\'Q'),
(1158, 17, '-9848 -9936 -9942', 'YO\'Q'),
(1159, 17, '-9965 -9981 -9992', 'YO\'Q'),
(1160, 17, '-9857 -9933 -9835', 'YO\'Q'),
(1161, 17, '-9818 -9855 -9955', 'YO\'Q'),
(1162, 17, '-9983 -9930 -9974', 'YO\'Q'),
(1163, 17, '-9849 -9947 -9862', 'YO\'Q'),
(1164, 17, '-9900 -9824 -9900', 'YO\'Q'),
(1165, 17, '-9948 -9992 -9989', 'YO\'Q'),
(1166, 17, '-9955 -9881 -9834', 'YO\'Q'),
(1167, 17, '-9833 -9960 -9948', 'YO\'Q'),
(1168, 17, '-9991 -9991 -9868', 'YO\'Q'),
(1169, 17, '-9844 -9827 -9915', 'YO\'Q'),
(1170, 17, '-9924 -9972 -9947', 'YO\'Q'),
(1171, 17, '-9993 -9925 -9927', 'YO\'Q'),
(1172, 17, '-9988 -9850 -9873', 'YO\'Q'),
(1173, 17, '-9869 -9903 -9962', 'YO\'Q'),
(1174, 17, '-9917 -9860 -9966', 'YO\'Q'),
(1175, 17, '-9978 -9924 -9880', 'YO\'Q'),
(1176, 17, '-9839 -9873 -9879', 'YO\'Q'),
(1177, 17, '-9996 -9809 -9861', 'YO\'Q'),
(1178, 17, '-9993 -9831 -9912', 'YO\'Q'),
(1179, 17, '-9946 -9835 -9915', 'YO\'Q'),
(1180, 17, '-9999 -9957 -9996', 'YO\'Q'),
(1181, 17, '-9809 -9829 -9887', 'YO\'Q'),
(1182, 17, '-9969 -9887 -9882', 'YO\'Q'),
(1183, 17, '-9949 -9853 -9995', 'YO\'Q'),
(1184, 17, '-9972 -9976 -9888', 'YO\'Q'),
(1185, 17, '-9857 -9915 -9844', 'YO\'Q'),
(1186, 17, '-9858 -9975 -9952', 'YO\'Q'),
(1187, 17, '-9957 -9859 -9942', 'YO\'Q'),
(1188, 17, '-9970 -9939 -9994', 'YO\'Q'),
(1189, 17, '-9815 -9820 -9841', 'YO\'Q'),
(1190, 17, '-9862 -9855 -10000', 'YO\'Q'),
(1191, 17, '-9862 -9936 -9920', 'YO\'Q'),
(1192, 17, '-9972 -9960 -9952', 'YO\'Q'),
(1193, 17, '-9965 -9939 -9850', 'YO\'Q'),
(1194, 17, '-9818 -9892 -9875', 'YO\'Q'),
(1195, 17, '-9883 -9899 -9930', 'YO\'Q'),
(1196, 17, '-9852 -9977 -9878', 'YO\'Q'),
(1197, 17, '-9826 -9866 -9878', 'YO\'Q'),
(1198, 17, '-9872 -9985 -9967', 'YO\'Q'),
(1199, 17, '-9837 -9851 -9824', 'YO\'Q'),
(1200, 17, '-9813 -9956 -9839', 'YO\'Q'),
(1201, 17, '-9802 -9926 -9944', 'YO\'Q'),
(1202, 17, '-9910 -9892 -9973', 'YO\'Q'),
(1203, 17, '-9919 -10000 -9825', 'YO\'Q'),
(1204, 17, '-9963 -9916 -9880', 'YO\'Q'),
(1205, 17, '-9998 -9830 -9959', 'YO\'Q'),
(1206, 17, '-9957 -9828 -9952', 'YO\'Q'),
(1207, 17, '-9920 -9943 -9818', 'YO\'Q'),
(1208, 17, '-9925 -9836 -9835', 'YO\'Q'),
(1209, 17, '-9862 -9850 -9850', 'YO\'Q'),
(1210, 17, '-9848 -9859 -9903', 'YO\'Q'),
(1211, 17, '-9801 -9846 -9829', 'YO\'Q'),
(1212, 17, '-9898 -9855 -9842', 'YO\'Q'),
(1213, 17, '-9960 -9953 -9937', 'YO\'Q'),
(1214, 17, '-9983 -9886 -9913', 'YO\'Q'),
(1215, 17, '-9878 -9833 -9935', 'YO\'Q'),
(1216, 17, '-9909 -9868 -9896', 'YO\'Q'),
(1217, 17, '4 4 8', 'HA'),
(1218, 17, '-85 -95 -25', 'YO\'Q'),
(1219, 18, '7\n2 5\n8 8 0 4 4 4 0 ', '12'),
(1220, 18, '2\n0 1\n0 4 ', '4'),
(1221, 18, '6\n2 5\n9 9 8 2 6 9 ', '25'),
(1222, 18, '3\n1 2\n5 5 0 ', '5'),
(1223, 18, '8\n2 6\n1 5 9 9 5 1 8 7 ', '32'),
(1224, 18, '2\n0 1\n7 1 ', '8'),
(1225, 18, '8\n3 7\n6 2 9 1 7 4 9 2 ', '23'),
(1226, 18, '8\n4 7\n9 8 4 4 0 7 2 1 ', '10'),
(1227, 18, '4\n1 3\n5 7 7 2 ', '16'),
(1228, 18, '6\n3 5\n1 7 9 7 0 4 ', '11'),
(1229, 18, '75\n8 70\n19 32 0 26 27 47 57 41 23 86 32 24 18 67 70 94 93 51 94 66 50 47 76 15 49 45 40 27 81 97 14 80 12 61 64 44 55 37 37 17 87 32 5 47 89 80 88 67 53 95 66 49 83 54 46 62 87 57 83 34 17 67 71 16 40 41 84 44 63 20 52 42 11 18 44 ', '3445'),
(1230, 18, '75\n23 67\n82 64 38 59 22 59 2 82 95 6 66 21 38 46 79 93 47 68 66 14 21 45 98 60 49 82 98 7 52 43 57 10 27 49 99 12 45 98 6 71 17 27 0 62 11 24 56 98 28 90 17 25 13 29 95 74 14 63 35 17 67 83 95 87 87 70 59 68 95 82 83 7 31 23 77 ', '2276'),
(1231, 18, '52\n10 50\n32 96 10 25 54 32 66 55 23 75 34 13 2 3 9 31 59 15 26 88 89 43 69 86 28 79 40 67 92 9 95 29 87 1 83 53 3 60 29 48 2 13 99 24 14 8 54 77 35 36 68 67 ', '1800'),
(1232, 18, '26\n4 25\n40 76 93 71 63 99 40 63 42 37 80 82 26 80 62 43 10 97 27 9 99 11 16 68 47 9 ', '1110'),
(1233, 18, '6\n1 5\n19 30 64 40 92 46 ', '272'),
(1234, 18, '14\n7 9\n42 38 39 48 52 28 4 82 51 5 12 43 59 94 ', '138'),
(1235, 18, '24\n11 22\n92 29 30 31 15 56 92 60 60 54 3 98 96 20 91 2 66 15 46 17 59 52 8 66 ', '570'),
(1236, 18, '46\n6 42\n19 44 58 84 80 20 24 19 51 68 64 82 41 33 5 22 47 2 41 0 12 60 33 31 83 82 85 82 55 97 36 70 44 74 7 24 35 43 7 0 83 13 81 50 49 66 ', '1636'),
(1237, 18, '49\n20 31\n29 21 35 34 11 57 13 78 59 5 82 28 65 22 25 22 67 84 44 57 91 81 85 24 35 54 17 26 13 66 50 41 61 58 66 51 12 76 64 18 40 33 71 20 63 42 96 81 85 ', '583'),
(1238, 18, '31\n6 28\n63 22 93 50 25 24 47 59 81 12 64 46 78 10 75 60 30 26 61 47 59 72 35 14 79 70 92 86 29 23 95 ', '1232'),
(1239, 18, '41\n15 31\n79 5 15 99 86 13 66 94 94 90 39 22 66 5 25 90 10 78 98 0 30 50 19 69 12 35 99 41 59 24 65 69 76 88 52 50 34 52 65 97 72 ', '848'),
(1240, 18, '42\n12 30\n98 47 78 83 27 65 3 45 72 3 20 39 77 29 90 65 85 9 75 89 41 23 57 43 35 99 78 21 42 37 78 43 68 37 40 44 54 24 67 75 46 91 ', '1073'),
(1241, 18, '37\n6 32\n82 14 4 28 81 28 50 58 85 48 87 64 10 70 14 27 27 93 85 78 1 1 16 44 13 87 72 42 84 6 24 36 59 6 43 21 15 ', '1281'),
(1242, 18, '4\n1 3\n38 19 93 58 ', '170'),
(1243, 18, '88\n22 72\n93 59 58 30 0 59 3 35 45 55 17 24 53 25 13 12 2 50 9 3 69 86 69 88 89 32 67 95 5 45 22 86 12 45 96 4 29 27 67 83 43 92 61 82 43 5 38 30 32 91 0 76 37 62 71 95 26 18 40 28 98 35 92 10 7 52 73 34 53 61 32 12 56 97 14 17 91 12 57 77 56 46 62 81 94 68 19 72 ', '2546'),
(1244, 18, '77\n7 75\n62 92 45 17 10 41 8 46 50 46 21 30 83 75 83 27 34 71 85 48 97 68 38 14 11 88 91 42 71 11 74 12 79 53 17 36 3 66 74 95 48 42 12 89 82 63 8 63 79 39 43 9 59 11 88 43 59 81 74 14 69 42 16 74 3 13 35 95 57 43 3 14 97 44 86 8 51 ', '3444'),
(1245, 18, '51\n8 45\n3 71 22 49 53 36 80 16 37 5 86 77 40 72 79 41 20 45 62 83 77 24 52 94 22 97 49 30 62 12 77 25 58 28 8 56 95 1 55 38 89 13 69 16 75 52 42 56 50 77 53 ', '1921'),
(1246, 18, '13\n6 7\n15 44 99 50 98 97 23 73 95 25 35 7 83 ', '96'),
(1247, 18, '82\n38 60\n78 17 53 47 57 16 59 63 16 65 95 35 66 24 82 66 18 10 1 65 2 36 43 76 45 36 72 61 49 86 26 54 28 50 44 31 83 31 7 87 70 82 86 21 48 24 10 99 45 28 67 11 66 84 19 63 8 52 84 91 28 72 1 28 53 19 63 60 3 64 45 47 40 89 45 33 50 59 98 41 10 53 ', '1180'),
(1248, 18, '58\n7 53\n50 14 30 51 57 32 7 82 15 18 55 36 53 69 80 37 23 5 52 92 41 47 2 68 89 56 7 10 29 96 16 2 98 58 85 94 93 91 93 30 44 11 10 80 70 3 27 17 92 10 43 23 15 83 66 38 20 49 ', '2250'),
(1249, 18, '79\n25 76\n32 20 92 61 49 28 77 54 27 43 75 7 36 7 64 34 60 53 8 64 78 21 20 99 14 83 16 6 42 80 4 77 1 79 24 85 31 47 47 5 19 4 76 17 49 35 0 51 43 85 34 32 81 9 58 78 95 56 98 30 46 92 13 41 61 66 55 27 38 32 10 5 74 96 25 52 13 63 51 ', '2323'),
(1250, 18, '51\n5 47\n72 42 95 45 8 16 60 41 93 51 88 58 13 25 47 4 31 39 64 74 6 88 73 3 96 54 97 52 27 6 60 48 83 25 51 48 85 76 49 64 37 0 97 58 33 82 57 79 39 68 20 ', '2238'),
(1251, 18, '25\n11 16\n66 32 80 31 41 95 35 32 71 6 55 46 35 14 70 49 24 5 60 36 2 61 9 9 51 ', '238'),
(1252, 18, '80\n15 72\n70 57 41 13 85 59 97 58 27 89 0 27 53 4 55 96 67 95 73 24 33 60 79 63 31 70 71 76 47 84 3 16 94 94 17 93 17 55 19 78 37 85 21 40 7 4 7 34 13 92 76 91 49 7 20 19 43 38 40 96 0 70 26 1 76 61 67 9 64 90 71 40 61 41 63 47 25 6 44 44 ', '2910'),
(1253, 18, '74\n37 52\n61 24 76 70 88 7 87 81 71 53 66 55 79 28 30 13 51 4 7 26 41 73 28 20 45 16 85 4 5 7 45 41 69 65 87 91 36 21 3 54 6 21 52 2 42 89 28 37 16 10 76 51 92 67 81 74 47 48 61 52 3 90 30 7 21 64 67 0 2 60 52 91 37 73 ', '600'),
(1254, 18, '67\n33 45\n17 37 3 59 98 86 81 49 23 31 36 68 98 82 97 49 63 22 20 44 4 6 38 56 58 7 85 9 29 71 58 4 71 97 18 90 57 6 2 97 89 64 9 0 7 75 11 52 24 63 49 59 46 82 38 15 66 25 26 62 19 63 22 51 22 80 91 ', '611'),
(1255, 18, '39\n6 35\n16 11 64 93 45 93 94 34 34 2 82 74 19 78 88 53 90 78 52 33 44 93 85 8 77 58 14 46 5 91 48 82 45 4 94 94 31 90 34 ', '1699'),
(1256, 18, '83\n37 79\n32 27 0 16 57 20 71 40 64 67 89 19 2 67 84 92 69 8 94 73 55 76 41 29 13 47 71 23 71 89 16 45 82 73 27 7 68 28 0 60 11 3 64 97 82 12 37 11 26 20 51 46 80 71 32 61 90 57 60 14 48 20 10 75 62 12 74 94 38 12 58 80 52 41 70 15 22 12 49 85 71 99 90 ', '1942'),
(1257, 18, '49\n5 44\n37 66 72 70 85 52 14 76 26 94 95 40 70 57 85 45 78 16 35 15 30 96 60 94 66 36 43 5 41 44 78 14 86 3 32 52 96 29 5 69 27 99 78 68 73 45 8 15 67 ', '2122'),
(1258, 18, '20\n3 17\n63 25 17 58 75 82 50 39 18 5 60 14 90 63 5 28 75 39 3 96 ', '701'),
(1259, 18, '87\n22 78\n11 87 50 91 87 2 58 81 35 16 5 61 12 55 87 8 73 66 53 16 64 59 80 32 32 43 90 7 3 52 89 40 65 33 55 17 64 44 78 6 54 18 10 46 48 1 21 65 22 93 86 35 19 79 72 56 5 13 58 39 30 52 54 82 39 22 60 68 85 42 42 17 99 3 9 8 97 42 53 71 1 82 84 9 94 47 50 ', '2574'),
(1260, 18, '34\n1 33\n48 73 10 12 86 12 87 28 89 51 27 12 27 80 42 23 20 40 4 42 68 28 47 91 17 56 87 81 71 35 44 68 47 2 ', '1507'),
(1261, 18, '11\n3 9\n71 48 80 64 2 30 42 61 89 37 21 ', '325'),
(1262, 18, '50\n9 48\n1 57 20 18 3 35 33 16 90 67 28 61 50 55 37 84 1 8 54 60 39 62 17 2 58 85 77 62 80 76 76 27 20 76 1 31 26 24 41 80 69 1 66 25 24 88 98 15 58 1 ', '1909'),
(1263, 18, '63\n12 57\n70 73 41 81 45 22 6 38 40 50 85 34 95 40 35 2 29 17 28 51 17 28 79 21 35 1 34 51 81 79 56 44 2 1 43 45 30 93 85 91 1 11 20 36 49 48 56 9 61 41 46 36 34 27 57 86 36 70 37 74 17 76 34 ', '1937'),
(1264, 18, '11\n3 10\n15 31 49 5 55 50 1 34 72 25 66 ', '308'),
(1265, 18, '10\n2 8\n95 21 2 86 22 7 69 93 25 49 ', '304'),
(1266, 18, '52\n23 31\n27 13 63 84 95 48 82 37 77 94 76 35 60 68 62 59 11 62 13 29 18 7 48 62 23 3 34 25 67 90 53 12 85 24 6 89 75 30 10 28 40 53 31 46 61 19 84 54 99 57 8 31 ', '369'),
(1267, 18, '88\n37 67\n11 57 71 3 95 10 32 73 29 71 78 95 17 35 5 72 83 96 15 92 12 83 36 77 60 67 59 11 17 15 6 30 36 53 91 59 7 13 77 32 54 93 62 51 46 48 1 56 81 92 35 71 74 48 86 78 63 65 81 80 10 29 7 39 3 59 63 1 4 84 20 14 72 94 16 63 94 25 70 92 1 36 48 75 17 24 93 65 ', '1598'),
(1268, 18, '66\n33 39\n77 47 47 41 87 20 37 46 37 0 79 31 1 37 20 33 79 36 59 79 94 16 55 64 75 36 62 75 46 65 22 75 70 15 87 93 79 53 12 57 13 3 1 45 95 62 12 58 1 96 26 22 99 42 79 47 75 43 81 12 20 78 57 69 50 35 ', '396'),
(1269, 19, 'q', 'w'),
(1270, 19, 'w', 'e'),
(1271, 19, 'r', 't'),
(1272, 19, 't', 'y'),
(1273, 19, 'y', 'u'),
(1274, 19, 'u', 'i'),
(1275, 19, 'i', 'o'),
(1276, 19, 'o', 'p'),
(1277, 19, 'p', 'a'),
(1278, 19, 'a', 's'),
(1279, 19, 'd', 'f'),
(1280, 19, 'f', 'g'),
(1281, 19, 'g', 'h'),
(1282, 19, 'h', 'j'),
(1283, 19, 'j', 'k'),
(1284, 19, 'k', 'l'),
(1285, 19, 'l', 'z'),
(1286, 19, 'z', 'x'),
(1287, 19, 'x', 'c'),
(1288, 19, 'c', 'v'),
(1289, 19, 'v', 'b'),
(1290, 19, 'b', 'n'),
(1291, 19, 'n', 'm'),
(1292, 19, 'm', 'q'),
(1293, 20, 'refreshtoken', 'e 3\nf 1\nh 1\nk 1\nn 1\no 1\nr 2\ns 1\nt 1'),
(1294, 20, 'preventdefault', 'a 1\nd 1\ne 3\nf 1\nl 1\nn 1\np 1\nr 1\nt 2\nu 1\nv 1'),
(1295, 20, 'join', 'i 1\nj 1\nn 1\no 1'),
(1296, 20, 'serverless', 'e 3\nl 1\nr 2\ns 3\nv 1'),
(1297, 20, 'localhost', 'a 1\nc 1\nh 1\nl 2\no 2\ns 1\nt 1'),
(1298, 20, 'target', 'a 1\ne 1\ng 1\nr 1\nt 2'),
(1299, 20, 'function', 'c 1\nf 1\ni 1\nn 2\no 1\nt 1\nu 1'),
(1300, 20, 'repository', 'e 1\ni 1\no 2\np 1\nr 2\ns 1\nt 1\ny 1'),
(1301, 20, 'security', 'c 1\ne 1\ni 1\nr 1\ns 1\nt 1\nu 1\ny 1'),
(1302, 20, 'push', 'h 1\np 1\ns 1\nu 1'),
(1303, 21, '562 67', '629'),
(1304, 21, '713 794', '1507'),
(1305, 21, '659 75', '734'),
(1306, 21, '581 237', '818'),
(1307, 21, '299 770', '1069'),
(1308, 21, '377 746', '1123'),
(1309, 21, '824 780', '1604'),
(1310, 21, '571 168', '739'),
(1311, 21, '177 799', '976'),
(1312, 21, '622 962', '1584'),
(1313, 21, '511 566', '1077'),
(1314, 21, '925 898', '1823'),
(1315, 21, '315 476', '791'),
(1316, 21, '490 776', '1266'),
(1317, 21, '506 284', '790'),
(1318, 21, '79 757', '836'),
(1319, 21, '86 318', '404'),
(1320, 21, '743 586', '1329'),
(1321, 21, '110 157', '267'),
(1322, 21, '810 300', '1110'),
(1323, 21, '827 871', '1698'),
(1324, 21, '944 329', '1273'),
(1325, 21, '860 756', '1616'),
(1326, 21, '274 721', '995'),
(1327, 21, '281 483', '764'),
(1328, 21, '255 328', '583'),
(1329, 21, '248 256', '504'),
(1330, 21, '783 355', '1138'),
(1331, 21, '47 887', '934'),
(1332, 21, '508 934', '1442'),
(1333, 21, '536 406', '942'),
(1334, 21, '470 895', '1365'),
(1335, 21, '852 156', '1008'),
(1336, 21, '24 743', '767'),
(1337, 21, '439 735', '1174'),
(1338, 21, '314 588', '902'),
(1339, 21, '758 341', '1099'),
(1340, 21, '157 154', '311'),
(1341, 21, '596 982', '1578'),
(1342, 21, '636 581', '1217'),
(1343, 21, '700 20', '720'),
(1344, 21, '138 758', '896'),
(1345, 21, '43 640', '683'),
(1346, 21, '204 115', '319'),
(1347, 21, '265 938', '1203'),
(1348, 21, '306 544', '850'),
(1349, 21, '447 736', '1183'),
(1350, 21, '134 976', '1110'),
(1351, 21, '669 612', '1281'),
(1352, 21, '699 340', '1039'),
(1353, 21, '886 762', '1648'),
(1354, 21, '816 629', '1445'),
(1355, 21, '993 211', '1204'),
(1356, 21, '118 299', '417'),
(1357, 21, '836 82', '918'),
(1358, 21, '195 694', '889'),
(1359, 21, '364 657', '1021'),
(1360, 21, '676 373', '1049'),
(1361, 21, '604 595', '1199'),
(1362, 21, '86 996', '1082'),
(1363, 21, '63 426', '489'),
(1364, 21, '793 813', '1606'),
(1365, 21, '584 672', '1256'),
(1366, 21, '680 188', '868'),
(1367, 21, '978 955', '1933'),
(1368, 21, '114 419', '533'),
(1369, 21, '406 3', '409'),
(1370, 21, '836 875', '1711'),
(1371, 21, '134 398', '532'),
(1372, 21, '690 124', '814'),
(1373, 21, '450 367', '817'),
(1374, 21, '947 957', '1904'),
(1375, 21, '424 642', '1066'),
(1376, 21, '906 797', '1703'),
(1377, 21, '209 897', '1106'),
(1378, 21, '603 548', '1151'),
(1379, 21, '610 681', '1291'),
(1380, 21, '41 262', '303'),
(1381, 21, '171 782', '953'),
(1382, 21, '215 920', '1135'),
(1383, 21, '460 290', '750'),
(1384, 21, '382 716', '1098'),
(1385, 21, '271 352', '623'),
(1386, 21, '605 935', '1540'),
(1387, 21, '703 206', '909'),
(1388, 21, '257 189', '446'),
(1389, 21, '641 350', '991'),
(1390, 21, '624 919', '1543'),
(1391, 21, '106 724', '830'),
(1392, 21, '671 438', '1109'),
(1393, 21, '290 665', '955'),
(1394, 21, '703 128', '831'),
(1395, 21, '673 594', '1267'),
(1396, 21, '492 657', '1149'),
(1397, 21, '322 757', '1079'),
(1398, 21, '829 822', '1651'),
(1399, 21, '16 859', '875'),
(1400, 21, '672 960', '1632'),
(1401, 21, '833 998', '1831'),
(1402, 21, '657 499', '1156'),
(1403, 21, '52 476', '528'),
(1404, 21, '211 755', '966'),
(1405, 21, '903 954', '1857'),
(1406, 21, '74 874', '948'),
(1407, 21, '809 760', '1569'),
(1408, 21, '131 720', '851'),
(1409, 21, '151 956', '1107'),
(1410, 21, '132 943', '1075'),
(1411, 21, '162 84', '246'),
(1412, 21, '730 877', '1607'),
(1413, 21, '453 531', '984'),
(1414, 21, '787 884', '1671'),
(1415, 21, '947 261', '1208'),
(1416, 21, '935 869', '1804'),
(1417, 21, '351 229', '580'),
(1418, 21, '19 205', '224'),
(1419, 21, '243 3', '246'),
(1420, 21, '941 944', '1885'),
(1421, 21, '767 173', '940'),
(1422, 21, '584 915', '1499'),
(1423, 21, '313 11', '324'),
(1424, 21, '608 541', '1149'),
(1425, 21, '819 996', '1815'),
(1426, 21, '4 202', '206'),
(1427, 21, '66 831', '897'),
(1428, 21, '57 898', '955'),
(1429, 21, '284 988', '1272'),
(1430, 21, '876 370', '1246'),
(1431, 21, '1 999', '1000'),
(1432, 21, '112 114', '226'),
(1433, 21, '683 638', '1321'),
(1434, 21, '571 355', '926'),
(1435, 21, '896 426', '1322'),
(1436, 21, '583 899', '1482'),
(1437, 21, '260 109', '369'),
(1438, 21, '105 722', '827'),
(1439, 21, '380 903', '1283'),
(1440, 21, '43 692', '735'),
(1441, 21, '792 940', '1732'),
(1442, 21, '224 281', '505'),
(1443, 21, '228 779', '1007'),
(1444, 21, '686 0', '686'),
(1445, 21, '72 412', '484'),
(1446, 21, '796 184', '980'),
(1447, 21, '118 127', '245'),
(1448, 21, '530 94', '624'),
(1449, 21, '190 816', '1006'),
(1450, 21, '194 708', '902'),
(1451, 21, '766 166', '932'),
(1452, 21, '123456789012345 987654321098765', '1111111110111110'),
(1453, 21, '474 353', '827'),
(1454, 21, '328 522', '850'),
(1455, 21, '338 442', '780'),
(1456, 21, '967 877', '1844'),
(1457, 21, '398 428', '826'),
(1458, 21, '75 213', '288'),
(1459, 21, '11 115', '126'),
(1460, 21, '520 929', '1449'),
(1461, 21, '419 961', '1380'),
(1462, 21, '780 553', '1333'),
(1463, 21, '745 363', '1108'),
(1464, 21, '637 530', '1167'),
(1465, 21, '131 938', '1069'),
(1466, 21, '944 113', '1057'),
(1467, 21, '848 715', '1563'),
(1468, 21, '504 807', '1311'),
(1469, 21, '908 347', '1255'),
(1470, 21, '148 331', '479'),
(1471, 21, '959 873', '1832'),
(1472, 21, '932 113', '1045'),
(1473, 21, '508 991', '1499'),
(1474, 21, '177 894', '1071'),
(1475, 21, '531 404', '935'),
(1476, 21, '871 12', '883'),
(1477, 21, '276 182', '458'),
(1478, 21, '34 384', '418'),
(1479, 21, '372 605', '977'),
(1480, 21, '270 889', '1159'),
(1481, 21, '971 977', '1948'),
(1482, 21, '108 322', '430'),
(1483, 21, '561 152', '713'),
(1484, 21, '848 575', '1423'),
(1485, 21, '289 447', '736'),
(1486, 21, '779 865', '1644'),
(1487, 21, '747 108', '855'),
(1488, 21, '75 259', '334'),
(1489, 21, '923 928', '1851'),
(1490, 21, '243 809', '1052'),
(1491, 21, '937 737', '1674'),
(1492, 21, '941 720', '1661'),
(1493, 21, '161 830', '991'),
(1494, 21, '325 108', '433'),
(1495, 21, '615 106', '721'),
(1496, 21, '529 377', '906'),
(1497, 21, '957 57', '1014'),
(1498, 21, '85 924', '1009'),
(1499, 21, '538 345', '883'),
(1500, 21, '743 599', '1342'),
(1501, 21, '5\n5', '25'),
(1502, 21, '193 336', '529'),
(1503, 22, 'QYetANMSRLwYa\r\n', 'QY-et-AN-MS-RL-wY-a_'),
(1504, 22, 'IRLPvjxRPtXuAOC', 'IR-LP-vj-xR-Pt-Xu-AO-C_'),
(1505, 22, 'Bcdjvg', 'Bc-dj-vg-'),
(1506, 22, 'VaajtLQO', 'Va-aj-tL-QO-'),
(1507, 22, 'fEmUE', 'fE-mU-E_'),
(1508, 22, 'QRTxDAhi', 'QR-Tx-DA-hi-'),
(1509, 22, 'rh', 'rh-'),
(1510, 22, 'fMlootgjRyDgw', 'fM-lo-ot-gj-Ry-Dg-w_'),
(1511, 22, 'eVqIOZ', 'eV-qI-OZ-'),
(1512, 22, 'QkLRIJs', 'Qk-LR-IJ-s_'),
(1513, 23, ')))()()))))(()())', 'NO'),
(1514, 23, '())((((((', 'NO'),
(1515, 23, '()()))())(())(', 'NO'),
(1516, 23, '(())())(', 'NO'),
(1517, 23, ')))((()))(()())', 'NO'),
(1518, 23, '(()()))))))', 'NO'),
(1519, 23, ')())))(())(', 'NO'),
(1520, 23, '))()()(()(()()(', 'NO'),
(1521, 23, ')())', 'NO'),
(1522, 23, '((()((()', 'NO'),
(1523, 23, '((((', 'NO'),
(1524, 23, '))))))())', 'NO'),
(1525, 23, ')()))(()', 'NO'),
(1526, 23, '))))(((()))', 'NO'),
(1527, 23, '))()))))()))())(()', 'NO'),
(1528, 23, '(()((((())(())((', 'NO'),
(1529, 23, ')))(()(())', 'NO'),
(1530, 23, '((()(()))())((', 'NO'),
(1531, 23, '))))))(()(', 'NO'),
(1532, 23, ')))))(()()(())()', 'NO'),
(1533, 23, '())()())))((', 'NO'),
(1534, 23, '())()()))()(', 'NO'),
(1535, 23, '(())())()((((()()()(', 'NO'),
(1536, 23, ')(((()(', 'NO'),
(1537, 23, '(', 'NO'),
(1538, 23, '))(', 'NO'),
(1539, 23, '()())))())((()(', 'NO'),
(1540, 23, '())())))((((())(((', 'NO'),
(1541, 23, ')()))()(', 'NO'),
(1542, 23, '()', 'YES'),
(1543, 23, ')(', 'NO'),
(1544, 23, '))()())()))))', 'NO'),
(1545, 23, ')(())(((', 'NO'),
(1546, 23, ')()(()()()((((((', 'NO'),
(1547, 23, '))())())', 'NO'),
(1548, 23, ')((()))()())', 'NO'),
(1549, 23, ')(((()()(((()(', 'NO'),
(1550, 23, ')(()()))((()()', 'NO'),
(1551, 23, ')((())))((()))())(', 'NO'),
(1552, 23, '())', 'NO'),
(1553, 23, '())(()()((((((((', 'NO'),
(1554, 23, '(()((()', 'NO'),
(1555, 23, '))', 'NO'),
(1556, 23, '))(()()()(())()))(()', 'NO'),
(1557, 23, '(((()', 'NO'),
(1558, 23, '(())((', 'NO'),
(1559, 23, '(', 'NO'),
(1560, 23, ')((', 'NO'),
(1561, 23, '))()()())(', 'NO'),
(1562, 23, ')())(())())()())(((', 'NO'),
(1563, 23, '))))()()(((()(', 'NO'),
(1564, 23, ')()))((', 'NO'),
(1565, 23, '((((()(()()(()())()', 'NO'),
(1566, 23, '(()((((())())(())(', 'NO'),
(1567, 23, '(())', 'YES'),
(1568, 23, '(()())())', 'NO'),
(1569, 23, '))))', 'NO'),
(1570, 23, ')))(())))))((()', 'NO'),
(1571, 23, ')((((((())(((()', 'NO'),
(1572, 23, '((()(((((()(()(', 'NO'),
(1573, 23, ')((()))(', 'NO'),
(1574, 23, ')))()))()()(', 'NO'),
(1575, 23, ')(())((((((()(())', 'NO'),
(1576, 23, '(()()()(((()()((', 'NO'),
(1577, 23, '))())))))(()))', 'NO'),
(1578, 23, '))((()))((())())((((', 'NO'),
(1579, 23, '((())))(', 'NO'),
(1580, 23, '(((', 'NO'),
(1581, 23, '))(()))(', 'NO'),
(1582, 23, '())))())(()()()', 'NO'),
(1583, 23, ')((()(', 'NO'),
(1584, 23, '()', 'YES'),
(1585, 23, ')((()(', 'NO'),
(1586, 23, ')))(((()', 'NO'),
(1587, 23, ')))())((()()))((()))', 'NO'),
(1588, 23, '((())(()', 'NO'),
(1589, 23, '(', 'NO'),
(1590, 23, ')()(()((', 'NO'),
(1591, 23, '())()(()(()()(())((', 'NO'),
(1592, 23, ')))))()(((()', 'NO'),
(1593, 23, ')((())()))((()()', 'NO'),
(1594, 23, '())((()))(()))', 'NO'),
(1595, 23, '((()((()', 'NO'),
(1596, 23, '()())))())(())))', 'NO'),
(1597, 23, '(((())())))', 'NO'),
(1598, 23, '((())()', 'NO'),
(1599, 23, '()(()(((())))', 'NO'),
(1600, 23, '((()(()(())', 'NO'),
(1601, 23, '(()))', 'NO'),
(1602, 23, '))(()))(', 'NO'),
(1603, 23, '))))()(((()))())', 'NO'),
(1604, 23, '))()))))()))', 'NO'),
(1605, 23, ')(', 'NO'),
(1606, 23, ')))((((', 'NO'),
(1607, 23, ')', 'NO'),
(1608, 23, '())((((((())(', 'NO'),
(1609, 23, ')()(()())())', 'NO'),
(1610, 23, '(())((()))(())()())', 'NO'),
(1611, 23, '((()()))', 'YES'),
(1612, 23, '())()()(', 'NO'),
(1613, 23, ')(()((((((', 'NO'),
(1614, 23, '()))((())()()(', 'NO'),
(1615, 23, '(())', 'YES'),
(1616, 23, '(()((', 'NO'),
(1617, 23, '((((((()))))(', 'NO'),
(1618, 23, '((()(())()((((', 'NO'),
(1619, 23, ')(())()))()(())()', 'NO'),
(1620, 23, ')', 'NO'),
(1621, 23, ')', 'NO'),
(1622, 23, '()())(', 'NO'),
(1623, 23, '()))()()(((()()()(', 'NO'),
(1624, 23, '))()))(())((((', 'NO'),
(1625, 23, '))()((())(()', 'NO'),
(1626, 23, '((())()())', 'YES'),
(1627, 23, '))))))()()', 'NO'),
(1628, 23, '()()(', 'NO'),
(1629, 23, ')()))(((', 'NO'),
(1630, 23, ')()()(()((())(', 'NO'),
(1631, 23, '()()(()))()(())', 'NO'),
(1632, 23, '(((()()))(())))((((', 'NO'),
(1633, 23, '(((((())())()((((', 'NO'),
(1634, 23, '((()(', 'NO'),
(1635, 23, ')(()))((()()(((())', 'NO'),
(1636, 23, ')()()((', 'NO'),
(1637, 23, ')(', 'NO'),
(1638, 23, '((', 'NO'),
(1639, 23, ')', 'NO'),
(1640, 23, ')())))(', 'NO'),
(1641, 23, ')))())()()))(((', 'NO'),
(1642, 23, '(', 'NO'),
(1643, 23, '((())((()))()))((())', 'NO'),
(1644, 23, ')(())()))(()))()((((', 'NO'),
(1645, 23, '((((())', 'NO'),
(1646, 23, '()((()((())()()))(', 'NO'),
(1647, 23, '())())()))()())))(', 'NO'),
(1648, 23, '(()))))(())()()', 'NO'),
(1649, 23, ')()()()(()))', 'NO'),
(1650, 23, '((()', 'NO'),
(1651, 23, '))()()((((())))(', 'NO'),
(1652, 23, '()(()', 'NO'),
(1653, 23, '())(())(()(())', 'NO'),
(1654, 23, '()))))()()()))', 'NO'),
(1655, 23, '())))())()(())(', 'NO'),
(1656, 23, ')))(()()()))((((', 'NO'),
(1657, 23, '()((())(()((())))', 'NO'),
(1658, 23, '()((())((', 'NO'),
(1659, 23, ')())())())', 'NO'),
(1660, 23, ')()))))))())(((()', 'NO'),
(1661, 23, '((()))))))((((()(', 'NO'),
(1662, 23, '()))(()()()))((', 'NO'),
(1663, 23, '()()((()))()))))(((', 'NO'),
(1664, 23, ')))(()(()(((()(()', 'NO'),
(1665, 23, '))))(((((())', 'NO'),
(1666, 23, '()((())()))()(', 'NO'),
(1667, 23, ')()((()()))())', 'NO'),
(1668, 23, '()))))(', 'NO'),
(1669, 23, ')))', 'NO'),
(1670, 23, '()((', 'NO'),
(1671, 23, '()(())()())()', 'NO'),
(1672, 23, ')())(((())(((()(()', 'NO'),
(1673, 23, '()', 'YES'),
(1674, 23, '())()()())))))()', 'NO'),
(1675, 23, '))))((()(((()', 'NO'),
(1676, 23, '))(((())())()', 'NO'),
(1677, 23, '(', 'NO'),
(1678, 23, ')(((()((()())', 'NO'),
(1679, 23, ')))()))))())(', 'NO'),
(1680, 23, ')(', 'NO'),
(1681, 23, ')((()))(())()))(', 'NO'),
(1682, 23, ')()))', 'NO'),
(1683, 23, ')())(())(((()()((((', 'NO'),
(1684, 23, ')(((())))', 'NO'),
(1685, 23, ')))(()))(', 'NO'),
(1686, 23, '((())()()))()', 'NO'),
(1687, 23, '(()(()(((())', 'NO'),
(1688, 23, '))()())))((((((', 'NO'),
(1689, 23, '()()())(()(()(()()()', 'NO'),
(1690, 23, '()(((((((()((', 'NO'),
(1691, 23, ')))))()))(()))()', 'NO'),
(1692, 23, ')((())()()))()))((', 'NO'),
(1693, 23, '(())(()()()))', 'NO'),
(1694, 23, '(()', 'NO'),
(1695, 23, '))))())()', 'NO'),
(1696, 23, '())(()))', 'NO'),
(1697, 23, ')(())(((()', 'NO'),
(1698, 23, '()()())()()(', 'NO'),
(1699, 23, '((()))))(', 'NO'),
(1700, 23, ')', 'NO'),
(1701, 23, ')(())(())(((()(((', 'NO'),
(1702, 23, '(())(()', 'NO'),
(1703, 23, '(())))()((()))()()(', 'NO'),
(1704, 23, '((())()((()()())((', 'NO'),
(1705, 23, '(', 'NO'),
(1706, 23, ')((()', 'NO'),
(1707, 23, '))((())))(())))()', 'NO'),
(1708, 23, ')', 'NO'),
(1709, 23, ')()()))(((((', 'NO'),
(1710, 23, '))(()', 'NO'),
(1711, 23, '))())))())(', 'NO'),
(1712, 23, '()))))))(((((()(', 'NO'),
(1713, 24, '989', '4'),
(1714, 24, '521', '4'),
(1715, 24, '880', '4'),
(1716, 24, '135', '4'),
(1717, 24, '847', '4'),
(1718, 24, '280', '4'),
(1719, 24, '264', '4'),
(1720, 24, '656', '4'),
(1721, 24, '30', '4'),
(1722, 24, '256', '4'),
(1723, 24, '380 [object TextDecoder]', '4'),
(1724, 24, '65 [object TextDecoder]', '4'),
(1725, 24, '842 [object TextDecoder]', '4'),
(1726, 24, '496 [object TextDecoder]', '4'),
(1727, 24, '554 [object TextDecoder]', '4'),
(1728, 24, '788 [object TextDecoder]', '4'),
(1729, 24, '104 [object TextDecoder]', '4'),
(1730, 24, '113 [object TextDecoder]', '4'),
(1731, 24, '340 [object TextDecoder]', '4'),
(1732, 24, '399 [object TextDecoder]', '4'),
(1733, 24, '871 666', '4'),
(1734, 24, '65 596', '4'),
(1735, 24, '668 242', '4'),
(1736, 24, '407 655', '4'),
(1737, 24, '997 387', '4'),
(1738, 24, '631 194', '4'),
(1739, 24, '595 426', '4'),
(1740, 24, '812 379', '4'),
(1741, 24, '565 172', '4'),
(1742, 24, '246 934', '4'),
(1743, 24, '889 958', '4'),
(1744, 24, '503 346', '4'),
(1745, 24, '376 167', '4'),
(1746, 24, '809 241', '4'),
(1747, 24, '605 780', '4'),
(1748, 24, '904 537', '4'),
(1749, 24, '624 439', '4'),
(1750, 24, '54 213', '4'),
(1751, 24, '533 890', '4'),
(1752, 24, '691 573', '4'),
(1753, 25, '96 ', '16920'),
(1754, 25, '41 ', '7020'),
(1755, 25, '3 ', '180'),
(1756, 25, '18 ', '2880'),
(1757, 25, '81 ', '14220'),
(1758, 25, '49 ', '8460'),
(1759, 25, '98 ', '17280'),
(1760, 25, '32 ', '5400'),
(1761, 25, '42 ', '7200'),
(1762, 25, '50 ', '8640'),
(1763, 25, '24 ', '3960'),
(1764, 25, '3 ', '180'),
(1765, 25, '77 ', '13500'),
(1766, 25, '38 ', '6480'),
(1767, 25, '88 ', '15480'),
(1768, 25, '22 ', '3600'),
(1769, 25, '99 ', '17460'),
(1770, 25, '81 ', '14220'),
(1771, 25, '44 ', '7560'),
(1772, 25, '21 ', '3420'),
(1773, 26, 'bjxfue kpiggm ldmfanng', 'ldmfanng'),
(1774, 26, 'aknoc upcr zkev', 'aknoc'),
(1775, 26, 'qazpgn pqoewt lqtjgka', 'lqtjgka'),
(1776, 26, 'dhrp yavpv chwe', 'yavpv'),
(1777, 26, 'xs gxf pqoaglb', 'pqoaglb'),
(1778, 26, 'stsqr kugnv arrktjac', 'arrktjac'),
(1779, 26, 'pf zjwywutenn phimoxey', 'zjwywutenn'),
(1780, 26, 'pkyupa thbogn dddskmoolm', 'dddskmoolm'),
(1781, 26, 'lvwo n lob', 'lvwo'),
(1782, 26, 'radlaalkdc zvudayzr kns', 'radlaalkdc'),
(1783, 26, 'iyrkpefqxl ggtcamla bzzqlkews', 'iyrkpefqxl'),
(1784, 26, 'd znnhgn htycxqypvn', 'htycxqypvn'),
(1785, 26, 'ctgt bxnmtwhxgk qlpfrf', 'bxnmtwhxgk'),
(1786, 26, 'qzlapfrvf pzhj qkkjhoshul', 'qkkjhoshul'),
(1787, 26, 'xotevrqjw vz wvufmgik', 'xotevrqjw'),
(1788, 26, 'viic mmdfu tirnly', 'tirnly'),
(1789, 26, 'cjaqzy zyon vurflvjif', 'vurflvjif'),
(1790, 26, 'yqqb ei mgoep', 'mgoep'),
(1791, 26, 'y q jslysif', 'jslysif'),
(1792, 26, 'h ozrqngk njtgcjcrs', 'njtgcjcrs'),
(1793, 26, 'ygzyvdokvu tjc rfr', 'ygzyvdokvu'),
(1794, 26, 'zoe qenopd bzoh', 'qenopd'),
(1795, 26, 'rofivq suozog vutdgxtnd', 'vutdgxtnd'),
(1796, 26, 't mcl lfpuky', 'lfpuky'),
(1797, 26, 'fqgrm fjfpl gojoieof', 'gojoieof'),
(1798, 26, 'yzpsjlcds lxee bulzmkbvt', 'yzpsjlcds bulzmkbvt'),
(1799, 26, 'gbwhpob omuiqprqgg xcpzqcylxm', 'omuiqprqgg xcpzqcylxm'),
(1800, 26, 'rgbsmq p o', 'rgbsmq'),
(1801, 26, 'atdom afxslqry zkf', 'afxslqry'),
(1802, 26, 'rfl d zgopnpise', 'zgopnpise'),
(1803, 26, 'mcvjdeqc vnnlrq vn', 'mcvjdeqc'),
(1804, 26, 'bgdragkkos qmywobzhkn aytdpdbx', 'bgdragkkos qmywobzhkn'),
(1805, 26, 'lgkiuml dqvz o', 'lgkiuml'),
(1806, 26, 'nd pq qpejtx', 'qpejtx'),
(1807, 26, 'cszuic yhydp nzvxqlc', 'nzvxqlc'),
(1808, 26, 'pnhaf r mnfmth', 'mnfmth'),
(1809, 26, 'sjouwkg goy wnpr', 'sjouwkg'),
(1810, 26, 'eblsa kjorror denxjs', 'kjorror'),
(1811, 26, 'scnro gsqr bozdejmhz', 'bozdejmhz'),
(1812, 26, 'vtwhkfkfcn nc unya', 'vtwhkfkfcn'),
(1813, 26, 'znsreirtw fbq iwsecqgqx', 'znsreirtw iwsecqgqx'),
(1814, 26, 'irjaqa jytqznfu fqv', 'jytqznfu'),
(1815, 26, 'izutcows n j', 'izutcows'),
(1816, 26, 'lq lvuaus udkiwhs', 'udkiwhs'),
(1817, 26, 'gzmf yy nmipnf', 'nmipnf'),
(1818, 26, 'bycdg ii hafydyu', 'hafydyu'),
(1819, 26, 'totldbbs ffgfvxosog n', 'ffgfvxosog'),
(1820, 26, 'inxtfeblh cl wnfqdeo', 'inxtfeblh'),
(1821, 26, 'kbs prg xzlvg', 'xzlvg'),
(1822, 26, 'lscwsn j mje', 'lscwsn'),
(1823, 26, 'cdjll kztjxo mmuuu', 'kztjxo'),
(1824, 26, 'besuubkrk ej xohy', 'besuubkrk'),
(1825, 26, 'sbzn pufewrykrz tcpzqyhtay', 'pufewrykrz tcpzqyhtay'),
(1826, 26, 'qkjlbyt ilvywxl oxtmfjhe', 'oxtmfjhe'),
(1827, 26, 'vzeszvtbwn fixodpu hyzf', 'vzeszvtbwn'),
(1828, 26, 'ndmyf d ouwb', 'ndmyf'),
(1829, 26, 'yq bzncmdrdm njlpu', 'bzncmdrdm'),
(1830, 26, 'ctrudjtl kwmjm pwizt', 'ctrudjtl'),
(1831, 26, 'tcpfx bwvvfhbff gdczvmhsk', 'bwvvfhbff gdczvmhsk'),
(1832, 26, 'nduvseztr xenvp lnlkspqe', 'nduvseztr'),
(1833, 26, 'yoxm unbv tpx', 'yoxm unbv'),
(1834, 26, 'ngnwxxtes kvgzqfr myipoqkb', 'ngnwxxtes'),
(1835, 26, 'xwkt jivrnbvwke zlomf', 'jivrnbvwke'),
(1836, 26, 'logdzvacg t kq', 'logdzvacg'),
(1837, 26, 'xlil rwrkue jqu', 'rwrkue'),
(1838, 26, 'f rqbh zmcyhg', 'zmcyhg'),
(1839, 26, 'ykhi okcysttbw dxn', 'okcysttbw'),
(1840, 26, 'ylgwunwehx gf ushnyd', 'ylgwunwehx'),
(1841, 26, 'kngiq bple d', 'kngiq'),
(1842, 26, 'jxlp gkkttc ijdojylyc', 'ijdojylyc'),
(1843, 26, 'scnmm wrewieqtd dsocqqth', 'wrewieqtd'),
(1844, 26, 'xmtifmzkr tmumu rtbxbi', 'xmtifmzkr'),
(1845, 26, 'fzupfcmt dnuck gz', 'fzupfcmt'),
(1846, 26, 'xq vtwojfgtj vbazqtwg', 'vtwojfgtj'),
(1847, 26, 'bc vmnos zfxennxtcz', 'zfxennxtcz'),
(1848, 26, 'pbzdu woxu mvqkdplv', 'mvqkdplv'),
(1849, 26, 'wdtpzsfsy qqccmb mxxzjvhxt', 'wdtpzsfsy mxxzjvhxt'),
(1850, 26, 'unuuawdo meqxye rmhbighdr', 'rmhbighdr'),
(1851, 26, 'qddb pwfbs yccgqvnan', 'yccgqvnan'),
(1852, 26, 'i steqz ivzx', 'steqz'),
(1853, 26, 'm ko yrchnu', 'yrchnu'),
(1854, 26, 'y cksqsm dlrbeulztq', 'dlrbeulztq'),
(1855, 26, 'auildkhgs j gmavlbvruh', 'gmavlbvruh'),
(1856, 26, 'nk g glnkovwscs', 'glnkovwscs'),
(1857, 26, 'lzqzzd qetpyjlqrt npcmfcl', 'qetpyjlqrt'),
(1858, 26, 'twx odedp ofceiivfv', 'ofceiivfv'),
(1859, 26, 'tseqvn a pdrhm', 'tseqvn'),
(1860, 26, 'nfdf rugag wmzfgoph', 'wmzfgoph'),
(1861, 26, 'qz dd httuoe', 'httuoe'),
(1862, 26, 'dowrzoqrh slogp enquk', 'dowrzoqrh'),
(1863, 26, 'yy bh bpbz', 'bpbz'),
(1864, 26, 'ppmossxpxh bzixjykvlq tn', 'ppmossxpxh bzixjykvlq'),
(1865, 26, 'xmhblkxb cw chagsjnk', 'xmhblkxb chagsjnk'),
(1866, 26, 'byhhkxp gcgaahsxkj zltdxqh', 'gcgaahsxkj'),
(1867, 26, 'zim krnuafmh mfegscrfce', 'mfegscrfce'),
(1868, 26, 'kbr faucevvoot auacvvfc', 'faucevvoot'),
(1869, 26, 'b o dayrhzx', 'dayrhzx'),
(1870, 26, 'bltltjuu erojyas wtlejgc', 'bltltjuu'),
(1871, 26, 'ujdat bzftzixoa qvym', 'bzftzixoa'),
(1872, 27, 'This is a test', 'sihT si a tset'),
(1873, 27, 'Hello world', 'olleH dlrow '),
(1874, 27, 'C++ is fun', '++C si nuf'),
(1875, 27, 'I love programming', 'I evol gnimmargorp'),
(1876, 27, 'ChatGPT is amazing', 'TPGtahC si gnizama'),
(1877, 27, 'JavaScript is awesome', 'tpircSavaJ si emosewa'),
(1878, 27, 'How are you?', 'woH era ?uoy'),
(1879, 27, 'OpenAI is great', 'IpenO si taerg'),
(1880, 27, 'Test case generation', 'tseT esac noitareneg'),
(1881, 27, 'Programming is fun', 'gnimmargorP si nuf'),
(1882, 27, 'JavaScript is powerful', 'tpircSavaJ si lufrewop'),
(1883, 27, 'Web development', 'beW tnempoleved'),
(1884, 27, 'Coding is awesome', 'gnidoC si emosewa'),
(1885, 27, 'Learn JavaScript', 'nraeL tpircSavaJ'),
(1886, 27, 'Machine learning', 'enihcaM gninrael'),
(1887, 27, 'Artificial intelligence', 'leifitrA ecnegilletni'),
(1888, 27, 'Big data analysis', 'giB atad sisylana'),
(1889, 27, 'Software engineering', 'erawtfoS gnireenigne'),
(1890, 27, 'Cloud computing', 'duolC gnitupmoc'),
(1891, 28, '.-.--', '012'),
(1892, 28, '--.', '20'),
(1893, 28, '-..-.--', '1012'),
(1894, 28, '---..', '210'),
(1895, 28, '..--.---..', '0020210'),
(1896, 28, '-.....----.', '10000220'),
(1897, 28, '.', '0'),
(1898, 28, '..', '00'),
(1899, 28, '.--.', '020'),
(1900, 28, '.-.-..', '0110'),
(1901, 28, '-..--.-.', '10201'),
(1902, 28, '..--..--.', '0020020'),
(1903, 28, '-.-.--.--.---...-...', '1120202100100'),
(1904, 28, '-.-.---.--..-..-.-.-..-..-.--.', '112120010111010120'),
(1905, 28, '---.-.-.------..-..-..-..-.-..-.--.-.-..-.-.-----..-.-.', '21112220010101011012011011221011'),
(1906, 28, '-.-..--.-.-.-.-.-..-.-.-.---------.--.---..--...--.-----.-.-.-...--.-.-.---.------.--..-.--.-----.-...-..------', '11020111110111222212021020002022111100201121222020012022110010222'),
(1907, 28, '-.---...----...--.--...-.--.----', '121002200020200012022'),
(1908, 28, '--.--.--.---.--.-.---.-.-..-..--.-..---.-.....-..---.-----.--...-.-.-------.-.--.-.----.-..-.------.', '202020212012111010201021100001021221200011222112012201012220'),
(1909, 28, '.-.----.-.--..-.-.-.-..----..-.-...--.-.---.---.-------..-.--..-......--.------.--.----.--...-.--.--..-----..-.....--.--.-.-.------..--------.----------..-.---.----.---.-..--..-.....-..------.--.', '012201200111102200110020121212221012001000002022202022020001202002210100002020112220022220222220012122021102001000010222020'),
(1910, 29, '5 1\n55 30 29 31 55', '6'),
(1911, 29, '5 10\n10 20 50 60 65', '6'),
(1912, 29, '6 10\n4 6 4 1 9 3', '30'),
(1913, 29, '7 100\n19 1694 261 162 1 234 513', '8'),
(1914, 29, '8 42\n37 53 74 187 568 22 5 65', '20'),
(1915, 29, '10 4\n11 6 76 49 28 20 57 152 5 32', '4'),
(1916, 30, '886', '0'),
(1917, 30, '581', '0'),
(1918, 30, '841', '0'),
(1919, 30, '738', '0'),
(1920, 30, '460', '0'),
(1921, 30, '542', '0'),
(1922, 30, '227', '0'),
(1923, 30, '35', '0'),
(1924, 30, '53', '0'),
(1925, 30, '171', '0'),
(1926, 30, '893', '0'),
(1927, 30, '127', '0'),
(1928, 30, '138', '0'),
(1929, 30, '145', '0'),
(1930, 30, '59', '0'),
(1931, 30, '688', '0'),
(1932, 30, '949', '0'),
(1933, 30, '419', '0'),
(1934, 30, '529', '0'),
(1935, 30, '101', '0'),
(1936, 30, '794', '0'),
(1937, 30, '502', '0'),
(1938, 30, '622', '0'),
(1939, 30, '292', '0'),
(1940, 30, '832', '0'),
(1941, 30, '622', '0'),
(1942, 30, '528', '0'),
(1943, 30, '992', '0'),
(1944, 30, '615', '0'),
(1945, 30, '120', '0'),
(1946, 30, '308', '0'),
(1947, 30, '619', '0'),
(1948, 30, '991', '0'),
(1949, 30, '434', '0'),
(1950, 30, '930', '0'),
(1951, 30, '594', '0'),
(1952, 30, '169', '0'),
(1953, 30, '472', '0'),
(1954, 30, '21', '0'),
(1955, 30, '198', '0'),
(1956, 30, '729', '0'),
(1957, 30, '80', '0'),
(1958, 30, '52', '0'),
(1959, 30, '996', '0'),
(1960, 30, '887', '0'),
(1961, 30, '598', '0'),
(1962, 30, '588', '0'),
(1963, 30, '536', '0'),
(1964, 30, '205', '0'),
(1965, 30, '105', '0'),
(1966, 30, '8331', '0'),
(1967, 30, '1849', '0'),
(1968, 30, '1864', '0'),
(1969, 30, '8847', '0'),
(1970, 30, '3106', '0'),
(1971, 30, '1724', '0'),
(1972, 30, '859', '0'),
(1973, 30, '822', '0'),
(1974, 30, '5939', '0'),
(1975, 30, '50', '0'),
(1976, 30, '3915', '0'),
(1977, 30, '4797', '0'),
(1978, 30, '9490', '0'),
(1979, 30, '9647', '0'),
(1980, 30, '5165', '0'),
(1981, 30, '2307', '0'),
(1982, 30, '415', '0'),
(1983, 30, '3487', '0'),
(1984, 30, '5855', '0'),
(1985, 30, '850', '0'),
(1986, 30, '2122', '0'),
(1987, 30, '2769', '0'),
(1988, 30, '4431', '0'),
(1989, 30, '4086', '0'),
(1990, 30, '5531', '0'),
(1991, 30, '4060', '0'),
(1992, 30, '9116', '0'),
(1993, 30, '8049', '0'),
(1994, 30, '2637', '0'),
(1995, 30, '6769', '0'),
(1996, 30, '5061', '0'),
(1997, 30, '1890', '0'),
(1998, 30, '2676', '0'),
(1999, 30, '4751', '0'),
(2000, 30, '9312', '0'),
(2001, 30, '6753', '0'),
(2002, 30, '3814', '0'),
(2003, 30, '3808', '0'),
(2004, 30, '8138', '0'),
(2005, 30, '8768', '0'),
(2006, 30, '635', '0'),
(2007, 30, '7175', '0'),
(2008, 30, '3423', '0'),
(2009, 30, '8146', '0'),
(2010, 30, '392', '0'),
(2011, 30, '3255', '0'),
(2012, 30, '3803', '0'),
(2013, 30, '9958', '0'),
(2014, 30, '2265', '0'),
(2015, 30, '1073', '0'),
(2016, 30, '303', '0'),
(2017, 30, '97947', '0'),
(2018, 30, '78553', '0'),
(2019, 30, '77424', '0'),
(2020, 30, '71344', '0'),
(2021, 30, '2070', '0'),
(2022, 30, '80141', '0'),
(2023, 30, '87355', '0'),
(2024, 30, '78392', '0'),
(2025, 30, '18384', '0'),
(2026, 30, '98826', '0'),
(2027, 30, '35572', '0'),
(2028, 30, '83249', '0'),
(2029, 30, '6060', '0'),
(2030, 30, '58721', '0'),
(2031, 30, '30878', '0'),
(2032, 30, '44139', '0'),
(2033, 30, '87277', '0'),
(2034, 30, '10526', '0'),
(2035, 30, '35883', '0'),
(2036, 30, '74505', '0'),
(2037, 30, '42211', '0'),
(2038, 30, '91033', '0'),
(2039, 30, '91197', '0'),
(2040, 30, '89584', '0'),
(2041, 30, '11574', '0'),
(2042, 30, '53110', '0'),
(2043, 30, '15099', '0'),
(2044, 30, '35519', '0'),
(2045, 30, '95346', '0'),
(2046, 30, '74034', '0'),
(2047, 30, '32215', '0'),
(2048, 30, '30125', '0'),
(2049, 30, '83648', '0'),
(2050, 30, '46299', '0'),
(2051, 30, '27683', '0'),
(2052, 30, '20891', '0'),
(2053, 30, '9583', '0'),
(2054, 30, '28684', '0'),
(2055, 30, '37548', '0'),
(2056, 30, '22899', '0'),
(2057, 30, '23963', '0'),
(2058, 30, '92680', '0'),
(2059, 30, '86973', '0'),
(2060, 30, '49265', '0'),
(2061, 30, '25871', '0'),
(2062, 30, '93966', '0'),
(2063, 30, '84205', '0'),
(2064, 30, '99533', '0'),
(2065, 30, '58489', '0'),
(2066, 30, '858102', '0'),
(2067, 30, '995266', '0'),
(2068, 30, '377602', '0'),
(2069, 30, '346644', '0'),
(2070, 30, '716712', '0'),
(2071, 30, '438963', '0'),
(2072, 30, '416555', '0'),
(2073, 30, '82683', '0'),
(2074, 30, '762378', '0'),
(2075, 30, '260422', '0'),
(2076, 30, '226929', '0'),
(2077, 30, '283263', '0'),
(2078, 30, '9212', '0'),
(2079, 30, '188807', '0'),
(2080, 30, '373255', '0'),
(2081, 30, '531713', '0'),
(2082, 30, '930955', '0'),
(2083, 30, '184079', '0'),
(2084, 30, '958648', '0'),
(2085, 30, '448810', '0'),
(2086, 30, '115865', '0'),
(2087, 30, '208333', '0'),
(2088, 30, '896669', '0'),
(2089, 30, '493528', '0'),
(2090, 30, '995128', '0'),
(2091, 30, '221263', '0'),
(2092, 30, '585945', '0'),
(2093, 30, '799503', '0'),
(2094, 30, '59168', '0'),
(2095, 30, '37010', '0'),
(2096, 30, '750282', '0'),
(2097, 30, '719127', '0'),
(2098, 30, '938639', '0'),
(2099, 30, '287973', '0'),
(2100, 30, '414512', '0'),
(2101, 30, '953945', '0'),
(2102, 30, '381137', '0'),
(2103, 30, '154106', '0'),
(2104, 30, '596885', '0'),
(2105, 30, '259207', '0'),
(2106, 30, '774848', '0'),
(2107, 30, '496056', '0'),
(2108, 30, '393762', '0'),
(2109, 30, '575484', '0'),
(2110, 30, '691282', '0'),
(2111, 30, '719806', '0'),
(2112, 30, '896250', '0'),
(2113, 30, '968805', '0'),
(2114, 30, '496032', '0'),
(2116, 31, '2\n1 1', '2'),
(2117, 31, '2\n2 2', '5'),
(2118, 31, '1\n10', '10'),
(2119, 31, '3\n2 4 1', '10'),
(2120, 31, '4\n5 5 3 1', '22'),
(2121, 31, '2\n1000000000 1000000000', '2999999999'),
(2122, 31, '10\n5 7 8 1 10 3 6 4 10 6', '294'),
(2123, 31, '100\n5 7 5 3 5 4 6 5 3 6 4 6 6 2 1 9 6 5 3 8 4 10 1 9 1 3 7 6 5 5 8 8 7 7 8 9 2 10 3 5 4 2 6 10 2 6 9 6 1 9 3 7 7 8 3 9 9 5 10 10 3 10 7 8 3 9 8 3 2 4 10 2 1 1 7 3 9 10 4 6 9 8 2 1 4 10 1 10 6 8 7 5 3 3 6 2 7 10 3 8', '24212'),
(2124, 31, '100\n96 23 25 62 34 30 85 15 26 61 59 87 34 99 60 41 52 73 63 84 50 89 42 29 87 99 19 94 84 43 82 90 41 100 60 61 99 49 26 3 97 5 24 34 51 59 69 61 11 41 72 60 33 36 18 29 82 53 18 80 52 98 38 32 56 95 55 79 32 80 37 64 45 13 62 80 70 29 1 58 88 24 79 68 41 80 12 72 52 39 64 19 54 56 70 58 19 3 83 62', '261115'),
(2125, 31, '100\n883 82 79 535 478 824 700 593 262 385 403 183 176 386 126 648 710 516 922 97 800 728 372 9 954 911 975 526 476 3 74 459 471 174 295 831 698 21 927 698 580 856 712 430 5 473 592 40 301 230 763 266 38 213 393 70 333 779 811 249 130 456 763 657 578 699 939 660 898 918 438 855 892 85 35 232 54 593 849 777 917 979 796 322 473 887 284 105 522 415 86 480 80 592 516 227 680 574 488 644', '2519223'),
(2126, 31, '100\n6659 5574 5804 7566 7431 1431 3871 6703 200 300 3523 3580 8500 2312 4812 3149 3324 5846 8965 5758 5831 1341 7733 4477 355 3024 2941 9938 1494 16 1038 8262 9938 9230 5192 8113 7575 7696 5566 2884 8659 1951 1253 6480 3877 3707 5482 3825 5359 44 3219 3258 1785 5478 4525 5950 2417 1991 8885 4264 8769 2961 7107 8904 5097 2319 5713 8811 9723 8677 2153 3237 7174 9528 9260 7390 3050 6823 6239 5222 4602 933 7823 4198 8304 244 5845 3189 4490 3216 7877 6323 1938 4597 880 1206 1691 1405 4122 5950', '24496504'),
(2127, 31, '50\n515844718 503470143 928669067 209884122 322869098 241621928 844696197 105586164 552680307 968792756 135928721 842094825 298782438 829020472 791637138 285482545 811025527 428952878 887796419 11883658 546401594 6272027 100292274 308219869 372132044 955814846 644008184 521195760 919389466 215065725 687764134 655750167 181397022 404292682 643251185 776299412 741398345 865144798 369796727 673902099 124966684 35796775 794385099 594562033 550366869 868093561 695094388 580789105 755076935 198783899', '685659563557'),
(2128, 31, '10\n12528238 329065023 620046219 303914458 356423530 751571368 72944261 883971060 123105651 868129460', '27409624352'),
(2129, 31, '1\n84355694', '84355694'),
(2130, 31, '2\n885992042 510468669', '1906929379'),
(2131, 31, '100\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1', '100'),
(2132, 31, '100\n2 1 2 2 2 2 1 2 2 1 2 2 2 1 2 1 2 2 1 2 2 2 2 2 2 1 2 1 1 2 1 1 2 1 2 1 1 1 2 2 2 2 2 1 2 2 2 2 1 1 1 1 1 2 2 1 1 1 2 2 1 1 2 1 1 2 2 2 2 1 2 2 2 1 2 1 2 2 1 2 1 1 1 2 2 1 2 1 2 1 1 1 2 1 2 2 2 1 1 1', '2686'),
(2133, 31, '100\n1 3 2 1 1 2 1 3 2 2 3 1 1 1 2 2 1 3 3 1 1 2 2 3 2 1 3 1 3 2 1 1 3 3 2 1 2 2 2 3 2 2 3 2 2 3 2 1 3 1 1 2 1 3 2 2 1 1 1 1 1 1 3 1 2 3 1 1 1 1 1 2 3 3 1 1 1 1 2 3 3 1 3 2 2 3 2 1 3 2 2 3 1 1 3 2 3 2 3 1', '4667'),
(2134, 32, '2\n5 7', '2 5'),
(2135, 32, '3\n10 2 8', '1 8'),
(2136, 32, '6\n3 8 2 9 4 14', '6 9'),
(2137, 32, '4\n4707 7586 4221 5842', '2 5842'),
(2138, 32, '5\n3304 4227 4869 6937 6002', '4 6002'),
(2139, 32, '6\n5083 3289 7708 5362 9031 7458', '5 7708'),
(2140, 32, '7\n9038 6222 3392 1706 3778 1807 2657', '1 6222'),
(2141, 32, '8\n7062 2194 4481 3864 7470 1814 8091 733', '7 7470'),
(2142, 32, '9\n2678 5659 9199 2628 7906 7496 4524 2663 3408', '3 7906'),
(2143, 32, '2\n3458 1504', '1 1504'),
(2144, 32, '50\n9237 3904 407 9052 6657 9229 9752 3888 7732 2512 4614 1055 2355 7108 6506 6849 2529 8862 159 8630 7906 7941 960 8470 333 8659 54 9475 3163 5625 6393 6814 2656 3388 169 7918 4881 8468 9983 6281 6340 280 5108 2996 101 7617 3313 8172 326 1991', '39 9752'),
(2145, 32, '2\n2 1', '1 1'),
(2146, 32, '2\n1 2', '2 1'),
(2147, 32, '3\n10 20 30', '3 20'),
(2148, 32, '3\n10 30 20', '2 20'),
(2149, 32, '3\n20 10 30', '3 20'),
(2150, 32, '3\n20 30 10', '2 20'),
(2151, 32, '3\n30 10 20', '1 20'),
(2152, 32, '3\n30 20 10', '1 20\r\n'),
(2153, 32, '2\n1 10000', '2 1'),
(2154, 32, '2\n10000 999', '1 999'),
(2155, 32, '3\n3 4 1', '2 3'),
(2156, 32, '6\n1 2 24 6 5 7', '3 7'),
(2157, 32, '13\n21 32 4 33 12 44 14 242 13 42 3 43 100', '8 100'),
(2158, 33, '3\n1 2 3', '1'),
(2159, 33, '2\n10 10', 'Jizzax'),
(2160, 33, '1\n47', '1'),
(2161, 33, '2\n1000000000 1000000000', 'Jizzax'),
(2162, 33, '7\n7 6 5 4 3 2 1', '7'),
(2163, 33, '10\n1 1 1 1 1 1 1 1 1 1', 'Jizzax'),
(2164, 33, '4\n1000000000 100000000 1000000 1000000', 'Jizzax'),
(2165, 33, '20\n7 1 1 2 1 1 8 7 7 8 4 3 7 10 5 3 10 5 10 6', 'Jizzax'),
(2166, 33, '20\n3 3 6 9 8 2 4 1 7 3 2 9 7 7 9 7 2 6 2 7', '8'),
(2167, 33, '47\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3', '32'),
(2168, 33, '25\n73 56 65 70 57 57 49 50 65 68 54 48 66 55 55 66 60 70 47 62 63 70 62 70 63', '19'),
(2169, 33, '1\n1000000000', '1'),
(2170, 33, '3\n7 7 4', '3'),
(2171, 33, '3\n2 2 1', '3'),
(2172, 33, '3\n4 4 3', '3'),
(2173, 33, '2\n10000001 10000002', '1'),
(2174, 33, '4\n3 3 2 1', '4'),
(2175, 33, '3\n1 2 3', '1'),
(2176, 33, '2\n1000000000 100000000', '2'),
(2177, 33, '1\n99999999', '1'),
(2178, 33, '3\n5 5 3', '3'),
(2179, 33, '3\n7 7 5', '3'),
(2180, 33, '3\n3 3 1', '3'),
(2181, 33, '4\n10 10 10 1', '4'),
(2182, 33, '7\n7 4 47 100 4 9 12', 'Jizzax'),
(2183, 33, '2\n7 4', '2'),
(2184, 33, '8\n1 2 3 4 5 6 7 8', '1'),
(2185, 33, '8\n8 7 6 5 4 3 2 1', '8');

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int NOT NULL,
  `fullname` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `username` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `otm` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `course` int NOT NULL,
  `phone` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `email` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `role` varchar(12) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL DEFAULT 'user',
  `password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `fullname`, `username`, `otm`, `course`, `phone`, `email`, `role`, `password`, `created_at`) VALUES
(1, 'Xakimov Allamurod', 'samcoding', 'SamDU', 4, '998938554640', 'xakimov@gmail.com', 'admin', 'dfc84f3df8212534a9ecc0dfce41ea15', '2025-09-28 15:11:20'),
(2, 'Dilnoza Karimova', 'dilnoza_k', 'TATU', 2, '998902223344', 'dilnoza@example.com', 'user', '202cb962ac59075b964b07152d234b70', '2025-09-28 15:11:20'),
(3, 'Javohir Ismoilov', 'javohir99', 'NUU', 3, '998903334455', 'javohir@example.com', 'user', 'e10adc3949ba59abbe56e057f20f883e', '2025-09-28 15:11:20'),
(4, 'Malika Rustamova', 'malika_r', 'SamDU', 4, '998904445566', 'malika@example.com', 'user', 'e10adc3949ba59abbe56e057f20f883e', '2025-09-28 15:11:20'),
(5, 'Sardor Abdullayev', 'sardor_a', 'TATU', 2, '998905556677', 'sardor@example.com', 'user', 'e10adc3949ba59abbe56e057f20f883e', '2025-09-28 15:11:20'),
(6, 'Allamurod Xakimov', 'admin2', 'samdu', 4, '938554640', 'ozodbekmardonov@gmail.com', 'user', 'c4ca4238a0b923820dcc509a6f75849b', '2025-09-29 17:28:25'),
(7, 'xakimov allamurod', 'allamurod', 'samdu', 2, '938554640', 'xakimov2806@gmail.com', 'user', '202cb962ac59075b964b07152d234b70', '2025-10-15 08:32:36'),
(8, 'Iqbolshoh', 'Ilhomjonov', 'SamDU', 4, '+998 99 779 93 33', 'iilhomjonov777@gmail.com', 'admin', 'ae13bdec8724caa21d21bfa2f82aa8e7', '2025-10-15 10:40:12'),
(9, 'Boymatov Bobur', 'Baxriddinovich_dev', 'Samarqand Davlat Universiteti', 3, '+998507371616', 'boymatovbobur6@gmail.com', 'admin', '1319ec18661a060ad63da2bc10d30ee8', '2025-10-15 10:40:12'),
(10, 'Asliddin Sayidqulov', 'asliddin', 'SamDU', 1, '+998937286867', 'saidqulov98@bk.ru', 'user', '25d55ad283aa400af464c76d713c07ad', '2025-10-16 05:45:14'),
(14, 'Allamurod Xakimov', 'admin', 'samdu', 2, '938554640', 'allamurodxakimo2v@gmail.com', 'user', '202cb962ac59075b964b07152d234b70', '2025-10-17 22:52:00'),
(15, 'Allamurod Xakimov', 'admin22', 'samdu', 2, '938554640', 'allamurodxakimo3v@gmail.com', 'user', '202cb962ac59075b964b07152d234b70', '2025-10-17 22:55:38');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `attempts`
--
ALTER TABLE `attempts`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `attempt_results`
--
ALTER TABLE `attempt_results`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `problems`
--
ALTER TABLE `problems`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `reyting`
--
ALTER TABLE `reyting`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `tests`
--
ALTER TABLE `tests`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `username` (`username`),
  ADD UNIQUE KEY `email` (`email`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `attempts`
--
ALTER TABLE `attempts`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=118;

--
-- AUTO_INCREMENT for table `attempt_results`
--
ALTER TABLE `attempt_results`
  MODIFY `id` int NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `problems`
--
ALTER TABLE `problems`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=34;

--
-- AUTO_INCREMENT for table `reyting`
--
ALTER TABLE `reyting`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;

--
-- AUTO_INCREMENT for table `tests`
--
ALTER TABLE `tests`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2186;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
